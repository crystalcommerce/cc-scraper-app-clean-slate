{"version":3,"sources":["templates/SelectSiteResource/SelectSiteResources.module.scss","views/MyProfile/EditInfo/EditInfo.module.scss","templates/CreateEvaluatos/CreateEvaluators.module.scss","templates/EditEvaluators/EditEvaluators.module.scss","views/ManageScrapers/ManageScrapers.module.scss","components/Sidebar/Sidebar.module.scss","Layout/Layout.module.scss","views/ScrapedData/ScrapedDataTable/ScrapedDataTable.module.scss","views/ManageUsers/ManageUsers.module.scss","views/ManageUsers/EditUser/EditUser.module.scss","views/ManageTasks/ManageTasks.module.scss","views/Page404/Page404.module.scss","templates/CreateModelOptions/CreateModelOptions.module.scss","templates/EditModelOptions/EditModelOptions.module.scss","components/Main/Main.module.scss","components/SiteLogo/SiteLogo.module.scss","components/Nav/Nav.module.scss","components/Footer/Footer.module.scss","components/Card/Card.module.scss","components/EmptyCardFlex/EmptyCardFlex.module.scss","components/CodeEditor/CodeEditor.module.scss","components/Select/Select.module.scss","MainComponent.module.scss","views/ManageScrapers/RunScraperScript/RunScraperScript.module.scss","views/ManageScrapers/ScraperDetails/ScraperDetails.module.scss","templates/CreateScraperData/CreateScraperData.module.scss","views/ManageUsers/UserDetails/UserDetails.module.scss","views/ScrapedData/ScrapedData.module.scss","views/MyProfile/MyProfile.module.scss","views/ManageUsers/CreateUser/CreateUser.module.scss","hooks/useAuth.js","hooks/useActiveMenu.js","routes/index.js","components/Header/Header.js","hooks/useWindowWidth.js","components/Main/Main.js","components/SiteLogo/logo.png","components/SiteLogo/SiteLogo.js","components/Sidebar/Sidebar.js","components/Nav/Nav.js","components/Footer/Footer.js","Layout/Layout.js","components/Card/Card.js","config/index.js","views/Login/logo.png","views/Login/Login.js","hooks/useFetch.js","components/EmptyCardFlex/EmptyCardFlex.js","utilities/string/index.js","utilities/objects-array/index.js","components/MuiTable/MuiTable.js","views/Dashboard/Dashboard.js","views/ManageScrapers/ManageScrapers.js","hooks/useAccessCheck.js","components/CodeEditor/CodeEditor.js","components/Select/Select.js","templates/SelectSiteResource/SelectSiteResources.js","templates/CreateSiteResource/CreateSiteResource.js","templates/CreateScraperData/CreateScraperData.js","components/Radio/Radio.js","templates/CreateModelOptions/CreateModelOptions.js","templates/CreateEvaluatos/CreateEvaluators.js","views/ManageScrapers/CreateScraper/CreateScraper.js","views/ManageScrapers/RunScraperScript/RunScraperScript.js","templates/EditEvaluators/EditEvaluators.js","templates/EditModelOptions/EditModelOptions.js","views/ManageScrapers/ScraperDetails/ScraperDetails.js","views/ScrapedData/ScrapedData.js","views/ScrapedData/ScrapedDataTable/ScrapedDataTable.js","views/ManageUsers/ManageUsers.js","views/ManageUsers/EditUser/EditUser.js","views/ManageUsers/UserDetails/UserDetails.js","views/ManageTasks/ManageTasks.js","views/MyProfile/EditInfo/EditInfo.js","views/MyProfile/MyProfile.js","views/Page404/Page404.js","views/ManageUsers/CreateUser/CreateUser.js","utilities/index.js","MainComponent.js","theme/index.js","App.js","index.js","components/Header/Header.module.scss","components/MuiTable/MuiTable.module.scss","views/Login/Login.module.scss","views/ManageScrapers/CreateScraper/CreateScraper.module.scss","views/Dashboard/Dashboard.module.scss","templates/CreateSiteResource/CreateSiteResource.module.scss"],"names":["module","exports","useAuth","useState","isLoggedIn","setIsLoggedIn","loggedUser","setLoggedUser","window","localStorage","getItem","authToken","setAuthToken","fileToken","setFileToken","tokenExpiration","setTokenExpiration","loginMessage","setLoginMessage","history","useHistory","logout","prev","removeItem","checkLoggedIn","Date","getTime","Number","JSON","parse","location","pathname","push","useEffect","login","res","xAuthToken","xFileToken","xTokenExpiration","userInfo","statusOk","message","setItem","stringify","useActiveMenu","setActiveParentMenu","setActiveChildMenu","href","currentUrl","setCurrentUrl","listen","addEventListener","e","console","log","activeMenuHandler","parentMenus","Array","from","document","querySelectorAll","childMenus","activeParent","find","item","includes","activeChild","forEach","classList","remove","add","mainNavObjectsArr","title","path","shown","children","permissionLevel","Header","className","openMenuHandler","menuActive","windowWidth","callback","innerWidth","setWindowWidth","useWindowWidth","styles","firstName","active","onClick","bind","this","to","Main","SiteLogo","src","logo","Sidebar","Nav","navObjectsArr","nav","length","map","child","Footer","year","getFullYear","Layout","setActive","mainNav","setMainNav","filter","wrapper","Card","style","width","card","baseUrl","fileUrl","socketUrl","Login","username","setUsername","password","setPassword","loggingIn","setLoggingIn","messageType","setMessageType","abortCont","AbortController","onChangeHandler","inputName","setter","value","target","trim","submitHandler","a","preventDefault","fetch","method","headers","body","signal","then","json","jsonData","Error","catch","err","name","abort","action","onSubmit","FormControl","fullWidth","TextField","onChange","label","type","autoComplete","Button","variant","size","color","disableElevation","startIcon","disabled","CircularProgress","height","useFetch","apiEndPoint","fetchOptions","initialValue","data","setData","isLoading","setIsLoading","hasError","setHasError","fetchMessage","setFetchMessage","ok","EmptyCardFlex","toNormalString","str","previousFormat","replace","char","toUpperCase","split","toCapitalize","join","index","toCapitalizeAll","getAllObjectKeys","objects","reduce","b","Object","keys","key","isObjectUnique","obj","objectsArray","overAllResults","object","results","every","isObjectInArray","array","some","useStyles","makeStyles","root","container","maxHeight","StickyHeadTable","tableData","uniqueId","excludedColumns","classes","React","page","setPage","rowsPerPage","setRowsPerPage","rows","columns","isArray","id","align","minWidth","maxWidth","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","role","tabIndex","imagePaths","alt","textAlign","justifyContent","TablePagination","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","Dashboard","pageTitle","ManageScrapers","scrapers","isLoadingTableData","optionClickHandler","display","flexDirection","gap","_id","backgroundColor","whiteSpace","includedKeys","Divider","margin","Alert","severity","useAccessCheck","allowedPermissionLevel","go","CodeEditor2","padding","placeholder","language","fontSize","fontFamily","minHeight","border","gridAutoFlow","wordWwrap","wordBreak","theme","formControl","selectEmpty","marginTop","spacing","Select2","options","uniqueProp","optionLabelProp","selectOnchangeHandler","defaultValue","selectedOption","setSeletedOption","select","InputLabel","Select","labelId","MenuItem","selected","SelectSiteResource","selectOptions","selectedSiteResource","setSelectHandler","createReadyHandler","hasSelected","setHasSelected","siteName","siteUrl","CreateSiteResource","siteResourceHandler","siteResource","setSiteResource","setMessage","url","changeHandler","setTimeout","form","noValidate","CreateScraperData","currentValue","setScraperDataHandler","backButtonHandler","cancelHandler","scraperDetails","setScraperDetails","productBrandErrorMessage","setProductBrandErrorMessage","imagePropNameErrorMessage","setImagePropNameErrorMessage","uniqueSplitErrorMessage","setUniqueSplitErrorMessage","arrItemError","setArrItemError","splitItem","sharedItem","csvExcludedPropsItem","arrItem","setArrItem","prop","arrInputChangeHandler","addItemToArrayInObjectHandler","propName","arrName","arr","handleDeleteChipEntry","productBrand","imagePropName","imageNameObject","Chip","onDelete","deleteIcon","shared","csvExcludedProps","endIcon","RadioButtonsGroup","legend","radioOptions","setValue","FormLabel","RadioGroup","FormControlLabel","control","Radio","CreateModelSchema","setModelObjectHandler","modelObjectOptions","setModelObjectOptions","saveButtonEnabled","setSavedButtonEnabled","schema","propKey","schemaArray","setSchemaArray","addSchemaButtonDisabled","setAddSchemaButtonDisabled","schemaKey","setSchemaKey","schemaKeyType","setSchemaKeyType","schemaKeyRequired","setSchemaKeyRequired","schemaError","setSchemaError","friendlyUrlProps","immutableProps","uniqueProps","propObjectsErrMessage","setPropObjectsErrMessage","initializedProps","propObjects","setPropObjects","friendlyUrlProp","setFriendlyUrlProp","immutableProp","setImmutableProp","setUniqueProp","addSchemaHandler","schemaObject","required","deleteSchemaHandler","propObjectChangeHandler","addPropObjects","IconButton","CreateEvaluators","currentUsageValue","currentGroupIdentifierKeyValue","currentSchema","setEvaluatorObjectsHandler","setUsageHandler","setGroupIdentifierKeyHandler","evaluatorObjects","setEvaluatorObjects","submitButtonEnabled","setSubmitButtonEnabled","addEvaluatorButtonEnabled","setAddEvaluatorButtonEnabled","setCallback","setType","waitMethods","setWaitMethods","args","currentWaitMethod","setCurrentWaitMethod","addWaitMethodButtonReady","setAddWaitMethodButtonReady","waitMethodError","setWaitMethodError","showPaginated","setShowPaginated","paginated","setPaginated","objPropArgs","setObjPropArgs","objPropArgsError","setObjPropArgsError","currentPropArg","setCurrentPropArg","addObjPropArgsButtonEnabled","setAddObjPropArgsButtonEnabled","productUrlProp","setProductUrlProp","productUrlPropError","setProductUrlPropError","usage","setUsage","groupIdentifierKey","setGroupIdentifierKey","removeWaitMethodHandler","waitMethodInputChangeHandler","handleDeleteObjPropArgs","addEvaluatorObjectHandler","prv","removeEvaluatorHandler","evaluator","i","toString","fontWeight","waitMethod","prevState","multiline","CreateScraper","selectOn","setSelectOn","setSelectOptions","siteResourceReady","setSiteResourceReady","scraperDetailsReady","setScraperDetailsReady","imageUris","modelObjectOptionsReady","setModelObjectOptionsReady","recordName","pluralized","routeObjectOptions","setRouteObjectOptions","evaluatorObjectsReady","setEvaluatorObjectsReady","loading","submitObject","setSubmitObject","state","saveScraperHandler","scraperDetailsObj","boolState","modelObject","values","socket","io","RunScraperScript","useParams","scraperData","setSiteName","setProductBrand","setSiteUrl","setCsvExcludedProps","apiRoute","setApiRoute","evaluatorIndexes","setEvaluatorIndexes","scriptId","setScriptId","productsListEvaluatorUris","setProductsListEvaluatorUris","groupIdentifier","setGroupIdentifier","evaluatorArgs","setEvaluatorArgs","scriptRunning","setScriptRunning","scrapingMessage","setScrapingMessage","scrapingStatus","setScrapingStatus","downloadingZip","setDownloadingZip","savingToDb","setSavingToDb","savingDataMessage","setSavingDataMessage","savingDataStatus","setSavingDataStatus","scrapedData","setScrapedData","unscrapedData","setUnscrapedData","submitEnabled","setSubmitEnabled","currentProcess","setCurrentProcess","setCurrentScrapedProducts","rescraping","setRescraping","totalScrapedData","setTotalScrapedData","totalUnscrapedData","setTotalUnscrapedData","setCurrentShownData","productsTotal","setProductsTotal","progress","setProgress","fixingScript","setFixingScript","fixScriptButtonEnabled","setFixScriptButtonEnabled","groupIdentifierKeyChangeHandler","evaluatorUriChangeHandler","evaluatorObjectIndex","arrIndex","goBack","runScraperScriptHandler","resetStates","emit","scraperId","scriptRewriteHandler","off","on","status","toLowerCase","totalProducts","phase","downloadZipHandler","filePath","downloadUrl","aElem","createElement","setAttribute","click","saveDataHandler","subApiRoute","evaluatorIndex","removeClick","alert","removeEventListener","LinearProgress","EditEvaluators","setStatus","EditModelSchema","ScraperDetails","modalOpen","setModalOpen","editingEvaluatorObjects","setEditingEvaluatorObjects","editingModelObjectOptions","setEditingModelObjectOptions","deleteScriptHandler","modalSetter","setLoading","overflow","Modal","onClose","open","alignItems","paddingRight","ManageScrapedData","siteResources","fetchLoading","productSets","setProductSets","filteredScrapers","setFilteredScrapers","filteredProductSets","setFilteredProductSets","scraper","setScraper","productSet","setProductSet","productsData","setProductsData","dirPath","dataDirPath","deleteDataHandler","encodeURIComponent","createUrl","labelName","productData","setProductData","queryString","search","dataObject","sort","accessLevel","EditUser","user","editUserSetter","userSetter","updateStateHandler","setInitialValue","currentUser","setCurrentUser","updateButtonEnabled","setUpdateButtonEnabled","inputChangeHandler","previousState","compareData","userObject","updateUserHandler","InputLabelProps","shrink","lastName","UserDetails","userFetchError","userFetchMessage","editUserOn","setEditUserOn","editUserHandler","deleteUserHandler","loadingState","messageState","messageTypeState","EditInfo","currentUserSetter","editInforHandler","changePassword","setChangePassword","passwordMessage","setPasswordMessage","passwordMessageType","setPasswordMessageType","setFirstName","setLastName","passwordConf","setPasswordConf","cancelEditHandler","changePasswordHandler","passwordInputChangeHandler","editInfoEnabled","setEditInfoEnabled","Page404","CreateUser","setUser","setSaveButtonEnabled","usernameCheckMessage","setUsernameCheckMessage","usernameCheckLoading","setUsernameCheckLoading","usernameCheckMessageType","setUsernameCheckMessageType","checkUsername","func","wait","timeout","immediate","context","arguments","later","apply","callNow","clearTimeout","debounce","enteredUsername","checkAllFields","userId","startAdornment","InputAdornment","position","onKeyPress","code","getRoute","route","routes","main","exact","createTheme","palette","primary","blue","secondary","blueGrey","error","red","typography","button","textTransform","App","ThemeProvider","CssBaseline","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7f56b248.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-container\":\"SelectSiteResources_select-container__3WKls\",\"template-title\":\"SelectSiteResources_template-title__2zXQ0\",\"site-resource-info-container\":\"SelectSiteResources_site-resource-info-container__24gcR\",\"buttons-container\":\"SelectSiteResources_buttons-container__9gF94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"highlighted\":\"EditInfo_highlighted__2J2MI\",\"template-subtitle\":\"EditInfo_template-subtitle__2FoDz\",\"template-section-title\":\"EditInfo_template-section-title__1N92D\",\"error-message\":\"EditInfo_error-message__2g7zM\",\"success-message\":\"EditInfo_success-message__tDJSb\",\"description\":\"EditInfo_description__2q9TY\",\"buttons-container\":\"EditInfo_buttons-container__3knC5\",\"buttons-container-main\":\"EditInfo_buttons-container-main__2fddY\",\"edit-user-field-container\":\"EditInfo_edit-user-field-container__2kuUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"CreateEvaluators_main-container__3Mwii\",\"template-title\":\"CreateEvaluators_template-title__jlzs5\",\"template-subtitle\":\"CreateEvaluators_template-subtitle__1uYyG\",\"template-section-title\":\"CreateEvaluators_template-section-title__MnbBi\",\"error-message\":\"CreateEvaluators_error-message__1xoMA\",\"description\":\"CreateEvaluators_description__BUVvq\",\"buttons-container\":\"CreateEvaluators_buttons-container__1baxv\",\"added-evaluator-container\":\"CreateEvaluators_added-evaluator-container__2z2ME\",\"added-evaluator-object-container\":\"CreateEvaluators_added-evaluator-object-container__2lUyg\",\"wait-methods-container\":\"CreateEvaluators_wait-methods-container__ulx1P\",\"added-methods\":\"CreateEvaluators_added-methods__1ftW-\",\"wait-method-input-container\":\"CreateEvaluators_wait-method-input-container__sx8mE\",\"input-container-array\":\"CreateEvaluators_input-container-array__3Kbk5\",\"field-container\":\"CreateEvaluators_field-container__24H0Z\",\"evaluator-options\":\"CreateEvaluators_evaluator-options__15uu7\",\"chip-container\":\"CreateEvaluators_chip-container__2elTM\",\"evaluator-object-container\":\"CreateEvaluators_evaluator-object-container__1xGJm\",\"input-container\":\"CreateEvaluators_input-container__1Ron7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"EditEvaluators_main-container__1YmS7\",\"template-title\":\"EditEvaluators_template-title__1Lbh4\",\"template-subtitle\":\"EditEvaluators_template-subtitle__3sz0n\",\"template-section-title\":\"EditEvaluators_template-section-title__3fMdz\",\"error-message\":\"EditEvaluators_error-message__2VHCo\",\"description\":\"EditEvaluators_description__1fERk\",\"buttons-container\":\"EditEvaluators_buttons-container__H9jZR\",\"added-evaluator-container\":\"EditEvaluators_added-evaluator-container__2coZN\",\"added-evaluator-object-container\":\"EditEvaluators_added-evaluator-object-container__LLDib\",\"wait-methods-container\":\"EditEvaluators_wait-methods-container__3M5H6\",\"added-methods\":\"EditEvaluators_added-methods__2ad_Z\",\"wait-method-input-container\":\"EditEvaluators_wait-method-input-container__1fyNN\",\"input-container-array\":\"EditEvaluators_input-container-array__Mkfto\",\"field-container\":\"EditEvaluators_field-container__2LspD\",\"evaluator-options\":\"EditEvaluators_evaluator-options__dPVtE\",\"chip-container\":\"EditEvaluators_chip-container__UbV_p\",\"evaluator-object-container\":\"EditEvaluators_evaluator-object-container__3GOIp\",\"input-container\":\"EditEvaluators_input-container__1eGV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"ManageScrapers_template-title__2YLTV\",\"template-subtitle\":\"ManageScrapers_template-subtitle__BVXCN\",\"template-section-title\":\"ManageScrapers_template-section-title__2NRsn\",\"error-message\":\"ManageScrapers_error-message__3ESe9\",\"description\":\"ManageScrapers_description__Y2jK-\",\"buttons-container\":\"ManageScrapers_buttons-container__5BbiZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-sidebar\":\"Sidebar_main-sidebar__24fTX\",\"active\":\"Sidebar_active__1OuOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__2wuoi\",\"main-section\":\"Layout_main-section__2ZUlg\",\"active\":\"Layout_active__2-X12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"ScrapedDataTable_template-title__3YglP\",\"highlighted\":\"ScrapedDataTable_highlighted__Q5Zf1\",\"highlighted-2\":\"ScrapedDataTable_highlighted-2__3hy9v\",\"template-subtitle\":\"ScrapedDataTable_template-subtitle__2D3tl\",\"template-section-title\":\"ScrapedDataTable_template-section-title__1JTOS\",\"error-message\":\"ScrapedDataTable_error-message__1binN\",\"description\":\"ScrapedDataTable_description__3yswE\",\"buttons-container\":\"ScrapedDataTable_buttons-container__2nJP0\",\"field-container\":\"ScrapedDataTable_field-container__1gK9x\",\"main-container\":\"ScrapedDataTable_main-container__2-7xz\",\"action-buttons-container\":\"ScrapedDataTable_action-buttons-container__5A7U0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"ManageUsers_main-container__1kGea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"highlighted\":\"EditUser_highlighted__rTNcq\",\"template-subtitle\":\"EditUser_template-subtitle__2WdTy\",\"template-section-title\":\"EditUser_template-section-title__1307j\",\"error-message\":\"EditUser_error-message__1X9av\",\"description\":\"EditUser_description__2zEmi\",\"buttons-container\":\"EditUser_buttons-container__W-Rw2\",\"buttons-container-main\":\"EditUser_buttons-container-main__22fgT\",\"edit-user-field-container\":\"EditUser_edit-user-field-container__2EYFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"ManageTasks_template-title__1BEqz\",\"highlighted\":\"ManageTasks_highlighted__2Vli5\",\"template-subtitle\":\"ManageTasks_template-subtitle__1s2n7\",\"template-section-title\":\"ManageTasks_template-section-title__3gcIo\",\"error-message\":\"ManageTasks_error-message__RPjOa\",\"success-message\":\"ManageTasks_success-message__20638\",\"info-message\":\"ManageTasks_info-message__QFUqB\",\"description\":\"ManageTasks_description__1a6ZW\",\"main-container\":\"ManageTasks_main-container__1BG-r\",\"section-title\":\"ManageTasks_section-title__3LtuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404-container\":\"Page404_page404-container__2auMz\",\"page404-error\":\"Page404_page404-error__2KwZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"CreateModelOptions_main-container__1daZT\",\"template-title\":\"CreateModelOptions_template-title__3fxDs\",\"template-subtitle\":\"CreateModelOptions_template-subtitle__fwh1-\",\"template-section-title\":\"CreateModelOptions_template-section-title__2Bgx0\",\"model-object-container\":\"CreateModelOptions_model-object-container__27n6y\",\"schema-container\":\"CreateModelOptions_schema-container__2i2xC\",\"delete-button\":\"CreateModelOptions_delete-button__1vR74\",\"form-container\":\"CreateModelOptions_form-container__2ZZfv\",\"form\":\"CreateModelOptions_form__RKMa3\",\"input-container\":\"CreateModelOptions_input-container__Dr6hH\",\"field-container\":\"CreateModelOptions_field-container__2PohD\",\"error-message\":\"CreateModelOptions_error-message__1mBkK\",\"input-container-array\":\"CreateModelOptions_input-container-array__2F3R9\",\"description\":\"CreateModelOptions_description__3O6_q\",\"result-container\":\"CreateModelOptions_result-container__2oyEV\",\"input-container-2\":\"CreateModelOptions_input-container-2__EEkrr\",\"button-container\":\"CreateModelOptions_button-container__1NI7-\",\"buttons-container\":\"CreateModelOptions_buttons-container__11-Ps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"EditModelOptions_main-container__z3qf6\",\"template-title\":\"EditModelOptions_template-title__3FUPV\",\"template-subtitle\":\"EditModelOptions_template-subtitle__18gWl\",\"template-section-title\":\"EditModelOptions_template-section-title__7ZXd_\",\"model-object-container\":\"EditModelOptions_model-object-container__27OGn\",\"schema-container\":\"EditModelOptions_schema-container__3p-hi\",\"delete-button\":\"EditModelOptions_delete-button__2zICX\",\"form-container\":\"EditModelOptions_form-container__15Vh7\",\"form\":\"EditModelOptions_form__3exZx\",\"input-container\":\"EditModelOptions_input-container__8BZTX\",\"field-container\":\"EditModelOptions_field-container__30i8f\",\"error-message\":\"EditModelOptions_error-message__l-w33\",\"input-container-array\":\"EditModelOptions_input-container-array__329QR\",\"description\":\"EditModelOptions_description__3wez6\",\"result-container\":\"EditModelOptions_result-container__3d6V8\",\"input-container-2\":\"EditModelOptions_input-container-2__3pSz2\",\"button-container\":\"EditModelOptions_button-container__1n5xx\",\"buttons-container\":\"EditModelOptions_buttons-container__104CF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-content\":\"Main_main-content__1WeuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"site-logo\":\"SiteLogo_site-logo__3O1Xk\",\"active\":\"SiteLogo_active__37HGV\",\"selected\":\"SiteLogo_selected__3IpMb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__787aL\",\"active\":\"Nav_active__MKWbJ\",\"selected\":\"Nav_selected__2NtS_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-footer\":\"Footer_main-footer__rYZBs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__21Lki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"EmptyCardFlex_empty__1FJWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code-editor\":\"CodeEditor_code-editor__3vTSK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3F4UQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MainComponent_main__ao_Sm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"RunScraperScript_template-title__3FL1n\",\"highlighted\":\"RunScraperScript_highlighted__27QUR\",\"highlighted-2\":\"RunScraperScript_highlighted-2__NWkEQ\",\"template-subtitle\":\"RunScraperScript_template-subtitle__3L5fF\",\"template-section-title\":\"RunScraperScript_template-section-title__3cpPR\",\"error-message\":\"RunScraperScript_error-message__1HsU3\",\"description\":\"RunScraperScript_description__swYbp\",\"buttons-container\":\"RunScraperScript_buttons-container__1hl13\",\"field-container\":\"RunScraperScript_field-container__20pKW\",\"main-container\":\"RunScraperScript_main-container__2a7Nq\",\"action-buttons-container\":\"RunScraperScript_action-buttons-container__3Cjtz\",\"current-shown-data-container\":\"RunScraperScript_current-shown-data-container__3GMiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"ScraperDetails_main-container__2Xqfc\",\"label\":\"ScraperDetails_label__1RbQJ\",\"template-title\":\"ScraperDetails_template-title__1qWct\",\"highlighted\":\"ScraperDetails_highlighted__3Kkgz\",\"template-subtitle\":\"ScraperDetails_template-subtitle__1WFhj\",\"template-section-title\":\"ScraperDetails_template-section-title__80Uh4\",\"error-message\":\"ScraperDetails_error-message__dD3Q5\",\"description\":\"ScraperDetails_description__MZK7L\",\"buttons-container\":\"ScraperDetails_buttons-container__1oIln\",\"container\":\"ScraperDetails_container__3hRVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"CreateScraperData_form-container__3ZHxD\",\"template-title\":\"CreateScraperData_template-title__2vXwh\",\"error-message\":\"CreateScraperData_error-message__1xMg5\",\"form\":\"CreateScraperData_form__3-AMP\",\"input-container\":\"CreateScraperData_input-container__28sO9\",\"field-container\":\"CreateScraperData_field-container__2SqZE\",\"input-container-array\":\"CreateScraperData_input-container-array__1eguO\",\"description\":\"CreateScraperData_description__Gu0ZK\",\"result-container\":\"CreateScraperData_result-container__18Mds\",\"buttons-container\":\"CreateScraperData_buttons-container__2MI_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"UserDetails_main-container__2q_1c\",\"main-cards-container\":\"UserDetails_main-cards-container__1oOSe\",\"user-info-container\":\"UserDetails_user-info-container__3tjzZ\",\"user-info-list\":\"UserDetails_user-info-list__29kFI\",\"label\":\"UserDetails_label__1eA5V\",\"value\":\"UserDetails_value__3brZP\",\"template-title\":\"UserDetails_template-title__2I19I\",\"highlighted\":\"UserDetails_highlighted__S1wzE\",\"template-subtitle\":\"UserDetails_template-subtitle__I-D3b\",\"template-section-title\":\"UserDetails_template-section-title__l93UP\",\"error-message\":\"UserDetails_error-message__3NXV4\",\"description\":\"UserDetails_description__6L_-b\",\"buttons-container\":\"UserDetails_buttons-container__2oDMN\",\"buttons-container-main\":\"UserDetails_buttons-container-main__3-FtL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"ScrapedData_template-title__2_ASZ\",\"highlighted\":\"ScrapedData_highlighted__2VJvP\",\"highlighted-2\":\"ScrapedData_highlighted-2__1yIO1\",\"template-subtitle\":\"ScrapedData_template-subtitle__3pOXp\",\"template-section-title\":\"ScrapedData_template-section-title__3OIiA\",\"error-message\":\"ScrapedData_error-message__1NxDa\",\"description\":\"ScrapedData_description__3JwLt\",\"buttons-container\":\"ScrapedData_buttons-container__1Tso1\",\"field-container\":\"ScrapedData_field-container__K9Hoj\",\"select-container\":\"ScrapedData_select-container__1pJEZ\",\"main-container\":\"ScrapedData_main-container__yZ4o9\",\"action-buttons-container\":\"ScrapedData_action-buttons-container__2wWjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"MyProfile_main-container__3kbwf\",\"main-cards-container\":\"MyProfile_main-cards-container__2ikrq\",\"user-info-container\":\"MyProfile_user-info-container__1KMP9\",\"user-info-list\":\"MyProfile_user-info-list__1jEIv\",\"label\":\"MyProfile_label__2yrEd\",\"value\":\"MyProfile_value__24Yff\",\"template-title\":\"MyProfile_template-title__36KPb\",\"highlighted\":\"MyProfile_highlighted__2Iii0\",\"template-subtitle\":\"MyProfile_template-subtitle__20UtE\",\"template-section-title\":\"MyProfile_template-section-title__23bW2\",\"error-message\":\"MyProfile_error-message__1aGqw\",\"description\":\"MyProfile_description__y7-kC\",\"buttons-container\":\"MyProfile_buttons-container__2sjdU\",\"buttons-container-main\":\"MyProfile_buttons-container-main__2NIwi\",\"edit-user-field-container\":\"MyProfile_edit-user-field-container__2e4K4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"CreateUser_main-container__1oTyD\",\"main-cards-container\":\"CreateUser_main-cards-container__1o_Y1\",\"create-user-field-container\":\"CreateUser_create-user-field-container__1Z9oH\",\"firstName\":\"CreateUser_firstName__2MwVy\",\"lastName\":\"CreateUser_lastName__2Z2gQ\",\"username\":\"CreateUser_username__1qsnj\",\"password\":\"CreateUser_password__16V7y\",\"permissionLevel\":\"CreateUser_permissionLevel__1L6GI\",\"user-info-container\":\"CreateUser_user-info-container__1P8KV\",\"user-info-list\":\"CreateUser_user-info-list__2nN93\",\"label\":\"CreateUser_label__3NaFh\",\"value\":\"CreateUser_value__1nVoW\",\"template-title\":\"CreateUser_template-title__2Ro-V\",\"highlighted\":\"CreateUser_highlighted__3Hcq7\",\"template-subtitle\":\"CreateUser_template-subtitle__2k-RY\",\"template-section-title\":\"CreateUser_template-section-title__3Gk3I\",\"error-message\":\"CreateUser_error-message__3z9bV\",\"success-message\":\"CreateUser_success-message__NNpnh\",\"info-message\":\"CreateUser_info-message__2x9hu\",\"description\":\"CreateUser_description__5kkZL\",\"buttons-container\":\"CreateUser_buttons-container__-qMxs\",\"buttons-container-main\":\"CreateUser_buttons-container-main__OWLak\"};","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function useAuth()   {\r\n    let [isLoggedIn, setIsLoggedIn] = useState(false),\r\n        [loggedUser, setLoggedUser] = useState(null),\r\n        [authToken, setAuthToken] = useState(window.localStorage.getItem(\"x-auth-token\")),\r\n        [fileToken, setFileToken] = useState(window.localStorage.getItem(\"x-file-token\")),\r\n        [tokenExpiration, setTokenExpiration] = useState(window.localStorage.getItem(\"x-token-expiration\") || 0),\r\n        [loginMessage, setLoginMessage] = useState(null),\r\n        history = useHistory();\r\n        \r\n\r\n    const logout = () => {\r\n        setIsLoggedIn(prev => false);\r\n        setLoginMessage(prev => null);\r\n        setAuthToken(prev => null);\r\n        setFileToken(prev => null);\r\n        setLoggedUser(prev => null);\r\n        setTokenExpiration(prev => 0);\r\n\r\n        window.localStorage.removeItem(\"x-auth-token\");\r\n        window.localStorage.removeItem(\"x-file-token\");\r\n        window.localStorage.removeItem(\"x-logged-user\");\r\n        window.localStorage.removeItem(\"x-token-expiration\");\r\n    }\r\n\r\n\r\n    const login = (res) => {\r\n        let {authToken : xAuthToken, fileToken : xFileToken, tokenExpiration : xTokenExpiration, userInfo, statusOk, message} = res;\r\n\r\n        if(statusOk)    {\r\n            setIsLoggedIn(prev => statusOk);\r\n            setLoginMessage(prev => message);\r\n            setAuthToken(prev => {\r\n                window.localStorage.setItem(\"x-auth-token\", xAuthToken);\r\n                return xAuthToken\r\n            });\r\n            setFileToken(prev => {\r\n                window.localStorage.setItem(\"x-file-token\", xFileToken);\r\n                return xFileToken\r\n            });\r\n            setLoggedUser(prev => {\r\n                window.localStorage.setItem(\"x-logged-user\", JSON.stringify(userInfo, null, 4));\r\n                return userInfo\r\n            });\r\n            setTokenExpiration(prev => {\r\n                window.localStorage.setItem(\"x-token-expiration\", Number(xTokenExpiration));\r\n                return Number(xTokenExpiration);\r\n            });\r\n\r\n            \r\n\r\n        }  else {\r\n            setIsLoggedIn(prev => false);\r\n            logout();\r\n\r\n        }\r\n\r\n        return {authToken, fileToken, loggedUser, isLoggedIn, loginMessage};\r\n        \r\n    }\r\n\r\n    const checkLoggedIn = () => {\r\n        \r\n        if( new Date().getTime() < Number(tokenExpiration) )   {\r\n            setIsLoggedIn(prev => {\r\n                setLoggedUser(prev => {\r\n                    return JSON.parse(window.localStorage.getItem(\"x-logged-user\"));\r\n                });\r\n                return true;\r\n            });\r\n\r\n\r\n            if(window.location.pathname === \"/login\")   {\r\n                history.push(\"/\");\r\n            }\r\n\r\n\r\n        } else  {\r\n            setIsLoggedIn(prev => false);\r\n            setLoginMessage(prev => null);\r\n            setAuthToken(prev => null);\r\n            setFileToken(prev => null);\r\n            setLoggedUser(prev => null);\r\n            setTokenExpiration(prev => 0)\r\n\r\n            window.localStorage.removeItem(\"x-auth-token\");\r\n            window.localStorage.removeItem(\"x-file-token\");\r\n            window.localStorage.removeItem(\"x-logged-user\");\r\n            window.localStorage.removeItem(\"x-token-expiration\");\r\n            history.push(\"/login\");\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    useEffect(() => {\r\n        checkLoggedIn();\r\n\r\n        // return () => console.log(\"Authentication checked.\");\r\n    }, [isLoggedIn]);\r\n\r\n\r\n    return {authToken, fileToken, loggedUser, isLoggedIn, loginMessage, login, logout, checkLoggedIn};\r\n\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function useActiveMenu() {\r\n    let setActiveParentMenu = useState(null)[1],\r\n        setActiveChildMenu = useState(null)[1],\r\n        [currentUrl, setCurrentUrl] = useState(window.location.href),\r\n        history = useHistory();\r\n        \r\n\r\n    history.listen((location) => { \r\n        setCurrentUrl(prev => window.location.href);\r\n    });\r\n\r\n    window.addEventListener(\"click\", function() {\r\n        setCurrentUrl(prev => window.location.href);\r\n    });\r\n\r\n    window.addEventListener(\"load\", function() {\r\n        setCurrentUrl(prev => window.location.href);\r\n    });\r\n\r\n    window.addEventListener('popstate', function (e) {\r\n        setCurrentUrl(prev => window.location.href);\r\n        console.log(\"this fired...\")\r\n    });\r\n\r\n    const activeMenuHandler = () => {\r\n        let parentMenus = Array.from(document.querySelectorAll(`.main-sidebar > .main-nav > ul > li > a`)),\r\n            childMenus = Array.from(document.querySelectorAll(`.main-sidebar > .main-nav > ul > li > ul > li a`));\r\n\r\n\r\n        let activeParent = parentMenus.find(item => currentUrl.includes(item.href)),\r\n            activeChild = childMenus.find(item => item.href === window.location.href);\r\n\r\n        if(activeParent) {\r\n            parentMenus.forEach(item => item.classList.remove(`active-parent`));\r\n            childMenus.forEach(item => item.classList.remove(`active-child`));\r\n            setActiveParentMenu(prev => activeParent);\r\n            activeParent.classList.add(`active-parent`);\r\n        } else  {\r\n            parentMenus.forEach(item => item.classList.remove(`active-parent`));\r\n            childMenus.forEach(item => item.classList.remove(`active-child`));\r\n        }\r\n        if(activeChild) {\r\n            setActiveChildMenu(prev => activeChild)\r\n            activeChild.classList.add(`active-child`);\r\n        };\r\n\r\n\r\n        return () => {\r\n            parentMenus.forEach(item => item.classList.remove(`active-parent`));\r\n            childMenus.forEach(item => item.classList.remove(`active-child`));\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        activeMenuHandler();\r\n\r\n    }, [currentUrl]);\r\n\r\n\r\n    return { activeMenuHandler, currentUrl, setCurrentUrl };\r\n}\r\n\r\n","const mainNavObjectsArr = [    \r\n    {\r\n        title : \"Manage Scrapers\",\r\n        path : \"/manage-scrapers\",\r\n        shown : true,\r\n        children : [],\r\n        permissionLevel : 2,\r\n    },\r\n    {\r\n        title : \"Scraped / Stored Data\",\r\n        path : \"/scraped-data\",\r\n        children : [],\r\n        permissionLevel : 2,\r\n\r\n    },\r\n    {\r\n        title : \"Manage Users\",\r\n        path : \"/manage-users\",\r\n        children : [\r\n            // {\r\n            //     title : \"Create a User\",\r\n            //     path : \"/manage-users/create-user\"\r\n            // },\r\n            // {\r\n            //     title : \"Update a User\",\r\n            //     path : \"/manage-users/update-user/:id\"\r\n            // },\r\n            // {\r\n            //     title : \"Delete a User\",\r\n            //     path : \"/manage-users/delete-user/:id\"\r\n            // }\r\n        ],\r\n        permissionLevel : 4,\r\n\r\n    },\r\n    {\r\n        title : \"Manage Tasks\",\r\n        path : \"/manage-tasks\",\r\n        children : [\r\n            // @ic@yumi1828\r\n            // {\r\n            //     title : \"Create a Task\",\r\n            //     path : \"/manage-tasks/create-scraper\"\r\n            // },\r\n            // {\r\n            //     title : \"Update a Task\",\r\n            //     path : \"/manage-tasks/update-scraper/:id\"\r\n            // },\r\n            // {\r\n            //     title : \"Delete a Task\",\r\n            //     path : \"/manage-tasks/delete-scraper/:id\"\r\n            // }\r\n        ],\r\n        permissionLevel : 2,\r\n    }\r\n];\r\n\r\n\r\nexport default mainNavObjectsArr;","import { Link } from \"react-router-dom\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport useWindowWidth from \"../../hooks/useWindowWidth\";\r\n\r\n// styles\r\nimport styles from \"./Header.module.scss\";\r\n\r\nexport default function Header({loggedUser, className, openMenuHandler, menuActive}) {\r\n\r\n    let windowWidth = useWindowWidth(() => {})\r\n\r\n    const { logout } = useAuth();\r\n    \r\n    const logoutHandler = (e) => {\r\n        // e.preventDefault();\r\n        logout();\r\n    }\r\n\r\n    const menuClickHandler = (e) => {\r\n        openMenuHandler();\r\n    }\r\n\r\n    return  (\r\n        <header className={`${styles[\"main-header\"]} ${className}`}>\r\n            \r\n            <h1>Welcome to CC Scraper App, <span>{loggedUser.firstName}</span>!</h1>\r\n            {windowWidth < 768 && \r\n                <div className={styles[\"button-container\"]}>\r\n                    <div className={`${styles[\"nav-button\"]} ${menuActive ? styles.active : null}`} onClick={menuClickHandler.bind(this)}>\r\n                        <div className={styles[\"bar-container\"]}>\r\n                            <div className={styles[\"bar\"]}></div>\r\n                            <div className={styles[\"bar\"]}></div>\r\n                            <div className={styles[\"bar\"]}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <nav className={styles[\"header-nav\"]}>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/my-profile\">My Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/login\" onClick={logoutHandler}>Logout</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useWindowWidth(callback)    {\r\n    let [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", function(){\r\n            setWindowWidth(window.innerWidth);\r\n        });\r\n        window.addEventListener(\"load\", function(){\r\n            setWindowWidth(window.innerWidth);\r\n        });\r\n\r\n        callback();\r\n    });\r\n\r\n    return windowWidth;\r\n}\r\n\r\n\r\n\r\n","import styles from \"./Main.module.scss\";\r\n\r\nexport default function Main({children})    {\r\n    \r\n    return (\r\n        <main className={styles[\"main-content\"]}>\r\n            {children}\r\n        </main>\r\n    )\r\n\r\n}","export default __webpack_public_path__ + \"static/media/logo.07fa326a.png\";","// core\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// styles\r\nimport styles from \"./SiteLogo.module.scss\";\r\n\r\nimport logo from \"./logo.png\";\r\n\r\nexport default function SiteLogo()  {\r\n\r\n    return (\r\n        <h1 className={styles[\"site-logo\"]}>\r\n            <Link to=\"/\">\r\n            <img src={logo} />\r\n            </Link>\r\n            <Link to=\"/\">\r\n                CC Scraper App\r\n            </Link>\r\n        </h1>\r\n    )\r\n\r\n}","import styles from \"./Sidebar.module.scss\";\r\n\r\nexport default function Sidebar({children, className, menuActive})   {\r\n    return (\r\n        <aside className={`${styles[\"main-sidebar\"]} ${className} ${menuActive ? styles.active : \"\"}`}>\r\n            {children}\r\n        </aside>\r\n    )\r\n}","import {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styles from \"./Nav.module.scss\";\r\nimport \"./Nav.scss\";\r\n\r\n\r\nexport default function Nav({navObjectsArr, className}) {\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <nav className={`${styles.nav} ${className} nav`}>\r\n            <ul>\r\n                {navObjectsArr.length > 0 && \r\n                \r\n                    navObjectsArr.map(item => {\r\n                        return (\r\n                            <li key={item.path}>\r\n                                <Link key={item.path} to={item.path}>{item.title}</Link>\r\n                                {item.children.length > 0 && \r\n                                    <ul>\r\n                                        {item.children.map(child => {\r\n                                            return (\r\n                                                <li key={child.path}><Link to={child.path}>{child.title}</Link></li>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                }\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\n","import styles from \"./Footer.module.scss\";\r\n\r\nexport default function Footer({children})    {\r\n\r\n    const year = new Date().getFullYear();\r\n\r\n    return (\r\n        <footer className={styles[\"main-footer\"]}>\r\n            {children}\r\n            <p>&copy; CC Scraper App {year}. All Rights Reserved.</p>\r\n        </footer>\r\n    );\r\n}","// hooks\r\nimport { useState, useEffect } from \"react\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport useActiveMenu from \"../hooks/useActiveMenu\";\r\n\r\n// routes\r\nimport mainNavObjectsArr from \"../routes\";\r\n\r\n// components\r\nimport Header from \"../components/Header\";\r\nimport Main from \"../components/Main\";\r\nimport SiteLogo from \"../components/SiteLogo\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Nav from \"../components/Nav\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n\r\n\r\n// styles\r\nimport styles from \"./Layout.module.scss\";\r\n\r\nexport default function Layout({ children })  {\r\n\r\n    let [active, setActive] = useState(true),\r\n        [mainNav, setMainNav] = useState([])\r\n    \r\n    useActiveMenu();\r\n\r\n    const { isLoggedIn, loggedUser } = useAuth();\r\n\r\n    const openMenuHandler = (e) => {\r\n        setActive(prev => !prev);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(loggedUser)  {\r\n            setMainNav(prev => {\r\n                return mainNavObjectsArr.filter(item => item.permissionLevel <= loggedUser.permissionLevel);\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }, [loggedUser])\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {isLoggedIn && loggedUser && \r\n            <>\r\n                <div className={styles[\"main-section\"] } onClick={() => {\r\n                    if(active) setActive(prev => false);\r\n                }}>\r\n                    <Header loggedUser={loggedUser} className=\"card\" openMenuHandler={openMenuHandler} menuActive={active}></Header>\r\n                    <Main>{children}</Main>\r\n                    <Footer></Footer>\r\n                </div>\r\n                <Sidebar className=\"card main-sidebar\" menuActive={active}>\r\n                    <SiteLogo></SiteLogo>\r\n                    <Nav navObjectsArr={mainNav} className=\"main-nav\" />\r\n                </Sidebar>\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n}","// styles\r\nimport styles from \"./Card.module.scss\";\r\n\r\nexport default function Card({ children, className, style, width })  {\r\n    return (\r\n        <div className={`${styles.card} ${className}`} style={{...style, width}}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","// decoupled\r\n// export const baseUrl = \"http://localhost:7747\";\r\n// export const fileUrl = `${baseUrl}/cc-files/`;\r\n// export const socketUrl = `${baseUrl}`;\r\n\r\n\r\n// http://ccscraperapp-env-1.eba-shgqnvwf.us-east-2.elasticbeanstalk.com/\r\n\r\n// combined local\r\nexport const baseUrl = \"\";\r\nexport const fileUrl = `${baseUrl}/cc-files/`;\r\nexport const socketUrl = `${baseUrl}`;\r\n\r\n// decoupled localhost\r\n// export const baseUrl = \"http://localhost:8080\";\r\n// export const fileUrl = `${baseUrl}/cc-files/`;\r\n// export const socketUrl = `${baseUrl}`;\r\n\r\n\r\n// decoupled = backend : production, frontend : local,\r\n// const domainName = \"ccscraperapp-env-3.eba-curuzm92.us-east-2.elasticbeanstalk.com\";\r\n// const protocol = \"http://\";\r\n// const wsProtocol = \"ws://\"\r\n// export const baseUrl = `${protocol}${domainName}`;\r\n// export const fileUrl = `${baseUrl}/cc-files/`;\r\n// export const socketUrl = `${wsProtocol}${domainName}`;","export default __webpack_public_path__ + \"static/media/logo.07fa326a.png\";","// hooks\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport { Button, TextField, FormControl, CircularProgress } from '@material-ui/core';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\n\r\n//config\r\nimport { baseUrl } from \"../../config/\"; \r\nimport logo from \"./logo.png\";\r\n\r\n\r\nimport styles from \"./Login.module.scss\";\r\n\r\nexport default function Login() {\r\n    \r\n    const { login } = useAuth();\r\n\r\n    let [username, setUsername] = useState(\"\"),\r\n        [password, setPassword] = useState(\"\"),\r\n        [loginMessage, setLoginMessage] = useState(null),\r\n        [loggingIn, setLoggingIn] = useState(null),\r\n        [messageType, setMessageType] = useState(null),\r\n        history = useHistory(),\r\n        abortCont = new AbortController();\r\n    \r\n\r\n\r\n    const onChangeHandler = (inputName, e) => {\r\n        let setter = inputName === \"username\" ? setUsername : setPassword,\r\n            value = e.target.value.trim();\r\n\r\n        setter(prev => value);\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setLoggingIn(prev => true);\r\n        setMessageType(prev => \"info\");\r\n        \r\n        \r\n        fetch(`${baseUrl}/api/login`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n            },\r\n            body : JSON.stringify({username, password}),\r\n            signal : abortCont.signal\r\n        })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(jsonData => {\r\n            let {statusOk, message} = jsonData;\r\n            if(!statusOk)    {\r\n                throw Error(message);\r\n                \r\n            } else  {\r\n                login(jsonData);\r\n                history.push(\"/\");\r\n                setLoggingIn(false);\r\n                setLoginMessage(prev => \"You have successfully logged in.\");\r\n                setMessageType(prev => \"success\");\r\n\r\n            }\r\n        })\r\n        .catch(err => {\r\n            if(err.name !== \"AbortError\")   {\r\n                setLoggingIn(false);\r\n                setLoginMessage(err.message);\r\n                setMessageType(prev => \"error\");\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        return () => abortCont.abort();\r\n    }, []);\r\n    \r\n    return (\r\n        <div className={styles.login}>\r\n            <div className={styles[\"main-container\"]}>\r\n                \r\n                <Card className={styles[\"form-container\"]}>\r\n                    <div className={styles[\"logo-container\"]}>\r\n                        <img src={logo} className={styles[\"logo\"]} /><h1 className={styles[\"site-name\"]}>CC Scraper App</h1>\r\n                    </div>\r\n                    \r\n                    <form action=\"\" onSubmit={submitHandler.bind(this)}>\r\n                    \r\n                        <FormControl fullWidth>\r\n                            <TextField value={username}onChange={onChangeHandler.bind(this, \"username\")} label=\"Username\" />\r\n                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                        </FormControl>\r\n                        <FormControl fullWidth>\r\n                            <TextField type=\"password\" autoComplete=\"on\" value={password}onChange={onChangeHandler.bind(this, \"password\")} label=\"Password\" />\r\n                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                        </FormControl>\r\n                        {!loggingIn && <Button variant=\"contained\" size=\"large\" color=\"primary\" disableElevation startIcon={<ExitToAppIcon />} type=\"submit\">Login</Button>}\r\n                        {loggingIn && <Button variant=\"contained\" size=\"large\" color=\"primary\" disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>} type=\"submit\">Logging in...</Button>}\r\n                    </form>\r\n                    {loginMessage && messageType === \"success\" && <p className={styles[\"template-section-title\"]}>{loginMessage}</p>}\r\n                    {loginMessage && messageType === \"error\" && <p className={styles[\"error-message\"]}>{loginMessage}</p>}\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import {useState, useEffect} from \"react\";\r\nimport  { baseUrl } from \"../config\";\r\nimport useAuth from \"./useAuth\";\r\n\r\nexport default function useFetch(apiEndPoint, fetchOptions, initialValue = [])  {\r\n\r\n    let [data, setData] = useState(initialValue),\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [hasError, setHasError] = useState(false),\r\n        [fetchMessage, setFetchMessage] = useState(null),\r\n        { authToken } = useAuth(),\r\n        abortCont = new AbortController();\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        setFetchMessage(prev => \"We are currently fetching the data from the database.\");\r\n        setHasError(false);\r\n        if(authToken)   {\r\n            fetch(`${baseUrl}${apiEndPoint}`, {\r\n                ...fetchOptions,\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                signal : abortCont.signal\r\n            })\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(\"We couldn't fetch the data\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(jsonData => {\r\n                setIsLoading(false);\r\n                setHasError(false);\r\n                setFetchMessage(prev => \"We have successfully fetched the data.\");\r\n                setData(prev => jsonData);\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setIsLoading(false);\r\n                    setHasError(true);\r\n                    setFetchMessage(err.message);\r\n                }\r\n            })\r\n\r\n            return () => abortCont.abort();\r\n        }\r\n        \r\n    }, [authToken]);\r\n\r\n    return {data, setData, isLoading, hasError, fetchMessage};\r\n}","import styles from \"./EmptyCardFlex.module.scss\";\r\n\r\nexport default function EmptyCardFlex({ children, style, className }) {\r\n    return (\r\n        <div className={`${styles[\"empty\"]} ${className || \"\"}`}style={style}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","// some non-db related helper functions\r\n\r\n\r\nexport function toUrl(str) {\r\n    return Array.from(str.toLowerCase().trim().replace(/[^a-zA-Z0-9]/g, \" \").split(\" \")).reduce((a, b) => {\r\n        if(b.trim() !== \"\") {\r\n            a.push(b);\r\n        }\r\n        return a;\r\n    }, []).join(\"-\");\r\n}\r\n\r\nexport function enumerate(arr, and = false)  {\r\n    arr = [...arr];\r\n    if(arr.length > 1)  {\r\n        let lastIndex = arr.pop();\r\n        return `${arr.join(\", \")}, ${and ? \"and\" : \"or\"} ${lastIndex}`;  \r\n    } else  {\r\n        return arr[0];\r\n    }\r\n}\r\n\r\nexport function toCamelCase(str, url=false, initialCap=false)  {\r\n    let separator = url ? \"-\" : \" \";\r\n    return str.toLowerCase().split(`${separator}`).map((item, index) => index === 0 && !initialCap ? item : toCapitalize(item)).join(\"\");\r\n}\r\n\r\nexport function toNormalString(str, previousFormat = \"camel-case\")    {\r\n    if(previousFormat === \"camel-case\") {\r\n        str = str.replace(/([A-Z])/g, (char) => ` ${char.toUpperCase()}`);\r\n    } else if(previousFormat === \"underscored\") {\r\n        str = str.split(\"_\").map(item => toCapitalize(item)).join(\" \");\r\n    } else  {\r\n        str = str.split(\"-\").map(item => toCapitalize(item)).join(\" \");\r\n    }\r\n    return toCapitalize(str);\r\n}\r\n\r\nexport function toCapitalize(str) {\r\n    return str.split(\"\").map((char, index) =>  index === 0 ? char.toUpperCase() : char).join(\"\").trim();\r\n}\r\n\r\nexport function toCapitalizeAll(str)   {\r\n    return str.split(\" \").map(item => toCapitalize(item)).join(\" \");\r\n}\r\n\r\n\r\n    \r\n\r\n\r\n\r\n     ","import { toNormalString } from \"../string\";\r\n\r\n\r\nexport function getAllObjectKeys(objects) {\r\n    return objects.reduce((a, b) => {\r\n        for(let key of Object.keys(b))  {\r\n            if(!a.includes(key))    {\r\n                a.push(key);\r\n            }\r\n        }\r\n        return a;\r\n    }, []);\r\n}\r\n\r\nexport function sortObjectsByDate(arr)  {\r\n    arr.sort((a, b) => {\r\n        let date1 = new Date(a.releasedDate).getTime(),\r\n            date2 = new Date(a.releasedDate).getTime();\r\n        return date1 < date2 ? -1 : date1 > date2 ? 1 : 0; \r\n    })\r\n}\r\n\r\n\r\nexport function objectToString(object, delimiter=\", \") {\r\n    let output = [];\r\n    for(let key in object)  {\r\n        output.push(`${toNormalString(key)} : ${toNormalString(object[key]).toUpperCase()}`);\r\n    }\r\n    return output.join(delimiter);\r\n}\r\n\r\nexport function isObjectUnique(obj, objectsArray, keys=[])   {   \r\n    let overAllResults = []; \r\n    for(let object of objectsArray)  {\r\n        let results = [];\r\n        if(keys.length) {\r\n            for(let key of keys)    {\r\n                results.push(obj[key] !== object[key]);\r\n            }\r\n        } else  {\r\n            for(let key in obj) {\r\n                results.push(obj[key] !== object[key]);\r\n            }\r\n        }\r\n        \r\n        overAllResults.push(results.every(res => res));\r\n    }\r\n    return overAllResults.every(res => res);\r\n}\r\n\r\nexport function filterUnlistedObjects(localObjects, allObjects, keys=[])    {\r\n    return allObjects.filter(obj => isObjectUnique(obj, localObjects, keys));\r\n}\r\n\r\nexport function isObjectInArray(object, array = []) {\r\n    return array.some(item => {\r\n        let results = [];\r\n        for(let key in object)    {\r\n            results.push(object[key] === item[key]);\r\n        }\r\n        return results.every(res => res);\r\n    });\r\n}\r\n\r\nexport function sortArrayByObjectProp(arr, prop, asc = true)   {\r\n    return arr.sort((a, b) => {\r\n        if(!isNaN(Number(a[prop]))) {\r\n            return asc ? Number(a[prop]) - Number(b[prop]) : Number(b[prop]) - Number(a[prop]);\r\n        } else  {\r\n            if(asc) {\r\n                return a[prop] < b[prop] ? -1 : a[prop] > b[prop] ? 1 : 0; \r\n            } else  {\r\n                return a[prop] < b[prop] ? 1 : a[prop] > b[prop] ? -1 : 0;\r\n            }\r\n            \r\n        }\r\n    });\r\n}\r\n\r\nexport function getNestedObjectsArray({dataArray, relationalProp, uniqueProp, sortByProp = null, ascSortOrder = true})  {\r\n    \r\n    if(!dataArray.length)   {\r\n        return;\r\n    }\r\n\r\n    sortByProp = sortByProp ? sortByProp : Object.keys(dataArray[0]).includes(\"id\") ? \"id\" : Object.keys(dataArray[0])[0];\r\n\r\n    let sortedArray = [];\r\n    dataArray.forEach(item => item.children = []);\r\n\r\n\r\n    function recursiveNesting(dataArray, relationalProp, uniqueProp) {\r\n        let parentArray = [],\r\n            childrenArray = [];\r\n\r\n        dataArray.forEach(data => {\r\n            let children = dataArray.filter(item => data[uniqueProp] === item[relationalProp]),\r\n                parent = dataArray.find(item => data[relationalProp] === item[uniqueProp]);    \r\n            if(!children.length)    {\r\n                if(!parent) {\r\n                    sortedArray.push(data);\r\n                } else  {\r\n                    childrenArray.push(data);\r\n                }\r\n            } else{\r\n                parentArray.push(data);\r\n            }\r\n        });\r\n\r\n        parentArray = parentArray.map(parent => {\r\n            parent.children.push(...childrenArray.filter(child => child[relationalProp] === parent[uniqueProp]));\r\n            parent.children = sortArrayByObjectProp(parent.children, sortByProp, ascSortOrder);\r\n            return parent;\r\n        });\r\n\r\n        sortArrayByObjectProp(parentArray, sortByProp, ascSortOrder);\r\n\r\n        if(parentArray.length)  {\r\n            recursiveNesting(parentArray, relationalProp, uniqueProp, sortByProp, ascSortOrder);\r\n        }   \r\n    }\r\n    \r\n\r\n    recursiveNesting(dataArray, relationalProp, uniqueProp);\r\n\r\n    return sortArrayByObjectProp(sortedArray, sortByProp, ascSortOrder);\r\n    \r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n// config\r\nimport { fileUrl } from '../../config/';\r\n\r\n// utils\r\nimport { toCapitalizeAll, toNormalString } from \"../../utilities/string/index\"\r\nimport { getAllObjectKeys } from \"../../utilities/objects-array/index\";\r\n\r\n// hooks\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\n// css\r\nimport styles from \"./MuiTable.module.scss\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 770,\r\n    },\r\n});\r\n  \r\nexport default function StickyHeadTable({tableData, uniqueId, excludedColumns}) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(25);\r\n    const { fileToken } = useAuth();\r\n\r\n    const rows = tableData;\r\n    const columns = Array.isArray(tableData) && tableData.length > 0 ? getAllObjectKeys(tableData).map(item => {\r\n        return {\r\n            id: item,\r\n            label: item === \"_id\" ? \"ID\" : item === \"imagePaths\" ? \"Images\" : toCapitalizeAll(toNormalString(item)),\r\n            align : 'center',\r\n            minWidth : 170,\r\n            maxWidth : 400,\r\n        }\r\n    }).filter(item => {\r\n        return !excludedColumns.includes(item.id);\r\n    }) : [];\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Paper className={`${classes.root}`}>\r\n        <TableContainer className={`${classes.container} ${styles[\"mui-table-container\"]}`}>\r\n            <Table stickyHeader aria-label=\"sticky table\" className={styles[\"mui-table\"]}>\r\n            <TableHead className={styles[\"thead\"]}>\r\n                {columns.length > 0 && \r\n                <TableRow>\r\n                {columns.filter(column => column.id !== uniqueId).map((column) => (\r\n                    <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, color : \"#3a9eb5\" }}\r\n                    >\r\n                    {column.label}\r\n                    </TableCell>\r\n                ))}\r\n                </TableRow>\r\n                }   \r\n            </TableHead>\r\n            \r\n            <TableBody className={styles[\"tbody\"]}>\r\n                {rows.length > 0 && rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={uniqueId ? row[uniqueId] : index}>\r\n                        \r\n                    {columns.filter(column => column.id !== uniqueId).map((column) => {\r\n                        const value = row[column.id];\r\n\r\n                        if(column.id === \"imagePaths\")  {\r\n                            let imagePaths = value.map(item => item.trim());\r\n                            return  (\r\n                                <TableCell className={styles[\"image-container\"]}key={column.id} align={column.align}>\r\n                                    {imagePaths.length > 1 && <div className={styles[\"image-slider-container\"]}>\r\n                                        <div className={styles[\"image-slider-inner\"]} >\r\n                                            {imagePaths.map(item => {\r\n                                                return (\r\n                                                    <div className={styles[\"image-container\"]}>\r\n                                                        <img key={item} src={`${fileUrl}${fileToken}?filePath=${item}`} alt=\"\" />\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>}\r\n                                    {imagePaths.length < 2 && imagePaths.map(item => {\r\n                                        return (\r\n                                            <img key={item} src={`${fileUrl}${fileToken}?filePath=${item}`} alt=\"\" />\r\n                                        );\r\n                                    })}\r\n                                </TableCell>\r\n                            );\r\n                        } else  {\r\n                            \r\n                            return (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                    <div className={styles[\"table-cell\"]} style={{ minWidth: column.minWidth, textAlign : column.align, justifyContent : column.align }}>\r\n                                        {value || \"\"}\r\n                                    </div>\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n                    })}\r\n                    </TableRow>\r\n                );\r\n                })}\r\n            </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n        </Paper>\r\n    );\r\n}","// core\r\nimport { useHistory } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\n\r\n// hooks\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport useActiveMenu from \"../../hooks/useActiveMenu\";\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../components/MuiTable\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button } from '@material-ui/core';\r\nimport AddUserIcon from '@material-ui/icons/PersonAdd';\r\nimport ListAlt from '@material-ui/icons/ListAlt';\r\n\r\nimport styles from \"./Dashboard.module.scss\";\r\n\r\n\r\nexport default function Dashboard({pageTitle}) {\r\n\r\n    let history = useHistory(),\r\n        { activeMenuHandler } = useActiveMenu();\r\n\r\n    useEffect(() => {\r\n        history.push(\"/manage-scrapers/\");\r\n\r\n        // activeMenuHandler();\r\n    })\r\n\r\n    return  (\r\n        <>  \r\n            <EmptyCardFlex className={styles[\"main-container\"]}>\r\n                <h1 className=\"page-title\">{pageTitle}</h1>\r\n                <EmptyCardFlex className={styles[\"grid-container\"]}>\r\n\r\n                    <Card className={styles[\"data-container\"]}>\r\n\r\n                    </Card>\r\n                    <Card className={styles[\"users-container\"]}>\r\n\r\n                    </Card>\r\n\r\n                    <Card className={styles[\"scrapers-container\"]}>\r\n\r\n                    </Card>\r\n\r\n                    <Card className={styles[\"profile-container\"]}>\r\n\r\n                    </Card>\r\n                </EmptyCardFlex>\r\n            </EmptyCardFlex>\r\n        </>\r\n    )\r\n\r\n}","// core\r\nimport { useHistory } from \"react-router\";\r\n\r\n// hooks\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../components/MuiTable\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Add from '@material-ui/icons/Add';\r\nimport PlayIcon from '@material-ui/icons/PlayArrow';\r\nimport ListAlt from '@material-ui/icons/ListAlt';\r\n\r\n\r\n// styles\r\nimport styles from \"./ManageScrapers.module.scss\";\r\n\r\n// url;\r\nimport { getAllObjectKeys } from \"../../utilities/objects-array\";\r\n\r\n\r\nexport default function ManageScrapers({pageTitle}) {\r\n\r\n    let { loggedUser } = useAuth(),\r\n        history = useHistory(),\r\n        {data : scrapers, isLoading : isLoadingTableData} = useFetch(\"/api/scrapers\"),\r\n        tableData = scrapers.map(item => {\r\n            const optionClickHandler = (value) => {\r\n                history.push(value);\r\n            }\r\n\r\n            return {\r\n                ...item, \r\n                // action : <DropdownButton size=\"small\" dropDownOptions={dropDownOptions} optionClickHandler={optionClickHandler} />\r\n                action : <div className={styles[\"action-column\"]} style={{display: \"flex\", flexDirection : \"row\", gap : \".7rem\", justifyContent: \"center\"}}>\r\n                    <Button \r\n                        \r\n                        onClick={optionClickHandler.bind(null, `/manage-scrapers/run-script/${item._id}`)}\r\n                        startIcon={<PlayIcon />} \r\n                        style={{backgroundColor: \"#4fbf4f\", color : \"white\", whiteSpace : \"nowrap\", minWidth : \"125px\", maxWidth : \"250px\"}}\r\n                        size=\"small\">Run the Script</Button>  \r\n                    {loggedUser.permissionLevel >= 3 && <Button \r\n                        onClick={optionClickHandler.bind(null, `/manage-scrapers/${item._id}`)}\r\n                        startIcon={<ListAlt />} \r\n                        size=\"small\" \r\n                        style={{backgroundColor: \"rgb(85 159 171)\", color : \"white\", whiteSpace : \"nowrap\", minWidth : \"125px\", maxWidth : \"250px\"}}>View Details</Button>}</div>\r\n            }\r\n        }),\r\n        includedKeys = [\"_id\", \"siteName\", \"productBrand\", \"groupIdentifierKey\", \"scraperType\", \"apiRoute\", \"action\", \"anotherAction\"],\r\n        excludedColumns = getAllObjectKeys(tableData).filter(key => !includedKeys.includes(key));\r\n        \r\n    \r\n    const createScraperButtonClickHandler = (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/manage-scrapers/create-scraper/\");\r\n    }\r\n    \r\n\r\n    return  (\r\n        <>  \r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            <EmptyCardFlex flexDirection=\"column\">\r\n                <Card>\r\n                    <div className={styles[\"buttons-container\"]}>\r\n                        {loggedUser && loggedUser.permissionLevel >= 3 && <Button onClick={createScraperButtonClickHandler} type=\"button\" variant=\"contained\" size=\"medium\" color=\"primary\" disableElevation startIcon={<Add />} >\r\n                            Create a new Scraper\r\n                        </Button>}\r\n                    </div>\r\n                    {isLoadingTableData && \r\n                        <>\r\n                            <Divider style={{ margin : \"1.4rem 0\"}}></Divider>\r\n                            <Alert severity=\"info\"><CircularProgress style={{height: \"20px\", width: \"20px\"}}></CircularProgress> Loading the Scraper Script table</Alert>\r\n                        </>\r\n                    }\r\n                    {\r\n                        tableData.length > 0 && \r\n                        <>\r\n                            <Divider style={{ margin : \"1.4rem 0\"}}></Divider>\r\n                            <h6 className={styles[\"template-subtitle\"]}>These are the current available scripts</h6>\r\n                            <MuiTable tableData={tableData} uniqueId=\"_id\" excludedColumns={excludedColumns}></MuiTable>\r\n                        </>\r\n                    }    \r\n                </Card>\r\n            </EmptyCardFlex>  \r\n        </>\r\n    )\r\n\r\n}","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport useAuth from \"./useAuth\";\r\n\r\nexport default function useAccessCheck(allowedPermissionLevel)  {\r\n    let { loggedUser } = useAuth(),\r\n        history = useHistory();\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if(loggedUser && loggedUser.permissionLevel < allowedPermissionLevel)   {\r\n            history.go(-1);\r\n        }\r\n\r\n    }, [loggedUser]);\r\n}","import CodeEditor from '@uiw/react-textarea-code-editor';\r\nimport styles from \"./CodeEditor.module.scss\";\r\n\r\nexport default function CodeEditor2({onChange, padding, value, style, placeholder, disabled}) {\r\n  \r\n    return (\r\n        <>\r\n        {!disabled && <CodeEditor\r\n            value={value}\r\n            language=\"js\"\r\n            placeholder={placeholder || \"You can now write some JS code...\"}\r\n            onChange={onChange}\r\n            padding={padding || 15}\r\n            className={styles[\"code-editor\"]}\r\n            style={{\r\n                fontSize: 14,\r\n                backgroundColor: \"#f5f5f5\",\r\n                color : \"#333\",\r\n                fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\r\n                minHeight : \"500px\",\r\n                border : \"1px solid #dedede\",\r\n                display : \"grid\",\r\n                gridAutoFlow : \"row\",\r\n                minWidth : \"250px\",\r\n                maxWidth : \"100%\",\r\n                wordWwrap: \"break-word\",\r\n                wordBreak:\" break-all\",\r\n                whiteSpace : \"pre-wrap\",\r\n                ...style\r\n            }}\r\n        />}\r\n        {disabled && <CodeEditor\r\n            value={value}\r\n            language=\"js\"\r\n            placeholder={placeholder || \"You can now write some JS code...\"}\r\n            onChange={onChange}\r\n            padding={padding || 15}\r\n            disabled\r\n            style={{\r\n                fontSize: 14,\r\n                backgroundColor: \"#f5f5f5\",\r\n                color : \"#333\",\r\n                fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\r\n                minHeight : \"500px\",\r\n                border : \"1px solid #dedede\",\r\n                minWidth : \"250px\",\r\n                maxWidth : \"100%\",\r\n                display : \"grid\",\r\n                gridAutoFlow : \"row\",\r\n                wordWwrap: \"break-word\",\r\n                wordBreak:\" break-all\",\r\n                whiteSpace : \"pre-wrap\",\r\n                ...style\r\n            }}\r\n        />}\r\n        </>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport styles from \"./Select.module.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n    //   margin: theme.spacing(1),\r\n      minWidth: 250,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nexport default function Select2({label, options, uniqueProp, optionLabelProp, selectOnchangeHandler, defaultValue})    {\r\n    const classes = useStyles();\r\n    const [selectedOption, setSeletedOption] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        setSeletedOption(prev => e.target.value);\r\n        selectOnchangeHandler(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(defaultValue) {\r\n            setSeletedOption(defaultValue[uniqueProp]);\r\n        }\r\n    }, [defaultValue, uniqueProp])\r\n\r\n    return (\r\n        <FormControl className={`${classes.formControl} ${styles.select}`}>\r\n            <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\r\n            <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={selectedOption}\r\n            onChange={handleChange}\r\n            >   \r\n                {options.length > 0 && options.map(item => {\r\n                    return (\r\n                        <MenuItem key={item[uniqueProp]} value={item[uniqueProp]} selected>{item[optionLabelProp]}</MenuItem>\r\n                    )\r\n                })}\r\n                {options.length === 0 && options.map(item => {\r\n                    return (\r\n                        <MenuItem disabled key={item[uniqueProp]} value={item[uniqueProp]}>{item[optionLabelProp]}</MenuItem>\r\n                    )\r\n                })}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}","// core\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// styles\r\nimport styles from \"./SelectSiteResources.module.scss\";\r\nimport { Button } from '@material-ui/core';\r\nimport NavigateNext from '@material-ui/icons/NavigateNext';\r\nimport Create from '@material-ui/icons/Create';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\n\r\n// components\r\nimport Select from \"../../components/Select\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SelectSiteResource({selectOptions, selectedSiteResource, selectOnchangeHandler, setSelectHandler, createReadyHandler})    {\r\n\r\n    let [hasSelected, setHasSelected] = useState(false),\r\n        history = useHistory()\r\n\r\n\r\n    const selectButtonHandler = (e) => {\r\n        e.preventDefault();\r\n        createReadyHandler();\r\n    };\r\n\r\n    const changeHandler = (value) =>   {\r\n        setHasSelected(prev => true);\r\n        selectOnchangeHandler(value);\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        history.push(\"/manage-scrapers\")\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(selectedSiteResource.siteName !== \"\")    {\r\n            setHasSelected(prev => true);\r\n        }\r\n    }, [selectedSiteResource]);\r\n\r\n    return (\r\n        <div className={styles[\"select-container\"]}>\r\n            <h6 className={styles[\"template-title\"]}>Select a Site Resource.</h6>\r\n            <div>\r\n                <Select defaultValue={selectedSiteResource} selectOnchangeHandler={changeHandler} label=\"Select a Site Resource\" options={selectOptions} uniqueProp=\"_id\" optionLabelProp=\"siteName\"></Select>\r\n                \r\n            </div>\r\n\r\n            {selectedSiteResource && selectedSiteResource.siteName !== \"\" && <div className={styles[\"site-resource-info-container\"]}>\r\n                <p>Site Name : {selectedSiteResource.siteName}</p>\r\n                <p>Site Url : {selectedSiteResource.siteUrl}</p>\r\n            </div>}\r\n\r\n            <div className={styles[\"buttons-container\"]}>\r\n                <Button onClick={cancelHandler} variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />}>Cancel</Button>\r\n                {!hasSelected && <Button  variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<NavigateNext />}>Use Selected Resource</Button>}\r\n                {hasSelected && <Button onClick={selectButtonHandler.bind(this)} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<NavigateNext />}>Use Selected Resource</Button>}\r\n                <Button onClick={setSelectHandler.bind(this, false)} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />}>Create a New Site Resource</Button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}   \r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\n// Components\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\n\r\n// config\r\nimport { baseUrl } from \"../../config\";\r\n\r\n// styles\r\nimport styles from \"./CreateSiteResource.module.scss\";\r\n\r\n\r\nexport default function CreateSiteResource({siteResourceHandler, setSelectHandler, createReadyHandler}) {\r\n\r\n    let [siteResource, setSiteResource] = useState({siteName : \"\", siteUrl : \"\"}),\r\n        [message, setMessage] = useState(null),\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [messageType, setMessageType] = useState(null),\r\n        { authToken } = useAuth(),\r\n        url = `${baseUrl}/api/site-resources`,\r\n        abortCont = new AbortController();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n\r\n        let { siteName, siteUrl } = siteResource;\r\n        if((siteName.trim().length) && (siteUrl.trim().length)) {\r\n            setMessage(null);\r\n            setMessageType(null);\r\n            setIsLoading(true);\r\n\r\n            fetch(url, {\r\n                method : \"POST\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken\r\n                },\r\n                body : JSON.stringify(siteResource),\r\n                signal : abortCont.signal\r\n            })\r\n                .then(res => {\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    if(data.statusOk)   {\r\n                        setMessage('you have successfully saved the data');\r\n                        setMessageType(\"success\");\r\n                        siteResourceHandler(data.data);\r\n                        setTimeout(() => createReadyHandler(), 777);\r\n                    } else  {\r\n                        throw Error(`Data NOT SAVED : ${data.message}`);\r\n                    }\r\n                    setIsLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        setMessage(err.message);\r\n                        setMessageType(\"error\");\r\n                        setIsLoading(false);\r\n                    }\r\n                });\r\n        } else  {\r\n            setMessage(prev => \"Please make sure that the Site Name and Site URL fields are not empty.\");\r\n            setMessageType(prev => \"error\");\r\n        }\r\n\r\n        \r\n    }   \r\n\r\n\r\n    const changeHandler = (inputName, e) => {\r\n        setSiteResource(prev => ({...prev, [inputName] : e.target.value}));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // clearing memory leaks on unmount.\r\n        return () => abortCont.abort();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles[\"form-container\"]}>\r\n            <h6 className={styles[\"template-title\"]}>Create a new Site Resource</h6>\r\n            <form onSubmit={submitHandler} className={styles.form} noValidate autoComplete=\"off\">\r\n                <div className={styles[\"input-container\"]}>\r\n                    <TextField onChange={changeHandler.bind(this, \"siteName\")} label=\"Site Name\" />\r\n                    <TextField onChange={changeHandler.bind(this, \"siteUrl\")} id=\"siteUrl\" label=\"Site URL\" />\r\n                </div>\r\n                \r\n                {true && \r\n                    <div className={styles[\"buttons-container\"]}>\r\n                    {!isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />} >\r\n                        Save\r\n                    </Button>}\r\n                    {isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<SaveIcon />} >\r\n                        Saving...\r\n                    </Button>}\r\n                    {!isLoading && <Button onClick={setSelectHandler.bind(this, true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                        Cancel\r\n                    </Button>}\r\n                    {isLoading && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation disabled startIcon={<Cancel />} >\r\n                        Cancel...\r\n                    </Button>}\r\n                    </div>\r\n                }\r\n            </form>\r\n            {message && \r\n                <>\r\n                {messageType === \"error\" && \r\n                    <p style={{color : \"red\"}}>{message}</p>\r\n                }\r\n                {messageType === \"success\" &&\r\n                    <p style={{color : \"green\"}}>{message}</p>\r\n                }\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl } from '@material-ui/core';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport NextIcon from '@material-ui/icons/NavigateNext';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\n\r\n// styles\r\nimport styles from \"./CreateScraperData.module.scss\";\r\n\r\nexport default function CreateScraperData({currentValue, setScraperDataHandler, backButtonHandler, cancelHandler}) {\r\n\r\n    let [scraperDetails, setScraperDetails] = useState(currentValue),\r\n        [productBrandErrorMessage, setProductBrandErrorMessage] = useState(null),\r\n        [imagePropNameErrorMessage, setImagePropNameErrorMessage] = useState(null),\r\n        [uniqueSplitErrorMessage, setUniqueSplitErrorMessage] = useState(null),\r\n        [arrItemError, setArrItemError] = useState({}),\r\n        [arrItem, setArrItem] = useState({\r\n            splitItem : \"\",\r\n            sharedItem : \"\",\r\n            csvExcludedPropsItem : \"\",\r\n        });\r\n        // objectKeys = [getAllObjectKeys];\r\n\r\n\r\n    const submitHandler =(e) => {\r\n        e.preventDefault();\r\n        let { productBrand, imagePropName, imageNameObject } = scraperDetails;\r\n        if(productBrand && imagePropName && imageNameObject.split.length > 0)   {\r\n            setProductBrandErrorMessage(null);\r\n            setUniqueSplitErrorMessage(null);\r\n            setImagePropNameErrorMessage(null);\r\n\r\n            setScraperDataHandler(scraperDetails, true);\r\n        } else  {\r\n            setScraperDataHandler(scraperDetails, false);\r\n            if(!productBrand)   {\r\n                setProductBrandErrorMessage(\"Product Brand is required.\");\r\n            }\r\n            if(!imagePropName)   {\r\n                setImagePropNameErrorMessage(\"Image Prop Name is required.\");\r\n            }\r\n            if(!imageNameObject.split.length)   {\r\n                setUniqueSplitErrorMessage(\"It is required to at least have a single Unique / Split Property.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const changeHandler = (prop, e) => {\r\n        setScraperDetails(prev => ({...prev, [prop] : e.target.value}));\r\n    }\r\n\r\n    const arrInputChangeHandler = (prop, e) => {\r\n        let keys = Object.keys(arrItemError),\r\n            key = keys.find(item => prop.includes(item));\r\n        setArrItemError(prev => {\r\n            let obj = {...prev};\r\n            obj[key] = null;\r\n            return obj;\r\n        })\r\n        setArrItem(prev => ({...prev, [prop] : e.target.value}));\r\n    }\r\n\r\n    const addItemToArrayInObjectHandler = (propName, arrName = null, e) => {\r\n        e.preventDefault();\r\n        let value;\r\n        if(arrName) {\r\n            value = arrItem[`${arrName}Item`];\r\n            if(value.trim() !== \"\") {\r\n                setArrItem(prev => ({...prev, [`${arrName}Item`] : \"\"}));\r\n            }\r\n            \r\n        } else  {\r\n            value = arrItem[`${propName}Item`];\r\n            if(value.trim() !== \"\") {\r\n                setArrItem(prev => ({...prev, [`${propName}Item`] : \"\"}));\r\n            }\r\n        }\r\n        if(value.trim() !== \"\") {\r\n            setScraperDetails(prev => {\r\n                if(value.trim().length) {\r\n                    if(arrName) {\r\n                        let arr = [...prev[propName][arrName]];\r\n                        if(!arr.includes(value))    {\r\n                            arr.push(value)\r\n                        } else  {\r\n                            setArrItemError(prev => {\r\n                                return {\r\n                                    ...prev,\r\n                                    [arrName] : `We already have \"${value}\" in ${arrName} array of data.`\r\n                                };\r\n                            });\r\n                        }\r\n                        return {\r\n                            ...prev, \r\n                            [propName] : {\r\n                                ...prev[propName],\r\n                                [arrName] : arr\r\n                            }\r\n                        };\r\n                    } else  {\r\n                        let arr = [...prev[propName]];\r\n                        if(!arr.includes(value))    {\r\n                            arr.push(value)\r\n                        } else  {\r\n                            setArrItemError(prev => {\r\n                                return {\r\n                                    ...prev,\r\n                                    [propName] : `We already have \"${value}\" in ${propName} array of data.`\r\n                                };\r\n                            });\r\n                        }\r\n                        return {\r\n                            ...prev, \r\n                            [propName] : arr,\r\n                        };\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    const handleDeleteChipEntry = (propName, arrName = null, value, e) => {\r\n        e.preventDefault();\r\n        \r\n        setScraperDetails(prev => {\r\n            if(value.trim().length) {\r\n                if(arrName) {\r\n                    let arr = prev[propName][arrName].filter(item => item !== value);\r\n\r\n                    return {\r\n                        ...prev, \r\n                        [propName] : {\r\n                            ...prev[propName],\r\n                            [arrName] : arr\r\n                        }\r\n                    };\r\n                } else  {\r\n                    let arr = prev[propName].filter(item => item !== value);\r\n\r\n                    return {\r\n                        ...prev, \r\n                        [propName] : arr,\r\n                    };\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [arrItemError])\r\n\r\n    return (\r\n        <div className={`${styles[\"form-container\"]}`}>\r\n            <h6 className={styles[\"template-title\"]}>Create Scraper Details</h6>\r\n            <form className={styles.form} onSubmit={submitHandler}>\r\n                <div className={styles[\"input-container\"]}>\r\n                    <div className={styles[\"field-container\"]}>\r\n                        <FormControl fullWidth>\r\n                            <TextField value={scraperDetails.productBrand} onChange={changeHandler.bind(this, \"productBrand\")} label=\"Product Brand\" />\r\n                        </FormControl>\r\n                        {productBrandErrorMessage && <p className={styles[\"error-message\"]}>{productBrandErrorMessage}</p>}\r\n                    </div>\r\n                    <div className={styles[\"field-container\"]}>\r\n                        <FormControl fullWidth>\r\n                            <TextField value={scraperDetails.imagePropName} onChange={changeHandler.bind(this, \"imagePropName\")} label=\"Image Prop Name\" />\r\n                        </FormControl>\r\n                        {imagePropNameErrorMessage && <p className={styles[\"error-message\"]}>{imagePropNameErrorMessage}</p>}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Array containers : split */}\r\n                <div className={styles[\"input-container-array\"]}>\r\n                    <p className={styles[\"description\"]}>Unique Properties of product to be used as part of the image name.</p>\r\n                    <div className={styles[\"result-container\"]}>\r\n                        {scraperDetails.imageNameObject.split.length > 0 && \r\n                            scraperDetails.imageNameObject.split.map((item, index) => {\r\n                                return (\r\n                                    <Chip\r\n                                        key={`${item}-${index}`}\r\n                                        label={item}\r\n                                        onDelete={handleDeleteChipEntry.bind(this, \"imageNameObject\", \"split\", item)}\r\n                                        deleteIcon={<Cancel />}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        <div className={styles[\"field-container\"]}>\r\n                            <TextField value={arrItem.splitItem} onChange={arrInputChangeHandler.bind(this, \"splitItem\")} fullWidth label=\"Unique / Split\"  />\r\n                            {uniqueSplitErrorMessage && <p className={styles[\"error-message\"]}>{uniqueSplitErrorMessage}</p>}\r\n                            {arrItemError.split !== null && <p className={styles[\"error-message\"]}>{arrItemError.split}</p>}\r\n                        </div>\r\n                        <Button onClick={addItemToArrayInObjectHandler.bind(this, \"imageNameObject\", \"split\")} type=\"button\" variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Array containers : shared */}\r\n                <div className={styles[\"input-container-array\"]}>\r\n                    <p className={styles[\"description\"]}>Shared Properties of the product to be used as part of the image name.</p>\r\n                    <div className={styles[\"result-container\"]}>\r\n                        {scraperDetails.imageNameObject.shared.length > 0 && \r\n                            scraperDetails.imageNameObject.shared.map((item, index) => {\r\n                                return (\r\n                                    <Chip\r\n                                        key={`${item}-${index}`}\r\n                                        label={item}\r\n                                        onDelete={handleDeleteChipEntry.bind(this, \"imageNameObject\", \"shared\", item)}\r\n                                        deleteIcon={<Cancel />}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        <div className={styles[\"field-container\"]}>\r\n                            <TextField fullWidth value={arrItem.sharedItem} onChange={arrInputChangeHandler.bind(this, \"sharedItem\")} label=\"Shared\" />\r\n                            {arrItemError.shared !== null && <p className={styles[\"error-message\"]}>{arrItemError.shared}</p>}\r\n                        </div>\r\n                        <Button onClick={addItemToArrayInObjectHandler.bind(this, \"imageNameObject\", \"shared\")} type=\"button\" variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Array containers : csv excluded props */}\r\n                <div className={styles[\"input-container-array\"]}>\r\n                    <p className={styles[\"description\"]}>Excluded Properties when creating the CSV file.</p>\r\n                    <div className={styles[\"result-container\"]}>\r\n                        {scraperDetails.csvExcludedProps.length > 0 && \r\n                            scraperDetails.csvExcludedProps.map((item, index) => {\r\n                                return (\r\n                                    <Chip\r\n                                        key={`${item}-${index}`}\r\n                                        label={item}\r\n                                        onDelete={handleDeleteChipEntry.bind(this, \"csvExcludedProps\", null, item)}\r\n                                        deleteIcon={<Cancel />}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        <div className={styles[\"field-container\"]}>\r\n                            <TextField value={arrItem.csvExcludedPropsItem} onChange={arrInputChangeHandler.bind(this, \"csvExcludedPropsItem\")} fullWidth label=\"CSV Excluded Props\" />\r\n                            {arrItemError.csvExcludedProps !== null && <p className={styles[\"error-message\"]}>{arrItemError.csvExcludedProps}</p>}\r\n                        </div>\r\n                        <Button onClick={addItemToArrayInObjectHandler.bind(this, \"csvExcludedProps\", null)} type=\"button\" variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles[\"message\"]}>\r\n\r\n                </div>\r\n                <div className={styles[\"buttons-container\"]}>\r\n                    <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"button\" onClick={backButtonHandler} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation endIcon={<NextIcon />} >\r\n                        Next\r\n                    </Button>\r\n                </div>\r\n                \r\n            </form>            \r\n        </div>    \r\n    )\r\n}","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nexport default function RadioButtonsGroup({legend, radioOptions, onChange, defaultValue}) {\r\n  const [value, setValue] = React.useState(defaultValue || radioOptions[1].value);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">{legend}</FormLabel>\r\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n            {\r\n                radioOptions.length  > 0 && radioOptions.map(item => {\r\n                    return (\r\n                        <FormControlLabel value={item.value} key={item.value} control={<Radio />} label={ item.label } />\r\n                    );\r\n                })\r\n            }\r\n        </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { isObjectUnique } from \"../../utilities/objects-array\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl } from '@material-ui/core';\r\nimport NextIcon from '@material-ui/icons/NavigateNext';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport Select from \"../../components/Select\";\r\nimport RadioButtonsGroup from \"../../components/Radio\";\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// styles \r\nimport styles from \"./CreateModelOptions.module.scss\";\r\n\r\nexport default function CreateModelSchema({currentValue, setModelObjectHandler, cancelHandler, backButtonHandler}) {\r\n\r\n    let selectOptions = [\r\n            { name : \"String\" },\r\n            { name : \"Array\" },\r\n        ],\r\n        radioOptions = [\r\n            { value : \"true\", label : \"True\" },\r\n            { value : \"false\", label : \"False\" },\r\n        ],\r\n        [modelObjectOptions, setModelObjectOptions] = useState(currentValue),\r\n        [saveButtonEnabled, setSavedButtonEnabled] = useState(false),\r\n        [schemaArray, setSchemaArray] = useState(Object.keys(modelObjectOptions.schema).map(propKey => {\r\n            return {key : propKey, ...modelObjectOptions.schema[propKey]}\r\n        })),\r\n        [addSchemaButtonDisabled, setAddSchemaButtonDisabled] = useState(true),\r\n        [schemaKey, setSchemaKey] = useState(\"\"),\r\n        [schemaKeyType, setSchemaKeyType] = useState(\"String\"),\r\n        [schemaKeyRequired, setSchemaKeyRequired] = useState(\"false\"),\r\n        [schemaError, setSchemaError] = useState(\"\"),\r\n\r\n\r\n        // model initialized props \r\n        [propObjectsErrMessage, setPropObjectsErrMessage] = useState({\r\n            friendlyUrlProps : null,\r\n            immutableProps : null,\r\n            uniqueProps : null,\r\n        }),\r\n        [propObjects, setPropObjects] = useState({\r\n            friendlyUrlProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"friendlyUrlProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"friendlyUrlProps\"))[\"friendlyUrlProps\"]] : [],\r\n            immutableProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"immutableProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"immutableProps\"))[\"immutableProps\"]] : [],\r\n            uniqueProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"uniqueProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"uniqueProps\"))[\"uniqueProps\"]] : [],\r\n        }),\r\n        [friendlyUrlProp, setFriendlyUrlProp] = useState(\"\"),\r\n        [immutableProp, setImmutableProp] = useState(\"\"),\r\n        [uniqueProp, setUniqueProp] = useState(\"\");\r\n\r\n    // model schema event handlers \r\n    const inputChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        setSchemaKey(prev => e.target.value);\r\n        if(e.target.value.trim() !== \"\")    {\r\n            setAddSchemaButtonDisabled(prev => false);\r\n            setSchemaError(prev => false);\r\n        } else  {\r\n            setAddSchemaButtonDisabled(prev => true);\r\n        }\r\n    }\r\n\r\n    const selectOnchangeHandler = (value) => {\r\n        setSchemaKeyType(prev => value);\r\n    }\r\n\r\n    const radioChangeHandler = (value) => {\r\n        setSchemaKeyRequired(prev => value);\r\n    }\r\n\r\n    const addSchemaHandler = (e) => {\r\n        e.preventDefault();\r\n        if(schemaKey && schemaKey.length > 0) {\r\n\r\n            let schemaObject = {key : schemaKey, type : schemaKeyType, required : schemaKeyRequired};\r\n\r\n            if(isObjectUnique(schemaObject, schemaArray, [\"key\"])) {\r\n                setSchemaArray(prev => {                    \r\n                    let arr = [...prev, schemaObject];\r\n                    return arr;\r\n                });\r\n            } else  {\r\n                setSchemaError('We already have this schema...');\r\n            }\r\n            setSchemaKey(prev => \"\");\r\n            // setSchemaKeyType(prev => \"String\");\r\n            setSchemaKeyRequired(prev => \"false\");\r\n            setAddSchemaButtonDisabled(prev => true);\r\n        }\r\n    }\r\n\r\n    const deleteSchemaHandler = (key, e) => {\r\n        e.preventDefault();\r\n        setSchemaArray(prev => {\r\n            let arr = prev.slice().filter(item => item.key !== key);\r\n            return arr;\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // initializedPropsHandler\r\n\r\n\r\n    const handleDeleteChipEntry = (propName, arrItem, e) => {\r\n        e.preventDefault();\r\n\r\n        setPropObjects(prev => {\r\n            let obj = {...prev},\r\n                arr = obj[propName].filter(item => item !== arrItem);\r\n            return {...obj, [propName] : arr};\r\n        });\r\n        \r\n    }   \r\n\r\n    const propObjectChangeHandler = (setter, propName, e) => {\r\n        setter(e.target.value);\r\n        setPropObjectsErrMessage(prev => {\r\n            return {...prev, [propName] : null};\r\n        })\r\n    }\r\n\r\n    const addPropObjects = (propName, value, setter, e) => {\r\n        e.preventDefault();\r\n\r\n        if(value.trim() !== \"\")    {\r\n            \r\n            if(!propObjects[propName].includes(value)) {\r\n                \r\n                setPropObjects(prev => {\r\n                    let obj = {...prev};\r\n                    obj[propName].push(value);\r\n                    return obj;\r\n                });\r\n            } else  {\r\n                setPropObjectsErrMessage(prev => {\r\n                    return {...prev, [propName] : `We already have \"${value}\" property name in ${propName}`}\r\n                });\r\n            }\r\n        }\r\n        setter(prev => \"\");\r\n    }\r\n\r\n\r\n\r\n    // submit handler\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setModelObjectOptions(prev => {\r\n            let obj = {...prev},\r\n                initializedProps = [];\r\n            \r\n            for(let key in propObjects) {\r\n                initializedProps.push({[key] : propObjects[key]});\r\n            }\r\n            \r\n            obj.schema = schemaArray.reduce((a, b) => {\r\n                    a[b.key] = {\r\n                        type : b.type,\r\n                        required : b.required,\r\n                    };\r\n\r\n                    return a;\r\n                }, {});\r\n\r\n            obj.initializedProps = initializedProps;\r\n            setModelObjectHandler(obj, true);\r\n            return obj;\r\n        });\r\n        \r\n    }  \r\n\r\n    useEffect(() => {\r\n        if(schemaArray.length)  {\r\n            setSavedButtonEnabled(prev => true);\r\n        } else  {\r\n            setSavedButtonEnabled(prev => false);\r\n        }\r\n    }, [schemaArray]);\r\n\r\n    return (\r\n        <form className={styles[\"main-container\"]} onSubmit={submitHandler}>\r\n            <EmptyCardFlex className={styles[\"model-object-container\"]}>\r\n                <Card className={styles[\"create-model-card\"]}> \r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <h6 className={styles[\"template-title\"]}>Create Model Options</h6>\r\n                        <div className={styles.form} >\r\n                        <h6 className={styles[\"template-section-title\"]}>Add DB Model Schema</h6>\r\n                            <div className={styles[\"input-container\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <FormControl fullWidth>\r\n                                        <TextField value={schemaKey} onChange={inputChangeHandler} label=\"Schema Property Name\" />\r\n                                        {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>}\r\n                                    </FormControl>\r\n                                    <FormControl fullWidth>\r\n                                        <Select defaultValue={selectOptions[0]} selectOnchangeHandler={selectOnchangeHandler} label=\"Shema Property Type\" options={selectOptions} uniqueProp=\"name\" optionLabelProp=\"name\" ></Select>\r\n                                    </FormControl>\r\n                                    <FormControl fullWidth>\r\n                                        <RadioButtonsGroup radioOptions={radioOptions} legend=\"Is Value Required?\" onChange={radioChangeHandler} />\r\n                                    </FormControl>\r\n                                    {!addSchemaButtonDisabled && \r\n                                        <Button onClick={addSchemaHandler.bind(this)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Add />} >\r\n                                            Add Schema Property\r\n                                        </Button>\r\n                                    }\r\n                                    {addSchemaButtonDisabled && \r\n                                        <Button onClick={addSchemaHandler.bind(this)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disabled disableElevation startIcon={<Add />} >\r\n                                            Add Schema Property\r\n                                        </Button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </Card>\r\n                {\r\n                    schemaArray.length > 0 && \r\n                    <Card className={styles[\"schema-container\"]}>\r\n                        <h6 className={styles[\"template-subtitle\"]}>Added Model Schemas</h6>\r\n                        <ul>\r\n                        {schemaArray.map(item => {\r\n                            let {key, type, required} = item;\r\n                            return (\r\n                                <li key={key}>\r\n                                    <span>Key : {key}</span>\r\n                                    <span>Type : {type}</span>\r\n                                    <span>Required : {required}</span>\r\n                                    \r\n                                    <IconButton onClick={deleteSchemaHandler.bind(this, key)} className={styles[\"delete-button\"]} color=\"default\"  component=\"span\">\r\n                                    <Cancel />\r\n                                    </IconButton>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                        </ul>\r\n                    </Card>\r\n                }\r\n            </EmptyCardFlex>\r\n            <EmptyCardFlex className={styles[\"model-object-container\"]}>\r\n                <Card className={styles[\"create-model-card\"]}> \r\n                <div className={`${styles[\"form-container\"]}`}>\r\n                   \r\n                    <div className={styles.form}>\r\n                        <h6 className={styles[\"template-section-title\"]}>Set the Initialized Properties</h6>\r\n\r\n\r\n                        {/* Array containers : uniqueProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n                            <p className={styles[\"description\"]}>Unique Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.uniqueProps.length > 0 && \r\n                                    propObjects.uniqueProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"uniqueProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={uniqueProp} onChange={propObjectChangeHandler.bind(this, setUniqueProp, \"uniqueProps\")} fullWidth label=\"Unique Properties\" />\r\n                                    {propObjectsErrMessage.uniqueProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.uniqueProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {uniqueProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"uniqueProps\", uniqueProp, setUniqueProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!uniqueProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"uniqueProps\", uniqueProp, setUniqueProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Array containers : immutableProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n\r\n                            <p className={styles[\"description\"]}>Immutable Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.immutableProps.length > 0 && \r\n                                    propObjects.immutableProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"immutableProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={immutableProp} onChange={propObjectChangeHandler.bind(this, setImmutableProp, \"immutableProps\")} fullWidth label=\"Immutable Properties\" />\r\n                                    {propObjectsErrMessage.immutableProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.immutableProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {immutableProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"immutableProps\", immutableProp, setImmutableProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!immutableProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"immutableProps\", immutableProp, setImmutableProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Array containers : friendlyUrlProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n                            <p className={styles[\"description\"]}>Friendly URL Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.friendlyUrlProps.length > 0 && \r\n                                    propObjects.friendlyUrlProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"friendlyUrlProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={friendlyUrlProp} onChange={propObjectChangeHandler.bind(this, setFriendlyUrlProp, \"friendlyUrlProps\")} fullWidth label=\"Friendly URL Properties\" />\r\n                                    {propObjectsErrMessage.friendlyUrlProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.friendlyUrlProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {friendlyUrlProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"friendlyUrlProps\", friendlyUrlProp, setFriendlyUrlProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!friendlyUrlProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"friendlyUrlProps\", friendlyUrlProp, setFriendlyUrlProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>            \r\n                </div>    \r\n                </Card> \r\n                \r\n            </EmptyCardFlex>\r\n            <Card>\r\n                <div className={styles[\"buttons-container\"]}>\r\n                    <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                            Cancel\r\n                    </Button>\r\n                    <Button type=\"button\" onClick={backButtonHandler} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>\r\n                    \r\n                    {saveButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation endIcon={<NextIcon />} >\r\n                        Next\r\n                    </Button>}\r\n                    {!saveButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation endIcon={<NextIcon />} >\r\n                        Next\r\n                    </Button>}\r\n                    \r\n                </div>\r\n            </Card>\r\n        </form>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { isObjectInArray } from \"../../utilities/objects-array\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl, Divider } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport Create from '@material-ui/icons/Create';\r\nimport Select from \"../../components/Select\";\r\nimport RadioButtonsGroup from \"../../components/Radio\";\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CodeEditor from \"../../components/CodeEditor/\";\r\n\r\n// styles\r\nimport styles from \"./CreateEvaluators.module.scss\";\r\n\r\nexport default function CreateEvaluators({currentValue, currentUsageValue, currentGroupIdentifierKeyValue, currentSchema, setEvaluatorObjectsHandler, setUsageHandler, setGroupIdentifierKeyHandler, cancelHandler, backButtonHandler})   {\r\n\r\n\r\n    let radioOptions = [\r\n            { value : \"list\", label : \"List\" },\r\n            { value : \"single\", label : \"Single\" },\r\n        ],\r\n        selectOptions = [\r\n            { name : \"True\", value : true },\r\n            { name : \"False\", value : false },\r\n        ],\r\n        [evaluatorObjects, setEvaluatorObjects] = useState(currentValue),\r\n        [submitButtonEnabled, setSubmitButtonEnabled] = useState(false),\r\n        [addEvaluatorButtonEnabled, setAddEvaluatorButtonEnabled] = useState(false),\r\n\r\n        [callback, setCallback] = useState(\"\"),\r\n        [type, setType] = useState(\"list\"),\r\n\r\n        // waitMethod\r\n        [waitMethods, setWaitMethods] = useState([\r\n            // {name : \"waitForSelector\", args : \".page-card-info .product-info\"},\r\n            // {name : \"waitForSelector\", args : \".page-image-container .product-image\"},\r\n        ]),\r\n        [currentWaitMethod, setCurrentWaitMethod] = useState({\r\n            name: \"\",\r\n            args : \"\",\r\n        }),\r\n        [addWaitMethodButtonReady, setAddWaitMethodButtonReady] = useState(false),\r\n        [waitMethodError, setWaitMethodError] = useState(null),\r\n\r\n            // shows if evaluator TYPE === list;\r\n            [showPaginated, setShowPaginated] = useState(true),\r\n            [paginated, setPaginated] = useState(false),\r\n            \r\n            // only needed if evaluator TYPE === single;\r\n            [objPropArgs, setObjPropArgs] = useState([]),\r\n            [objPropArgsError, setObjPropArgsError] = useState(null),\r\n            [currentPropArg, setCurrentPropArg] = useState(''),\r\n            [addObjPropArgsButtonEnabled, setAddObjPropArgsButtonEnabled] = useState(false),\r\n\r\n            // productUrlProp\r\n            [productUrlProp, setProductUrlProp] = useState(\"\"),\r\n            [productUrlPropError, setProductUrlPropError] = useState(false),\r\n\r\n        // devs comments\r\n        [usage, setUsage] = useState(currentUsageValue),\r\n\r\n        // groupIdentifierKey\r\n        [groupIdentifierKey, setGroupIdentifierKey] = useState(currentGroupIdentifierKeyValue);\r\n        \r\n\r\n\r\n    // callback event handler\r\n    const callbackTextFieldChangeHandler = (e) => {\r\n        setCallback(prev => e.target.value);\r\n    }\r\n\r\n\r\n    // wait methods event handlers\r\n\r\n    const removeWaitMethodHandler = (item, e) => {\r\n        setWaitMethods(prev => {\r\n            let arr = prev.slice();\r\n            return [...arr.filter(method => method !== item)];\r\n        })\r\n    }\r\n\r\n    const waitMethodInputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n        setWaitMethodError(prev => false);\r\n        setCurrentWaitMethod(prev => {\r\n            return {...prev, [propName] : e.target.value};\r\n        })\r\n    }\r\n\r\n    const addWaitMethodHandler = () => {\r\n        let waitMethod = {...currentWaitMethod};\r\n        if(!isObjectInArray(currentWaitMethod, waitMethods))    {\r\n            setWaitMethods(prev => { \r\n                return [...prev, waitMethod];\r\n            });\r\n        } else  {\r\n            setWaitMethodError(prev => `We already have this Wait Method in our list of methods.`);\r\n        }\r\n        setCurrentWaitMethod(prev => ({name : \"\", args : \"\"}));\r\n    }\r\n\r\n\r\n\r\n    // type events\r\n    const radioChangeHandler = (value) => {\r\n        setType(prev => value);\r\n        if(value === \"list\")    {\r\n            setShowPaginated(true);\r\n        } else  {\r\n            setShowPaginated(false);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // selectOnChangeHandler\r\n    const selectOnchangeHandler = (value) => {\r\n        setPaginated(prev => value);\r\n    }\r\n\r\n    // objPropArgs event handlers\r\n    const handleDeleteObjPropArgs = (value, e) => {\r\n        setObjPropArgs(prev => prev.filter(item => item !== value));\r\n    }\r\n\r\n    const propArgsInputChangeHandler = (e) => {\r\n        setCurrentPropArg(prev => e.target.value);\r\n        if(e.target.value !== \"\")   {\r\n            setObjPropArgsError(prev => null);\r\n            setAddObjPropArgsButtonEnabled(true);\r\n        } else  {\r\n            setAddObjPropArgsButtonEnabled(false);\r\n        }\r\n    }\r\n\r\n    const addButtonHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setCurrentPropArg(prev => {\r\n\r\n            setObjPropArgs(prevState => {\r\n                if(prevState.includes(prev))    {\r\n                    setObjPropArgsError(prevState => `We already have \"${prev}\" in our Object Property Arguments list...`);\r\n                    return [...prevState];\r\n                } else  {\r\n                    return [...prevState, prev];\r\n                }\r\n            });\r\n            setAddObjPropArgsButtonEnabled(false);\r\n            return \"\";\r\n        });\r\n        \r\n    }\r\n\r\n    // productUrlProp event handler\r\n    const productUrlPropChangeHandler = (e) => {\r\n        setProductUrlPropError(null);\r\n        setProductUrlProp(prev => e.target.value);\r\n    }\r\n\r\n\r\n    // usage\r\n    const usageInputChangeHandler = (e) => {\r\n        setUsage(prev => e.target.value);\r\n    }\r\n\r\n\r\n     // groupIdentifierKey event hander\r\n    const groupIdentifierKeyPropChangeHandler = (value) => {\r\n        setGroupIdentifierKey(prev => value);\r\n    }\r\n\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n    // addEvaluatorObject event handler\r\n    const addEvaluatorObjectHandler = (e) => {\r\n        e.preventDefault();\r\n        if(type === \"list\") {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                paginated,\r\n            }]);\r\n        } else  {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                objPropArgs,\r\n                productUrlProp,\r\n            }]);\r\n            \r\n        }\r\n        \r\n        setCallback(prev => \"\");\r\n        setWaitMethods(prev => []);\r\n        setPaginated(false);\r\n        setObjPropArgs(prev => []);\r\n        setProductUrlProp(prv => \"\");\r\n        setAddEvaluatorButtonEnabled(false);\r\n        \r\n        \r\n    }\r\n\r\n    const removeEvaluatorHandler = (item, e) => {\r\n        setEvaluatorObjects(prev => prev.filter(evaluator => evaluator !== item));\r\n    }\r\n\r\n    const checkEvaluatorReady = () => {\r\n        if(callback === \"\")   {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        if(type === \"single\" && productUrlProp.trim() === \"\")  {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        setAddEvaluatorButtonEnabled(true);\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n     /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n\r\n\r\n\r\n\r\n    // submitHandler\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setUsageHandler(usage);\r\n        setEvaluatorObjectsHandler(evaluatorObjects, true);\r\n        // need to set error message for productUrlProp here\r\n        setGroupIdentifierKeyHandler(groupIdentifierKey)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAddWaitMethodButtonReady(prev => (currentWaitMethod.name.trim() !== \"\" && currentWaitMethod.args.trim() !== \"\"));\r\n        checkEvaluatorReady();\r\n        setEvaluatorObjectsHandler(evaluatorObjects, false);\r\n        if(evaluatorObjects.length) {\r\n            setSubmitButtonEnabled(true);\r\n        } else  {\r\n            setSubmitButtonEnabled(false);\r\n        }\r\n\r\n    }, [currentWaitMethod, callback, type, productUrlProp, evaluatorObjects]);\r\n\r\n    return (\r\n        <form className={styles[\"main-container\"]} onSubmit={submitHandler}>\r\n\r\n            <EmptyCardFlex className={styles[\"evaluator-object-container\"]}>\r\n                {evaluatorObjects.length > 0 && \r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={styles[\"added-evaluator-container\"]}>\r\n                        <h6 className={styles[\"template-title\"]}>Added Evaluator Objects</h6>\r\n\r\n                        {evaluatorObjects.map((item, index) => {\r\n                            return (\r\n                                <div className={styles[\"added-evaluator-object-container\"]} key={index}>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <div className={styles[\"label\"]}>Callback : </div>\r\n                                            <FormControl>\r\n                                                {/* onChange, padding, value, style, placeholder */}\r\n                                                <CodeEditor disabled value={item.callback}></CodeEditor>\r\n                                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                            </FormControl>\r\n                                        </li>\r\n                                        {item.waitMethods.length > 0 && <li>\r\n                                            <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                            <ul>\r\n                                                {item.waitMethods.map((method, i) => {\r\n                                                    return (\r\n                                                        <li key={i}>\r\n                                                            <ul>\r\n                                                                <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                            </ul>\r\n                                                        </li>\r\n                                                    )\r\n                                                })}\r\n                                            </ul>\r\n                                            \r\n                                        </li>}\r\n                                        {\r\n                                            item.type === \"list\" && \r\n                                            <li key={item}>\r\n                                                <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                {item.paginated.toString()}\r\n                                            </li>\r\n                                        }\r\n                                        {\r\n                                            item.type !== \"list\" && \r\n                                            <>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                    {item.objPropArgs.join(\", \")}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                    {item.productUrlProp}\r\n                                                </li>\r\n                                            </>\r\n                                        }\r\n                                        \r\n                                    </ul>\r\n                                    <span className={styles[\"remove-button\"]}>\r\n                                        <IconButton onClick={removeEvaluatorHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                        <Cancel />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                        {usage && \r\n                            <>\r\n                                <p style={{color : \"#4f72a7\"}}>Developer's comment on usage : </p>\r\n                                <p style={{color  : \"#40bb46\", fontWeight : \"bold\"}}>{usage}</p>\r\n                            </>\r\n                        }\r\n                        {groupIdentifierKey && \r\n                            <>\r\n                                <p style={{color : \"#4f72a7\"}}>Product Group / Set Identifier KEY : </p>\r\n                                <p style={{color  : \"#40bb46\", fontWeight : \"bold\"}}>{groupIdentifierKey}</p>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </Card>}\r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <h6 className={styles[\"template-title\"]}>Create Evaluator Objects</h6>\r\n                        <div className={styles[\"input-container\"]}>\r\n                            <h6 className={styles[\"template-section-title\"]}>Write an Evaluator Function</h6>\r\n                            <FormControl>\r\n                                {/* onChange, padding, value, style, placeholder */}\r\n                                <CodeEditor onChange={callbackTextFieldChangeHandler} value={callback}></CodeEditor>\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n                            {/* // wait methods */}\r\n                            <div className={styles[\"wait-methods-container\"]}>\r\n                                \r\n                                {waitMethods.length > 0 &&\r\n                                     <>\r\n                                    <h6 className={styles[\"description\"]}>Added Wait Methods</h6>\r\n                                    <div className={styles[\"added-methods\"]}>\r\n                                        \r\n                                        <ul>\r\n                                            {waitMethods.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={index}>\r\n                                                        <ul>\r\n                                                            <li><span>Method Name : </span> {item.name}</li>\r\n                                                            <li><span>Method Args : </span> {item.args}</li>\r\n                                                        </ul>\r\n                                                        <span className={styles[\"cancel-button\"]}>\r\n                                                            <IconButton onClick={removeWaitMethodHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                                            <Cancel />\r\n                                                            </IconButton>\r\n                                                        </span>\r\n                                                        \r\n                                                    </li>\r\n                                                );\r\n                                            })}\r\n                                        </ul>\r\n                                        {waitMethodError && <p className={styles[\"error-message\"]}>{waitMethodError}</p>}\r\n                                    </div>\r\n                                    </>\r\n                                }\r\n\r\n                                <div className={styles[\"wait-method-input-container\"]}>\r\n                                    <div className={styles[\"input-container-array\"]}>\r\n                                        <p className={styles[\"description\"]}>Add Puppeteer Wait Methods</p>\r\n                                        <div className={styles[\"field-container\"]}>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"name\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Name\" \r\n                                                    value={currentWaitMethod.name}\r\n                                                />\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"args\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Arguments\" \r\n                                                    value={currentWaitMethod.args}\r\n                                                />\r\n                                            </FormControl>\r\n                                        </div>\r\n                                        <div className={styles[\"button-container\"]}>\r\n                                            {addWaitMethodButtonReady && \r\n                                            <Button \r\n                                                onClick={addWaitMethodHandler}\r\n                                                type=\"button\" \r\n                                                variant=\"contained\" \r\n                                                size=\"small\" \r\n                                                color=\"default\" \r\n                                                disableElevation \r\n                                                startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                            {!addWaitMethodButtonReady && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation disabled startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n\r\n                            {/* evaluator options */}\r\n                            <div className={styles[\"evaluator-options\"]}>\r\n                                <FormControl fullWidth>\r\n                                    <RadioButtonsGroup value={type} defaultValue={type} radioOptions={radioOptions} legend=\"Evalutator Type\" onChange={radioChangeHandler} />\r\n                                </FormControl>\r\n                                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                {showPaginated &&\r\n                                    <>\r\n                                    <FormControl fullWidth>\r\n                                        <p className={styles[\"description\"]}>Is the evaluator function meant to be used for paginated starting url?</p>\r\n                                        <Select selectOnchangeHandler={selectOnchangeHandler} label=\"Is Paginated?\" options={selectOptions} uniqueProp=\"value\" optionLabelProp=\"name\" ></Select>\r\n                                    </FormControl>\r\n                                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                    </>\r\n                                }\r\n                                {!showPaginated &&\r\n                                    <>\r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <p className={styles[\"description\"]}>Object Properties as function arguments</p>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    {objPropArgs.length > 0 && \r\n                                                        <>\r\n                                                            <div className={`${styles[\"result-container\"]} ${styles[\"chip-container\"]}`}>\r\n                                                \r\n                                                                {objPropArgs.length > 0 && \r\n                                                                    objPropArgs.map((item, index) => {\r\n                                                                        return (\r\n                                                                            <Chip\r\n                                                                                key={item}\r\n                                                                                label={item}\r\n                                                                                onDelete={handleDeleteObjPropArgs.bind(this, item)}\r\n                                                                                deleteIcon={<Cancel />}\r\n                                                                            />\r\n                                                                        );\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        </>\r\n                                                    }\r\n                                                    <div>\r\n                                                        <TextField \r\n                                                            value={currentPropArg}\r\n                                                            onChange={propArgsInputChangeHandler}\r\n                                                            fullWidth \r\n                                                            label=\"Object Property Arguments\" />\r\n                                                        {objPropArgsError && <p className={styles[\"error-message\"]}>{objPropArgsError}</p>}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disableElevation \r\n                                                            onClick={addButtonHandler}\r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                        {!addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disabled\r\n                                                            disableElevation \r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        \r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    <TextField \r\n                                                        value={productUrlProp}\r\n                                                        onChange={productUrlPropChangeHandler}\r\n                                                        fullWidth \r\n                                                        label=\"Product URI Property\" />\r\n                                                        {productUrlPropError && <p className={styles[\"error-message\"]}>{productUrlPropError}</p>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                                        \r\n                                    </>\r\n                                }\r\n                                \r\n                                <div className={styles[\"buttons-container\"]}>\r\n                                {addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                {!addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" disabled size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <div className={styles[\"input-container\"]}>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <p className={styles[\"description\"]}>This will be used to group the data into sets or maybe categories</p>\r\n                                    <div className={styles[\"field-container\"]}>\r\n                                        <FormControl fullWidth>\r\n                                        <Select \r\n                                            selectOnchangeHandler={groupIdentifierKeyPropChangeHandler} \r\n                                            label=\"Product Group / Set Identifier Key\" \r\n                                            defaultValue={[{name : \" -- Select a Property Name -- \", value : \"\"}, ...Object.keys(currentSchema).map((item, index) => {\r\n                                                return {\r\n                                                    name : item, value : item,\r\n                                                }\r\n                                            })].find(item => item[\"value\"] === currentGroupIdentifierKeyValue)}\r\n                                            options={[{name : \" -- Select a Property Name -- \", value : \"\"}, ...Object.keys(currentSchema).map((item, index) => {\r\n                                            return {\r\n                                                name : item, value : item,\r\n                                            }\r\n                                        })]} \r\n                                            uniqueProp=\"value\" \r\n                                            optionLabelProp=\"name\"\r\n                                            \r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <p className={styles[\"description\"]}>Developer's comments in terms of Script Usage.</p>\r\n                                    <div className={styles[\"field-container\"]}>\r\n                                        \r\n                                        <TextField \r\n                                            value={usage}\r\n                                            multiline\r\n                                            onChange={usageInputChangeHandler}\r\n                                            fullWidth \r\n                                            label=\"Usage\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>      \r\n                    </div>  \r\n\r\n\r\n\r\n\r\n                    {/* // buttons */}\r\n                    <div className={styles[\"buttons-container\"]}>\r\n                        <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                                Cancel\r\n                        </Button>\r\n                        <Button type=\"button\" onClick={backButtonHandler} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                            Back\r\n                        </Button>\r\n                        \r\n                        {submitButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n                        {!submitButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n                        \r\n                    </div>\r\n                </Card>\r\n                {/* <Card className={styles[\"create-evaluator-card\"]}></Card> */}\r\n            </EmptyCardFlex>\r\n            {/* <EmptyCardFlex className={styles[\"evaluator-object-container\"]}>\r\n                <Card>\r\n                \r\n                </Card>\r\n                <Card className={styles[\"create-evaluator-card\"]}></Card>\r\n            </EmptyCardFlex> */}\r\n        </form>    \r\n    )\r\n}","// core\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// hooks\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport useAccessCheck from \"../../../hooks/useAccessCheck\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport CodeEditor from \"../../../components/CodeEditor/CodeEditor\";\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport { Button, Divider, CircularProgress, FormControl } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n/***********************************************************\r\n * \r\n *    Necessary Components for Creating a Scraper Script\r\n * \r\n***********************************************************/\r\n    // creating site resource\r\n    import SelectSiteResource from \"../../../templates/SelectSiteResource/\";\r\n    import CreateSiteResource from \"../../../templates/CreateSiteResource/\";\r\n    // creating scraperDetails\r\n    import CreateScraperData from \"../../../templates/CreateScraperData/\";\r\n    // crating a model object;\r\n    import CreateModelOptions from \"../../../templates/CreateModelOptions\";\r\n    // creating evaluatorObjects;\r\n    import CreateEvaluators from \"../../../templates/CreateEvaluatos\";\r\n\r\n\r\n// styles\r\nimport styles from \"./CreateScraper.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../../config/\"; \r\nimport { toNormalString } from \"../../../utilities/string\";\r\n\r\n\r\nexport default function CreateScraper({pageTitle}) {\r\n\r\n    useAccessCheck(3);\r\n\r\n\r\n    let {authToken} = useAuth(),\r\n        abortCont = new AbortController(),\r\n        history = useHistory(),\r\n\r\n        // siteResource object\r\n        [selectOn, setSelectOn] = useState(true),\r\n        [siteResource, setSiteResource] = useState({\r\n            _id : \"\",\r\n            siteName : \"\",\r\n            siteUrl : \"\",\r\n        }),\r\n        {data : selectOptions, setData : setSelectOptions} = useFetch(\"/api/site-resources\", {\r\n            method : \"GET\",\r\n            headers : {\r\n                \"x-auth-token\" : authToken,\r\n                \"Content-type\" : \"application/json\",\r\n            }\r\n        }),\r\n        [siteResourceReady, setSiteResourceReady] = useState(false),\r\n\r\n        // scraperDbObject\r\n        [scraperDetails, setScraperDetails] = useState({\r\n            productBrand : \"\", \r\n            imagePropName : \"\", \r\n            imageNameObject : {\r\n                shared : [],\r\n                split : [],\r\n            },\r\n            csvExcludedProps : [\"imageUris\", \"imagePaths\", \"multiFaced\", \"_id\", \"dateCreated\", \"__v\", \"friendlyUrl\"],\r\n        }),\r\n        [scraperDetailsReady, setScraperDetailsReady] = useState(false),\r\n\r\n\r\n        // model object;\r\n        [modelObjectOptions, setModelObjectOptions] = useState({\r\n            schema : {\r\n                imagePaths : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                },\r\n                imageUris : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                }\r\n            },\r\n            initializedProps : []\r\n        }),\r\n        [modelObjectOptionsReady, setModelObjectOptionsReady] = useState(false),\r\n\r\n\r\n        // route object;\r\n        [routeObjectOptions, setRouteObjectOptions] = useState({\r\n            recordName : \"\",\r\n            pluralized : false,\r\n        }),\r\n\r\n        \r\n        // evaluatorObjects\r\n        [evaluatorObjects, setEvaluatorObjects] = useState([]),\r\n        [evaluatorObjectsReady, setEvaluatorObjectsReady] = useState(false),\r\n\r\n        // usage\r\n        [usage, setUsage] = useState(\"\"),\r\n\r\n        [groupIdentifierKey, setGroupIdentifierKey] = useState(null),\r\n\r\n        [submitObject, setSubmitObject] = useState({\r\n            type : null,\r\n            message : null,\r\n            loading : false,\r\n        });\r\n    \r\n\r\n    \r\n    /************************************/\r\n    /************************************/\r\n        // Event Handlers\r\n    /************************************/\r\n    /************************************/\r\n\r\n\r\n    // site resource event handlers\r\n    const selectOnchangeHandler = (id) => {\r\n        setSiteResource(prev => {\r\n            return selectOptions.find(item => item._id === id);\r\n        });\r\n    }\r\n\r\n    const siteResourceHandler = (siteResource) => {\r\n        setSiteResource(prev => ({...siteResource}))\r\n        setSelectOptions(prev => [...prev, siteResource]);\r\n    }\r\n\r\n    const setSelectHandler = (state, e) => {\r\n        e.preventDefault();\r\n        if(!state)  setSiteResource(prev => (prev));\r\n        setSelectOn(prev => state);\r\n    }\r\n\r\n    const createReadyHandler = () => {\r\n        setSiteResourceReady(prev => true);\r\n    }\r\n\r\n\r\n    // scraper details event handler\r\n    const setScraperDataHandler = (scraperDetailsObj, boolState) => {\r\n        setScraperDetails(prev => ({...prev, ...scraperDetailsObj}));\r\n        setRouteObjectOptions(prev => {\r\n            return {\r\n                recordName : scraperDetailsObj.productBrand, \r\n                pluralized : false\r\n            };\r\n        });\r\n        setScraperDetailsReady(prev => boolState);\r\n    }\r\n\r\n    // set model Object event handler\r\n    const setModelObjectHandler = (modelObject, boolState) => {\r\n        setModelObjectOptions(prev => ({...prev, ...modelObject}));\r\n        setModelObjectOptionsReady(prev => boolState);\r\n    }\r\n\r\n\r\n\r\n    // set evaluatorObjects event handlers\r\n    const setEvaluatorObjectsHandler = (value, boolState) => {\r\n        setEvaluatorObjects(prev => [...value]);\r\n        setEvaluatorObjectsReady(prev => boolState);\r\n    }\r\n\r\n\r\n    // usage handler\r\n    const setUsageHandler = (value) => {\r\n        if(value.trim() !== \"\") {\r\n            setUsage(prev => value.trim());\r\n        }\r\n    }\r\n\r\n\r\n    // groupIdentifierKeyHandler\r\n    const setGroupIdentifierKeyHandler = (value) => {\r\n        \r\n        setGroupIdentifierKey(prev => value);\r\n  \r\n    }\r\n\r\n\r\n\r\n    // back button handler\r\n    const backButtonHandler = (setter) => {\r\n        setter(prev => false);\r\n\r\n        setSubmitObject(prev => {\r\n            return {\r\n                ...prev, \r\n                message : null,\r\n                loading : false,\r\n                type : null,\r\n            }\r\n        });\r\n    }\r\n\r\n    // cancel button handler\r\n    const cancelHandler = () => {\r\n        // siteResource\r\n        setSiteResource(prev => ({\r\n            _id : \"\",\r\n            siteName : \"\",\r\n            siteUrl : \"\",\r\n        }));\r\n        setSiteResourceReady(false);\r\n\r\n        // scraperDetails\r\n        setScraperDetails(prev => ({\r\n            productBrand : \"\", \r\n            imagePropName : \"\", \r\n            imageNameObject : {\r\n                shared : [],\r\n                split : [],\r\n            },\r\n            csvExcludedProps : [\"imageUris\", \"imagePaths\"],\r\n        }));\r\n        setScraperDetailsReady(false);\r\n\r\n        // modelObject\r\n        setModelObjectOptions(prev => ({\r\n            schema : {\r\n                imagePaths : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                },\r\n                imageUris : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                }\r\n            },\r\n            initializedProps : []\r\n        }));\r\n\r\n        // routeObjectOptions\r\n        setRouteObjectOptions(prev => ({\r\n            recordName : \"\",\r\n            pluralized : false,\r\n        }));\r\n\r\n        // evaluatorObjects = [];\r\n        setEvaluatorObjects(prev => []);\r\n        setUsage(prev => \"\");\r\n        setGroupIdentifierKey(prev => \"\");\r\n\r\n        //\r\n        setSubmitObject(prev => {\r\n            return {\r\n                ...prev, \r\n                message : null,\r\n                loading : false,\r\n                type : null,\r\n            }\r\n        });\r\n\r\n        setModelObjectOptionsReady(false);\r\n        setEvaluatorObjectsReady(false);\r\n    }\r\n\r\n\r\n\r\n    const saveScraperHandler = () => {\r\n\r\n        setSubmitObject(prev => {\r\n            return {\r\n                ...prev, \r\n                message : \"Saving the Scraper Script into our database...\",\r\n                loading : true,\r\n                type : \"info\",\r\n            }\r\n        });\r\n        fetch(`${baseUrl}/api/scrapers`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({\r\n                siteResource,\r\n                usage,\r\n                groupIdentifierKey,\r\n                ...scraperDetails,\r\n                modelObjectOptions,\r\n                routeObjectOptions,\r\n                evaluatorObjects,\r\n            }),\r\n            signal : abortCont.signal\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let { statusOk } = data;\r\n                if(statusOk)    {\r\n                    \r\n                    setSubmitObject(prev => {\r\n                        return {\r\n                            ...prev, \r\n                            message : \"We have successfully saved the scraper script data. You will be redirected to the page where you can run the script shortly.\",\r\n                            loading : false,\r\n                            type : \"success\",\r\n                        }\r\n                    });\r\n                    setTimeout(() => {\r\n                        \r\n                        history.push(`/manage-scrapers/run-script/${data.data._id}`);\r\n                    }, 3000);\r\n                    \r\n                } else  {\r\n                    setSubmitObject(prev => {\r\n                        return {\r\n                            ...prev, \r\n                            message : \"Something went wrong with the process of saving the script... please check the scraper script details you have filled up...\",\r\n                            loading : false,\r\n                            type : \"warning\",\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setSubmitObject(prev => {\r\n                        return {\r\n                            ...prev, \r\n                            message : `Scraper Script was not saved : ${err.message}`,\r\n                            loading : false,\r\n                            type : \"error\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        if(submitObject.type === \"success\") {\r\n\r\n        }\r\n\r\n        return () => abortCont.abort();\r\n    }, [submitObject]);\r\n\r\n    return  (\r\n        <>  \r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            \r\n            { submitObject.message !== null && \r\n                <EmptyCardFlex style={{padding : \".7rem 0\"}}>\r\n                    <Alert severity={submitObject.type}>{submitObject.loading && <CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>}{submitObject.message}</Alert>\r\n                    {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n                    <Alert severity=\"warning\">This is a warning message!</Alert>\r\n                    \r\n                    <Alert severity=\"success\">This is a success message!</Alert> */}\r\n                </EmptyCardFlex>\r\n            }\r\n\r\n            <EmptyCardFlex >\r\n                <EmptyCardFlex className={styles[\"create-scraper-container\"]}>\r\n                    {  !siteResourceReady && \r\n                        <Card className={styles[\"site-resource-card\"]}> \r\n                            {selectOn && <SelectSiteResource \r\n                                selectOnchangeHandler={selectOnchangeHandler}\r\n                                selectedSiteResource={siteResource}\r\n                                selectOptions={selectOptions}\r\n                                setSelectHandler={setSelectHandler}\r\n                                createReadyHandler={createReadyHandler}\r\n                            />}\r\n\r\n                            {!selectOn && <CreateSiteResource siteResourceHandler={siteResourceHandler} createReadyHandler={createReadyHandler} setSelectHandler={setSelectHandler} />}\r\n                        </Card>\r\n                    }\r\n                    {\r\n                        siteResourceReady &&  !scraperDetailsReady && \r\n                        <Card className={styles[\"create-scraper-card\"]}> \r\n                            <CreateScraperData currentValue={scraperDetails} setScraperDataHandler={setScraperDataHandler} cancelHandler={cancelHandler} backButtonHandler={() => backButtonHandler(setSiteResourceReady)}  />\r\n                        </Card>\r\n                    }\r\n                    {  scraperDetailsReady && !modelObjectOptionsReady &&\r\n                        <CreateModelOptions currentValue={modelObjectOptions} setModelObjectHandler={setModelObjectHandler} cancelHandler={cancelHandler} backButtonHandler={() => backButtonHandler(setScraperDetailsReady)} />\r\n                    }\r\n                    {  modelObjectOptionsReady && !evaluatorObjectsReady &&\r\n                        <CreateEvaluators \r\n                            currentValue={evaluatorObjects} \r\n                            currentUsageValue={usage}\r\n                            currentGroupIdentifierKeyValue={groupIdentifierKey}\r\n                            currentSchema={modelObjectOptions.schema}\r\n                            setGroupIdentifierKeyHandler={setGroupIdentifierKeyHandler} \r\n                            setUsageHandler={setUsageHandler} \r\n                            setEvaluatorObjectsHandler={setEvaluatorObjectsHandler} \r\n                            cancelHandler={cancelHandler}\r\n                            backButtonHandler={() => backButtonHandler(setModelObjectOptionsReady)} />\r\n                    }\r\n\r\n\r\n\r\n                    {/* showing data to be submitted to the scraper API */}\r\n\r\n\r\n\r\n                    { siteResourceReady && !evaluatorObjectsReady &&\r\n                        <Card className={styles[\"json-data\"]}>\r\n                                {siteResourceReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Site Resource : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>id</span> : {siteResource._id}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Name</span> : {siteResource.siteName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Url</span> : {siteResource.siteUrl}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                {scraperDetailsReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Scraper Details : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>Product Brand</span> : {scraperDetails.productBrand}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Prop Name</span> : {scraperDetails.imagePropName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : \r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Split</span> : {scraperDetails.imageNameObject.split.join(\", \")}</li>\r\n                                                    <li><span className={styles[\"label\"]}>Shared</span> : {scraperDetails.imageNameObject.shared.join(\", \")}</li>\r\n                                                </ul>\r\n                                            </li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : {scraperDetails.csvExcludedProps.join(\", \")}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                { modelObjectOptionsReady &&\r\n                                    <>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Model Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Schema</span> : \r\n                                                    <ul>\r\n                                                        {Object.keys(modelObjectOptions.schema).map(key => {\r\n                                                            return (\r\n                                                                <li key={key}><span className={styles[\"label\"]}>{toNormalString(key)}</span> : \r\n                                                                    <ul>\r\n                                                                        {Object.keys(modelObjectOptions.schema[key]).map(prop => {\r\n                                                                            return (\r\n                                                                                <li key={prop}><span className={styles[\"label\"]}>{toNormalString(prop)}</span> : {modelObjectOptions.schema[key][prop]}</li>\r\n                                                                            );\r\n                                                                        })}\r\n                                                                    </ul>\r\n                                                                </li>\r\n                                                            )\r\n                                                        })}\r\n                                                    </ul>\r\n                                                </li>\r\n                                                <li><span className={styles[\"label\"]}>Initialized Props</span> : \r\n                                                    <ul>\r\n                                                        {modelObjectOptions.initializedProps.map((item, index) => {\r\n                                                            return (\r\n                                                                <li key={index}><span className={styles[\"label\"]}>{toNormalString(Object.keys(item).join(\"\"))}</span> : {Object.values(item).join(\", \")}</li>\r\n                                                            );\r\n                                                        })}\r\n                                                    </ul>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Route Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Record Name</span> : {routeObjectOptions.recordName}</li>      \r\n                                                <li><span className={styles[\"label\"]}>Pluralized</span> : {routeObjectOptions.pluralized.toString()}</li>      \r\n                                            </ul>\r\n                                        </div>\r\n                                    </>\r\n                                }\r\n                                {\r\n                                    evaluatorObjects && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Evaluator Objects : </p>\r\n                                        <ul>\r\n                                            {evaluatorObjects.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={index}><span className={styles[\"label\"]}>Evaluator Object {index + 1}</span> : \r\n                                                        <ul>\r\n                                                            <li>\r\n                                                                <span className={styles[\"label\"]}>Callback</span> :\r\n                                                                {item.callback}\r\n                                                            </li>\r\n                                                            {item.waitMethods.length > 0 && <li>\r\n                                                                <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                                                <ul>\r\n                                                                    {item.waitMethods.map((method, i) => {\r\n                                                                        return (\r\n                                                                            <li key={i}>\r\n                                                                                <ul>\r\n                                                                                    <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                                    <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                                                </ul>\r\n                                                                            </li>\r\n                                                                        )\r\n                                                                    })}\r\n                                                                </ul>\r\n                                                                \r\n                                                            </li>}\r\n                                                            {\r\n                                                                item.type === \"list\" && \r\n                                                                <li>\r\n                                                                    <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                                    {item.paginated.toString()}\r\n                                                                </li>\r\n                                                            }\r\n                                                            {\r\n                                                                item.type !== \"list\" && \r\n                                                                <>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                                        {item.objPropArgs.join(\", \")}\r\n                                                                    </li>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                                        {item.productUrlProp}\r\n                                                                    </li>\r\n                                                                </>\r\n                                                            }\r\n                                                            \r\n                                                        </ul>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {usage && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Developer's comment on usage : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Usage</span> : {usage}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {groupIdentifierKey && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Developer's comment on usage : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Product Group Identifier Key</span> : {groupIdentifierKey}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                \r\n                        </Card>\r\n                    }\r\n\r\n                </EmptyCardFlex>\r\n                \r\n                <EmptyCardFlex flexDirection=\"row\">\r\n                    { evaluatorObjectsReady &&\r\n                        <Card className={styles[\"json-data\"]}>\r\n                            <h6 className={styles[\"template-section-title\"]}>Please Review the Data before submitting</h6>\r\n                                {siteResourceReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Site Resource : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>id</span> : {siteResource._id}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Name</span> : {siteResource.siteName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Url</span> : {siteResource.siteUrl}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                {scraperDetailsReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Scraper Details : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>Product Brand</span> : {scraperDetails.productBrand}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Prop Name</span> : {scraperDetails.imagePropName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : \r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Split</span> : {scraperDetails.imageNameObject.split.join(\", \")}</li>\r\n                                                    <li><span className={styles[\"label\"]}>Shared</span> : {scraperDetails.imageNameObject.shared.join(\", \")}</li>\r\n                                                </ul>\r\n                                            </li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : {scraperDetails.csvExcludedProps.join(\", \")}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                {modelObjectOptionsReady &&\r\n                                    <>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Model Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Schema</span> : \r\n                                                    <ul>\r\n                                                        {Object.keys(modelObjectOptions.schema).map(key => {\r\n                                                            return (\r\n                                                                <li key={key}><span className={styles[\"label\"]}>{toNormalString(key)}</span> : \r\n                                                                    <ul>\r\n                                                                        {Object.keys(modelObjectOptions.schema[key]).map((prop, index) => {\r\n                                                                            return (\r\n                                                                                <li key={index}><span className={styles[\"label\"]}>{toNormalString(prop)}</span> : {modelObjectOptions.schema[key][prop]}</li>\r\n                                                                            );\r\n                                                                        })}\r\n                                                                        {/* <li><span className={styles[\"label\"]}>Image Prop Name</span> : </li> */}\r\n                                                                    </ul>\r\n                                                                </li>\r\n                                                            )\r\n                                                        })}\r\n                                                    </ul>\r\n                                                </li>\r\n                                                <li><span className={styles[\"label\"]}>Initialized Props</span> : \r\n                                                    <ul>\r\n                                                        {modelObjectOptions.initializedProps.map((item, index) => {\r\n                                                            return (\r\n                                                                <li key={index}><span className={styles[\"label\"]}>{toNormalString(Object.keys(item).join(\"\"))}</span> : {Object.values(item).join(\", \")}</li>\r\n                                                            );\r\n                                                        })}\r\n                                                    {/* <li><span className={styles[\"label\"]}>id</span> : {siteResource._id}</li> */}\r\n                                                    </ul>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Route Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Record Name</span> : {routeObjectOptions.recordName}</li>      \r\n                                                <li><span className={styles[\"label\"]}>Pluralized</span> : {routeObjectOptions.pluralized.toString()}</li>      \r\n                                            </ul>\r\n                                        </div>\r\n                                    </>\r\n                                }\r\n                                {\r\n                                    evaluatorObjects && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Evaluator Objects : </p>\r\n                                        <ul>\r\n                                            {evaluatorObjects.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={index}><span className={styles[\"label\"]}>Evaluator Object {index + 1}</span> : \r\n                                                        <ul>\r\n                                                            <li>\r\n                                                            <div className={styles[\"label\"]}>Callback : </div>\r\n                                                                <FormControl>\r\n                                                                    {/* onChange, padding, value, style, placeholder */}\r\n                                                                    <CodeEditor disabled value={item.callback}></CodeEditor>\r\n                                                                    {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                                                </FormControl>\r\n                                                            </li>\r\n                                                            {item.waitMethods.length > 0 && <li>\r\n                                                                <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                                                <ul>\r\n                                                                    {item.waitMethods.map((method, i) => {\r\n                                                                        return (\r\n                                                                            <li key={i}>\r\n                                                                                <ul>\r\n                                                                                    <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                                    <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                                                </ul>\r\n                                                                            </li>\r\n                                                                        )\r\n                                                                    })}\r\n                                                                </ul>\r\n                                                                \r\n                                                            </li>}\r\n                                                            {\r\n                                                                item.type === \"list\" && \r\n                                                                <li>\r\n                                                                    <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                                    {item.paginated.toString()}\r\n                                                                </li>\r\n                                                            }\r\n                                                            {\r\n                                                                item.type !== \"list\" && \r\n                                                                <>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                                        {item.objPropArgs.join(\", \")}\r\n                                                                    </li>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                                        {item.productUrlProp}\r\n                                                                    </li>\r\n                                                                </>\r\n                                                            }\r\n                                                            \r\n                                                        </ul>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {usage && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Developer's comment on usage : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Usage</span> : {usage}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {groupIdentifierKey && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Product Key that identifies what group or set name the product belongs to : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Product Group Identifier Key</span> : {groupIdentifierKey}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            <div className={styles[\"buttons-container\"]}>\r\n                                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                                        Cancel\r\n                                </Button>\r\n                                <Button type=\"button\" onClick={() => backButtonHandler(setEvaluatorObjectsReady)} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                                    Back\r\n                                </Button>\r\n                                \r\n                                {submitObject.loading && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={saveScraperHandler} disableElevation disabled startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />} >\r\n                                    Saving the Scraper Script\r\n                                </Button>}\r\n\r\n                                {!submitObject.loading && !submitObject.message && <Button type=\"button\" onClick={saveScraperHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<PublishIcon />} >\r\n                                    Save the Scraper Script\r\n                                </Button>}\r\n\r\n                                {!submitObject.loading && submitObject.type === \"success\" && <Button type=\"button\" onClick={saveScraperHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<Check />} >\r\n                                    Done.\r\n                                </Button>}\r\n\r\n                                {!submitObject.loading && submitObject.type !== null && submitObject.type !== \"success\" && <Button type=\"button\" onClick={saveScraperHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<CloseIcon />} >\r\n                                    Scraper was not saved...\r\n                                </Button>}\r\n                                \r\n                            </div>\r\n                        </Card>\r\n                    }\r\n                </EmptyCardFlex>\r\n            </EmptyCardFlex>  \r\n            \r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// custom hooks\r\nimport useFetch from \"../../../hooks/useFetch\";\r\n\r\n// Material UI Components && custom components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport { Button, TextField, FormControl, CircularProgress, Divider } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PlayIcon from '@material-ui/icons/PlayArrow';\r\nimport DownloadIcon from '@material-ui/icons/GetApp';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport MuiTable from \"../../../components/MuiTable\";\r\n\r\n// progress bar\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\n// utils\r\nimport { toCapitalizeAll, toNormalString } from \"../../../utilities/string\";\r\n\r\n// config\r\nimport { baseUrl, socketUrl, fileUrl } from \"../../../config\";\r\n\r\n\r\n// styles\r\nimport styles from \"./RunScraperScript.module.scss\";\r\n\r\n\r\n// socket.io\r\nconst socket = io(`${socketUrl}`);\r\n\r\n\r\nexport default function RunScraperScript({pageTitle})  {\r\n    \r\n    let {authToken, fileToken} = useAuth(),\r\n        history = useHistory(),\r\n        {id} = useParams(),\r\n        {data : scraperData, fetchMessage} = useFetch(`/api/scrapers/${id}`),\r\n        [siteName, setSiteName] = useState(\"\"),\r\n        [productBrand, setProductBrand] = useState(\"\"),\r\n        [siteUrl, setSiteUrl] = useState(\"\"),\r\n        [csvExcludedProps, setCsvExcludedProps] = useState(null), \r\n        [groupIdentifierKey, setGroupIdentifierKey] = useState(\"\"),\r\n        [evaluatorObjects, setEvaluatorObjects] = useState([]),\r\n        [apiRoute, setApiRoute] = useState(null),\r\n        [evaluatorIndexes, setEvaluatorIndexes] = useState([]),\r\n        [usage, setUsage] = useState(null),\r\n\r\n        // script id\r\n        [scriptId, setScriptId] = useState(null),\r\n\r\n        // requiredData from user\r\n        [productsListEvaluatorUris, setProductsListEvaluatorUris] = useState([]),\r\n        [groupIdentifier, setGroupIdentifier] = useState(null),\r\n        [evaluatorArgs, setEvaluatorArgs] = useState([]),\r\n\r\n        // script state\r\n        [scriptRunning, setScriptRunning] = useState(false),\r\n        [scrapingMessage, setScrapingMessage] = useState(null),\r\n        [scrapingStatus, setScrapingStatus] = useState(null),\r\n\r\n        // next action states // downloading and saving;\r\n        [downloadingZip, setDownloadingZip] = useState(false),\r\n        [savingToDb, setSavingToDb] = useState(false),\r\n        [savingDataMessage, setSavingDataMessage] = useState(null),\r\n        [savingDataStatus, setSavingDataStatus] = useState(null),\r\n\r\n        // scraped data;\r\n        [scrapedData, setScrapedData] = useState(null),\r\n        [unscrapedData, setUnscrapedData] = useState(null),\r\n        [submitEnabled, setSubmitEnabled] = useState(false),\r\n\r\n        // io currentProcess\r\n        [currentProcess, setCurrentProcess] = useState(null),\r\n        [currentScrapedProducts, setCurrentScrapedProducts] = useState(0),\r\n        [rescraping, setRescraping] = useState(false),\r\n        [totalScrapedData, setTotalScrapedData] = useState(0),\r\n        [totalUnscrapedData, setTotalUnscrapedData] = useState(0),\r\n        [currentShownData, setCurrentShownData] = useState([]),\r\n        [productsTotal, setProductsTotal] = useState(0),\r\n\r\n\r\n        [progress, setProgress] = useState(0),\r\n\r\n        [runningScriptObject, setRunningScriptObject] = useState(null),\r\n\r\n        // fixing the scripts\r\n        [fixingScript, setFixingScript] = useState(false),\r\n        [fixScriptButtonEnabled, setFixScriptButtonEnabled] = useState(false),\r\n\r\n        abortCont = new AbortController();\r\n\r\n\r\n    const groupIdentifierKeyChangeHandler = (e) => {\r\n        setGroupIdentifier(prev => e.target.value);\r\n    }\r\n\r\n    \r\n    const evaluatorUriChangeHandler = (propName, evaluatorObjectIndex, arrIndex, e) => {\r\n        e.preventDefault();\r\n        setProductsListEvaluatorUris(prev => {\r\n            let arr = [...prev];\r\n            arr[arrIndex] = {[propName] : e.target.value, evaluatorIndex : evaluatorObjectIndex};\r\n\r\n            return arr;\r\n        });\r\n    }\r\n\r\n    const backButtonHandler = () => {\r\n        history.goBack();\r\n    }\r\n\r\n\r\n    const runScraperScriptHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        resetStates();\r\n\r\n        // reset the other states for downloading process.\r\n        setCurrentScrapedProducts(prev => null);\r\n        setCurrentShownData(prev => []);\r\n        setProductsTotal(prev => 0);\r\n\r\n        setScrapedData(null);\r\n        setUnscrapedData(null);\r\n\r\n        setScriptRunning(prev => true);\r\n        setScrapingMessage(prev => \"Currently running the script...\");\r\n        setScrapingStatus(prev => \"info\");\r\n\r\n\r\n        socket.emit(\"run-script\", {scraperId : id, groupIdentifier, productsListEvaluatorUris, evaluatorArgs});\r\n\r\n    }\r\n\r\n    const scriptRewriteHandler = () => {\r\n        setScrapingMessage(\"Currently fixing the script...\");\r\n        setScrapingStatus(\"info\");\r\n        setFixingScript(true);\r\n\r\n        fetch(`${baseUrl}/api/scrapers/${id}`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setScrapingMessage(data.message);\r\n                setScrapingStatus(\"success\");\r\n                setFixingScript(false);\r\n                setFixScriptButtonEnabled(false);\r\n            })\r\n            .catch(err => {\r\n                setScrapingMessage(err.message);\r\n                setScrapingStatus(\"error\");\r\n                setFixingScript(false);\r\n                setFixScriptButtonEnabled(false);\r\n            });\r\n\r\n    }\r\n\r\n    const resetStates = () => {\r\n\r\n        setScriptRunning(prev => false);\r\n        setScrapingMessage(prev => null);\r\n        setScrapingStatus(prev => null);\r\n\r\n        setScriptId(null);\r\n\r\n        setScrapedData(null);\r\n        setUnscrapedData(null);\r\n\r\n        setCurrentProcess(prev => null);\r\n        setCurrentScrapedProducts(0);\r\n        setRescraping(false);\r\n        setTotalScrapedData(0);\r\n        setTotalUnscrapedData(null);\r\n        setCurrentShownData([]);\r\n        setProductsTotal(0);\r\n        setProgress(0);\r\n        \r\n        setDownloadingZip(false);\r\n        setSavingToDb(false);\r\n        setSavingDataMessage(null);\r\n        setSavingDataStatus(null);\r\n    }\r\n\r\n    \r\n    /* SOCKET IO CONNECTION */\r\n    /*\r\n        script-initialization-ready\r\n        script-initialization-error\r\n        initializing\r\n        list-evaluator-finished\r\n        data-scraping\r\n        data-rescraping\r\n        set-rescraping\r\n        image-downloading\r\n        finished-scraping\r\n    */\r\n\r\n    //script-initialization-ready\r\n    socket.off(\"script-initialization-ready\").on(\"script-initialization-ready\", function(data)  {\r\n        if(scriptRunning && !scriptId)   {\r\n            setScriptId(prev => {\r\n                setScriptRunning(prev => true);\r\n                setScrapingStatus(\"info\");\r\n                setScrapingMessage(`We are now scraping the data for ${productBrand} - ${groupIdentifier} from ${siteName}`);\r\n    \r\n    \r\n               return data.scriptId;\r\n            });\r\n            socket.emit(\"initialize\", {status : 200, message : \"Ready to scrape data.\"});\r\n        }\r\n        \r\n    });\r\n\r\n    // Error\r\n    socket.off(\"script-initialization-error\").on(\"script-initialization-error\", function(data)  {\r\n        // if(scriptId === data.scriptId)  {\r\n        setScriptRunning(prev => false);\r\n        \r\n        setScrapingStatus(prev => \"error\");\r\n        if(data.message.toLowerCase().includes(\"cannot find module\"))   {\r\n            setFixScriptButtonEnabled(true);\r\n            console.log(\"fix must be enabled..\");\r\n            setScrapingMessage(prev => \"Some files that are necessary to run the scraper script, are missing; to fix this, please press the 'Automated Script Fix' button below.\");\r\n        }\r\n        // }\r\n    });\r\n\r\n\r\n    // handling script running events;\r\n    socket.off(\"initializing\").on(\"initializing\", function(data)  {\r\n        if(scriptId === data.scriptId)  {\r\n            setCurrentProcess(prev => data);\r\n        }\r\n    });\r\n\r\n    // initial evaluator finished\r\n    socket.off(\"list-evaluator-finished\").on(\"list-evaluator-finished\", function(data)  {\r\n        if(scriptId === data.scriptId)  {\r\n            setCurrentProcess(prev => data);\r\n            if(data.totalProducts)  {\r\n                setProductsTotal(prev => data.totalProducts)\r\n            }\r\n        }\r\n    });\r\n\r\n    // initial single-product-scraping\r\n    socket.off(\"data-scraping\").on(\"data-scraping\", function(data)  {\r\n        if(scriptId === data.scriptId)  {\r\n            if(currentProcess && typeof currentProcess.phase !== \"undefined\" && currentProcess.phase === \"initial-scraping\") {\r\n                setCurrentProcess(prev => data);\r\n            }\r\n            if(data.totalScrapedData > totalScrapedData)  {\r\n                setTotalScrapedData(prev => {\r\n                    return data.totalScrapedData;\r\n                });\r\n                setProgress(prev => (Number(data.totalScrapedData) / Number(productsTotal)) * 100 );\r\n            }\r\n        }\r\n    });\r\n\r\n    // rescraping single-product pages\r\n    socket.on(\"set-rescraping\", function(data)  {\r\n        if(scriptId === data.scriptId)  {\r\n            setRescraping(prev => true);\r\n            if(data.totalUnscrapedData > 0 && totalUnscrapedData !== data.totalUnscrapedData)    {\r\n                setTotalUnscrapedData(prev => data.totalUnscrapedData);\r\n                setTotalScrapedData(prev => {\r\n                    return data.totalScrapedData;\r\n                });\r\n                setProgress(prev => (Number(data.totalScrapedData) / Number(data.totalUnscrapedData)) * 100 );\r\n            }\r\n        }\r\n    });\r\n\r\n    // rescraping single-product pages\r\n    socket.on(\"data-rescraping\", function(data)  {\r\n        if(scriptId === data.scriptId)  {\r\n            if(currentProcess && typeof currentProcess.phase !== \"undefined\" && currentProcess.phase === \"data-scraping\") {\r\n                setCurrentProcess(prev => data);\r\n            }\r\n            if(data.totalScrapedData > totalScrapedData)  {\r\n                setTotalScrapedData(prev => {\r\n                    return data.totalScrapedData;\r\n                });\r\n\r\n                setProgress(prev => (Number(data.totalScrapedData) / Number(totalUnscrapedData)) * 100 );\r\n            }\r\n        }\r\n    });\r\n\r\n    // image downloading\r\n    socket.off(\"image-downloading\").on(\"image-downloading\", function(data)  {\r\n        if(scriptId === data.scriptId)  {\r\n            if(currentProcess &&  (currentProcess.phase === \"data-scraping\" || currentProcess.phase === \"data-rescraping\")) {\r\n                setCurrentProcess(prev => data);\r\n            }\r\n            if(scrapingMessage !== `We are now downloading the images for the scraped the data : ${productBrand} - ${groupIdentifier} from ${siteName}`)    {\r\n                setScrapingMessage(`We are now downloading the images for the scraped the data : ${productBrand} - ${groupIdentifier} from ${siteName}`);\r\n            }\r\n        }\r\n    });\r\n\r\n    // scraping finished;\r\n    socket.off(\"finished-scraping\").on(\"finished-scraping\", function(data)  {\r\n        if(scriptId === data.scriptId)  {\r\n            setScriptRunning(prev => false);\r\n            setScrapingStatus(\"success\");\r\n            setScrapingMessage(`We have successfully scraped the data for ${productBrand} - ${groupIdentifier} from ${siteName}`);\r\n\r\n\r\n            setCurrentProcess(prev => null);\r\n            setScrapedData(data.data);\r\n            setUnscrapedData(data.unscrapedData);\r\n            \r\n        }\r\n    });\r\n\r\n    socket.off(\"connect\").on(\"connect\", () => {\r\n        setScrapingMessage(prev => \"We are now ready to start scraping\");\r\n        setScrapingStatus(prev => \"success\");\r\n        setScriptRunning(false);\r\n    }) \r\n\r\n    socket.off(\"disconnect\").on(\"disconnect\", () => {\r\n        resetStates();\r\n\r\n        setScriptRunning(prev => false);\r\n        setScrapingMessage(prev => \"You have been disconnected from the server.\");\r\n        setScrapingStatus(prev => \"error\");\r\n    });\r\n\r\n\r\n\r\n    // action button events handler\r\n\r\n    const downloadZipHandler = (e) => {\r\n        e.preventDefault();\r\n        setDownloadingZip(true);\r\n        \r\n\r\n        fetch(`${baseUrl}/api/script/create-csv/${scriptId}`, {\r\n            method : \"GET\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            signal : abortCont.signal,\r\n        })\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n                setDownloadingZip(false);\r\n\r\n                let {filePath} = data,\r\n                    downloadUrl = `${fileUrl}${fileToken}?filePath=${filePath}&qType=download`;\r\n                \r\n\r\n                let aElem = document.createElement(\"a\");\r\n                aElem.setAttribute(\"href\", downloadUrl);\r\n                aElem.setAttribute(\"download\", true);\r\n                aElem.setAttribute(\"target\", \"_blank\");\r\n                aElem.click();\r\n\r\n                aElem.remove();\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setDownloadingZip(false);\r\n                }\r\n            });\r\n    }\r\n\r\n    const saveDataHandler = (e) => {\r\n        e.preventDefault();\r\n        setSavingToDb(true);\r\n        setSavingDataMessage(\"Currently saving the data\");\r\n        setSavingDataStatus(\"info\");\r\n\r\n\r\n        fetch(`${baseUrl}/api/script/save-data/${scriptId}`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({apiRoute, scraperId : id}),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n                let {statusOk, message} = data;\r\n                if(!statusOk)   {\r\n                    throw Error(message);\r\n                }\r\n                setSavingDataMessage(message);\r\n                setSavingDataStatus(\"success\");\r\n\r\n                let subApiRoute = apiRoute.replace(\"/api\", \"\"),\r\n                    url = `/scraped-data${subApiRoute}/all?${groupIdentifierKey}=${groupIdentifier}`;\r\n\r\n\r\n                setTimeout(() => history.push(url), 3000);\r\n\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setSavingDataMessage(err.message);\r\n                    setSavingDataStatus(\"error\");\r\n                }\r\n            });\r\n    }\r\n \r\n\r\n    // useEffect\r\n\r\n    useEffect(() => {\r\n        if(groupIdentifier !== null && groupIdentifier.trim() !== \"\")    {\r\n            setSubmitEnabled(true)\r\n        } else  {\r\n            setSubmitEnabled(false)\r\n        }\r\n\r\n    }, [productsListEvaluatorUris, groupIdentifier])\r\n\r\n\r\n    useEffect(() => {\r\n        if(scraperData._id)   {\r\n\r\n            // we set the scraper data into its own states\r\n            setEvaluatorIndexes(prev => {\r\n                return scraperData.evaluatorObjects.reduce((a, b, index) => {\r\n                    if(b.type === \"list\")   {\r\n                        a.push(index);\r\n                    }\r\n                    return a;\r\n                }, []);\r\n            });\r\n            \r\n            setSiteName(prev => scraperData.siteName);\r\n            setProductBrand(prev => scraperData.productBrand);\r\n            setSiteUrl(prev => scraperData.siteUrl);\r\n            setGroupIdentifierKey(prev => scraperData.groupIdentifierKey);\r\n            setEvaluatorObjects(prev => scraperData.evaluatorObjects);\r\n            setApiRoute(prev => scraperData.apiRoute);\r\n            setCsvExcludedProps(prev => scraperData.csvExcludedProps);\r\n            setUsage(prev => scraperData.usage);\r\n        }\r\n    }, [scraperData])\r\n\r\n    useEffect(() => {\r\n        setEvaluatorArgs(prev => {\r\n            return evaluatorIndexes.reduce((a, b) => {\r\n                a.push({evaluatorIndex : b, args : []});\r\n                return a;\r\n            }, []);\r\n        });\r\n\r\n    }, [evaluatorObjects, evaluatorIndexes]);\r\n\r\n    useEffect(() => {\r\n        \r\n        // fires up on dismounting of component\r\n\r\n        return () => {\r\n            fetch(`${baseUrl}/api/script/remove-scraper-object/${scriptId}`, {\r\n                method : \"POST\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                body : JSON.stringify({apiRoute}),\r\n                signal : abortCont.signal,\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => console.log(data))\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        console.log(err.name);\r\n                    }\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    \r\n\r\n    // prevent navigation while script running\r\n    useEffect(() => {\r\n        \r\n        function removeClick(e) {\r\n            e.preventDefault()\r\n            alert(\"Please do not navigate to any page while the script is running... try opening the pages on new tabs\");\r\n        }\r\n        if(scriptRunning)   {\r\n            Array.from(document.querySelectorAll(\"a\")).forEach(item => {\r\n                item.addEventListener(\"click\", removeClick);\r\n            });\r\n        } else  {\r\n            Array.from(document.querySelectorAll(\"a\")).forEach(item => {\r\n                item.removeEventListener(\"click\", removeClick);\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            Array.from(document.querySelectorAll(\"a\")).forEach(item => {\r\n                item.removeEventListener(\"click\", removeClick);\r\n            });\r\n        }\r\n    }, [scriptRunning]);\r\n\r\n    \r\n    \r\n    return (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>\r\n            {/* <pre style={{wordBreak : \"break-word\"}}>\r\n                {JSON.stringify(scraperData, null, 4)}\r\n            </pre> */}\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            {scrapingMessage && !savingDataStatus && <EmptyCardFlex className={styles[\"message-container-top\"]}>\r\n                {scrapingStatus &&\r\n                    <Alert severity={scrapingStatus}>\r\n                        {scrapingStatus === \"info\" && \r\n                            <>\r\n                                <CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"primary\"  />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                            </>\r\n                        }\r\n                        {scrapingMessage}\r\n                    </Alert>\r\n                }\r\n            </EmptyCardFlex>}\r\n\r\n\r\n            {savingDataStatus && \r\n                <EmptyCardFlex className={styles[\"message-container-top\"]}>\r\n                {savingDataStatus &&\r\n                    <Alert severity={savingDataStatus}>\r\n                        {savingDataStatus === \"info\" && \r\n                            <>\r\n                                <CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"primary\"  />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                            </>\r\n                        }\r\n                        {savingDataMessage}\r\n                    </Alert>\r\n                }\r\n                </EmptyCardFlex>\r\n            }\r\n\r\n\r\n\r\n            { scriptRunning && currentProcess && \r\n                <Card>\r\n                    {!rescraping && \r\n                        <>\r\n                            <h6 className={styles[\"template-section-title\"]}>{toCapitalizeAll(toNormalString(currentProcess.phase, \"url\"))} - Total number of products to scrape : <span className={styles[\"highlighted-2\"]}>{productsTotal}</span></h6>\r\n                            <h6 className={styles[\"template-section-title\"]}>Current Scraped Products : <span className={styles[\"highlighted-2\"]}>{totalScrapedData}</span> / <span className={styles[\"highlighted-2\"]}>{productsTotal}</span></h6>\r\n                        </>\r\n                    }\r\n\r\n                    {rescraping && \r\n                        <>\r\n                            <h6 className={styles[\"template-section-title\"]}>{toCapitalizeAll(toNormalString(currentProcess.phase, \"url\"))} - Total number of products to scrape : <span className={styles[\"highlighted-2\"]}>{productsTotal}</span></h6>\r\n                            <h6 className={styles[\"template-section-title\"]}>We are currently rescraping : <span className={styles[\"highlighted-2\"]}>{totalScrapedData}</span> / <span className={styles[\"highlighted-2\"]}>{totalUnscrapedData}</span> </h6>\r\n                            <p className={styles[\"highlighted-2\"]} style={{fontSize: \".8rem\"}}>By default we are rescraping data, until we have 5 or lower rows of unscraped data left; or if we have done rescraping the data for at least 5 times.</p>\r\n                        </>\r\n                    }\r\n                    {!rescraping && currentProcess && currentProcess.phase === \"image-download\" &&\r\n                        <>\r\n                            <h6 className={styles[\"template-section-title\"]}>We have already finished rescraping. We are now downloading the images for the scraped products. Scraping process will finish shortly.</h6>\r\n                        </>\r\n                    }\r\n\r\n                    <LinearProgress variant=\"determinate\" value={progress}  />\r\n\r\n                </Card>\r\n            }\r\n\r\n\r\n            {scrapingStatus === \"success\" && scrapedData &&\r\n\r\n                <Card>\r\n                    \r\n                    <h6 className={styles[\"section-title\"]}>Scraped Data : <span className={styles[\"highlighted\"]}>{productBrand}</span> - <span className={styles[\"highlighted-2\"]}>{groupIdentifier}</span></h6>\r\n\r\n                    <div className={styles[\"action-buttons-container\"]}>\r\n                        {!savingToDb &&\r\n                            <Button type=\"button\" onClick={saveDataHandler} variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<SaveIcon />} >\r\n                                Save to Database\r\n                            </Button>\r\n                        }\r\n                        {savingToDb &&\r\n                            <Button type=\"button\" onClick={saveDataHandler} variant=\"contained\" size=\"small\" disabled style={{}}color=\"secondary\" disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />} >\r\n                                Saving Scraped Data into our database...\r\n                            </Button>\r\n                        }\r\n                        {!downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disableElevation startIcon={<DownloadIcon />}>\r\n                            Download CSV files and Images\r\n                        </Button>}\r\n\r\n                        {downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />}>\r\n                            Downloading CSV files and Images\r\n                        </Button>}\r\n                        \r\n                    </div>\r\n\r\n\r\n                    {scrapedData && <MuiTable tableData={scrapedData} uniqueId=\"cardUri\" excludedColumns={csvExcludedProps.filter(item => item !== \"imagePaths\")}></MuiTable>}\r\n                </Card>\r\n            } \r\n            {scrapingStatus === \"success\" && unscrapedData &&\r\n\r\n                <Card>\r\n                    <h6 className={styles[\"section-title\"]}>UNSCRAPED Data : <span className={styles[\"highlighted\"]}>{productBrand}</span> - <span className={styles[\"highligted-2\"]}>{groupIdentifier}</span></h6>\r\n                    {unscrapedData && <MuiTable tableData={unscrapedData} uniqueId=\"cardUri\" excludedColumns={csvExcludedProps.filter(item => item !== \"cardUri\")}></MuiTable>}\r\n                </Card>\r\n            }\r\n\r\n\r\n            <Card>\r\n                {scraperData._id && <h5 className={styles[\"template-title\"]}>Start scraping <span className={styles[\"highlighted\"]}>{productBrand}</span> data from {siteName}</h5>}\r\n                {!scraperData._id && <h5 className={styles[\"template-title\"]}>{fetchMessage}</h5>}\r\n                {usage && \r\n                <Alert severity=\"info\" className={styles[\"usage\"]}>\r\n                    <h6 className={styles[\"section-title\"]}>Usage</h6>\r\n                    <p>{usage}</p>\r\n                </Alert>}\r\n                \r\n                <div className={styles[\"field-container\"]}>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        {  !scriptRunning && groupIdentifierKey &&\r\n                            <FormControl fullWidth>\r\n                                <TextField value={groupIdentifier || \"\"} onChange={groupIdentifierKeyChangeHandler} label={toNormalString(groupIdentifierKey)} />\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n                        }\r\n\r\n                        {\r\n                            scriptRunning && \r\n                            <FormControl fullWidth>\r\n                                <TextField value={groupIdentifier || \"\"} disabled onChange={groupIdentifierKeyChangeHandler} label={toNormalString(groupIdentifierKey)} />\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n                        }\r\n\r\n                    </div>\r\n                    \r\n                    {evaluatorIndexes.length > 0 && \r\n                        evaluatorIndexes.map((item, i) => {\r\n                            return (\r\n                                <div key={item} className={styles[\"input-container\"]}>\r\n                                    {!scriptRunning && groupIdentifierKey && \r\n                                        <FormControl fullWidth key={item}>\r\n                                            <TextField onChange={evaluatorUriChangeHandler.bind(this, \"url\", item, i)} label={`Starting Poin URL`} />\r\n                                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                        </FormControl>\r\n                                    }\r\n\r\n                                    {\r\n                                        scriptRunning && \r\n                                        <FormControl fullWidth key={item}>\r\n                                            <TextField disabled onChange={evaluatorUriChangeHandler.bind(this, \"url\", item, i)} label={`Starting Poin URL`} />\r\n                                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                        </FormControl>\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                        \r\n                    }\r\n                </div>\r\n\r\n                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                {scraperData._id && <div className={styles[\"buttons-container\"]}>\r\n\r\n                    {!scriptRunning && !fixingScript &&\r\n                        <>\r\n                            <Button onClick={backButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                                Back\r\n                            </Button>\r\n                            {\r\n                                submitEnabled && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disableElevation startIcon={<PlayIcon />} style={{color : \"white\", backgroundColor : \"green\"}}>\r\n                                    Run the script\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                !submitEnabled && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<PlayIcon />}>\r\n                                    Run the script\r\n                                </Button>\r\n                            }\r\n                        </>\r\n                    }\r\n\r\n                    {\r\n                        (scriptRunning || fixingScript) && \r\n                        <>\r\n                            <Button onClick={backButtonHandler} type=\"button\" disabled variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                                Back\r\n                            </Button>\r\n                            {   \r\n                                !fixingScript && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />}>\r\n                                    Executing the Script...\r\n                                </Button>\r\n                            }\r\n                            {   \r\n                                fixingScript && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<PlayIcon />}>\r\n                                    Run the Script\r\n                                </Button>\r\n                            }\r\n                        </>\r\n                    }\r\n\r\n                    \r\n                    {/* {scriptRunning && <Button onClick={backButtonHandler} type=\"button\" disabled variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>}\r\n                    {!scriptRunning && <Button onClick={backButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>}\r\n\r\n\r\n                    {!scriptRunning && submitEnabled &&  <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disableElevation startIcon={<PlayIcon />} style={{color : \"white\", backgroundColor : \"green\"}}>\r\n                        Run the script\r\n                    </Button>}\r\n\r\n                    {!scriptRunning && !submitEnabled &&  <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<PlayIcon />}>\r\n                        Run the script\r\n                    </Button>}\r\n\r\n                    {scriptRunning && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />}>\r\n                        Executing the Script...\r\n                    </Button>} */}\r\n\r\n\r\n                    {/* quick script fix */}\r\n                    {fixScriptButtonEnabled && \r\n                    \r\n                    <>\r\n                        {fixingScript && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={scriptRewriteHandler}  disableElevation disabled startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />}>\r\n                            Fixing the script\r\n                        </Button>}\r\n                        {!fixingScript && <Button type=\"button\" variant=\"contained\" size=\"small\" style={{backgroundColor : \"#4c7dab\", color : \"white\"}} onClick={scriptRewriteHandler} disableElevation startIcon={<EditIcon />}>\r\n                            Automated Script Fix\r\n                        </Button>}\r\n                    </>\r\n                    }\r\n                    {!fixScriptButtonEnabled && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={scriptRewriteHandler} disabled disableElevation startIcon={<EditIcon />}>\r\n                        Automated Script Fix\r\n                    </Button>}\r\n                </div>}\r\n\r\n                {!scraperData._id && \r\n                <div className={styles[\"buttons-container\"]}>\r\n                    <Button onClick={backButtonHandler} type=\"button\" disabled variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>\r\n                    {!scriptRunning && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<PlayIcon />}>\r\n                        Run the script\r\n                    </Button>}\r\n                    \r\n                </div>\r\n                }\r\n            </Card>\r\n            \r\n        </EmptyCardFlex>   \r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { isObjectInArray } from \"../../utilities/objects-array\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl, Divider, CircularProgress } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\nimport Create from '@material-ui/icons/Create';\r\nimport Select from \"../../components/Select\";\r\nimport RadioButtonsGroup from \"../../components/Radio\";\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CodeEditor from \"../../components/CodeEditor/\";\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n// styles\r\nimport styles from \"./EditEvaluators.module.scss\";\r\n\r\nexport default function EditEvaluators({currentValue, currentUsageValue, currentGroupIdentifierKeyValue, currentSchema, setEvaluatorObjectsHandler, cancelHandler})   {\r\n\r\n    let radioOptions = [\r\n            { value : \"list\", label : \"List\" },\r\n            { value : \"single\", label : \"Single\" },\r\n        ],\r\n        selectOptions = [\r\n            { name : \"True\", value : true },\r\n            { name : \"False\", value : false },\r\n        ],\r\n        [evaluatorObjects, setEvaluatorObjects] = useState(currentValue),\r\n        [submitButtonEnabled, setSubmitButtonEnabled] = useState(false),\r\n        [addEvaluatorButtonEnabled, setAddEvaluatorButtonEnabled] = useState(false),\r\n        \r\n\r\n        [callback, setCallback] = useState(\"\"),\r\n        [type, setType] = useState(\"list\"),\r\n\r\n        // waitMethod\r\n        [waitMethods, setWaitMethods] = useState([\r\n            // {name : \"waitForSelector\", args : \".page-card-info .product-info\"},\r\n            // {name : \"waitForSelector\", args : \".page-image-container .product-image\"},\r\n        ]),\r\n        [currentWaitMethod, setCurrentWaitMethod] = useState({\r\n            name: \"\",\r\n            args : \"\",\r\n        }),\r\n        [addWaitMethodButtonReady, setAddWaitMethodButtonReady] = useState(false),\r\n        [waitMethodError, setWaitMethodError] = useState(null),\r\n\r\n            // shows if evaluator TYPE === list;\r\n            [showPaginated, setShowPaginated] = useState(true),\r\n            [paginated, setPaginated] = useState(false),\r\n            \r\n            // only needed if evaluator TYPE === single;\r\n            [objPropArgs, setObjPropArgs] = useState([]),\r\n            [objPropArgsError, setObjPropArgsError] = useState(null),\r\n            [currentPropArg, setCurrentPropArg] = useState(''),\r\n            [addObjPropArgsButtonEnabled, setAddObjPropArgsButtonEnabled] = useState(false),\r\n\r\n            // productUrlProp\r\n            [productUrlProp, setProductUrlProp] = useState(\"\"),\r\n            [productUrlPropError, setProductUrlPropError] = useState(false),\r\n\r\n        // devs comments\r\n        [usage, setUsage] = useState(currentUsageValue),\r\n\r\n        // groupIdentifierKey\r\n        [groupIdentifierKey, setGroupIdentifierKey] = useState(currentGroupIdentifierKeyValue),\r\n\r\n        // Ajax status;\r\n        [isLoading, setIsLoading] = useState(null),\r\n        [message, setMessage] = useState(null),\r\n        [status, setStatus] = useState(null);\r\n\r\n        \r\n\r\n\r\n    // callback event handler\r\n    const callbackTextFieldChangeHandler = (e) => {\r\n        setCallback(prev => e.target.value);\r\n    }\r\n\r\n\r\n    // wait methods event handlers\r\n\r\n    const removeWaitMethodHandler = (item, e) => {\r\n        setWaitMethods(prev => {\r\n            let arr = prev.slice();\r\n            return [...arr.filter(method => method !== item)];\r\n        })\r\n    }\r\n\r\n    const waitMethodInputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n        setWaitMethodError(prev => false);\r\n        setCurrentWaitMethod(prev => {\r\n            return {...prev, [propName] : e.target.value};\r\n        })\r\n    }\r\n\r\n    const addWaitMethodHandler = () => {\r\n        let waitMethod = {...currentWaitMethod};\r\n        if(!isObjectInArray(currentWaitMethod, waitMethods))    {\r\n            setWaitMethods(prev => { \r\n                return [...prev, waitMethod];\r\n            });\r\n        } else  {\r\n            setWaitMethodError(prev => `We already have this Wait Method in our list of methods.`);\r\n        }\r\n        setCurrentWaitMethod(prev => ({name : \"\", args : \"\"}));\r\n    }\r\n\r\n\r\n\r\n    // type events\r\n    const radioChangeHandler = (value) => {\r\n        setType(prev => value);\r\n        if(value === \"list\")    {\r\n            setShowPaginated(true);\r\n        } else  {\r\n            setShowPaginated(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // selectOnChangeHandler\r\n    const selectOnchangeHandler = (value) => {\r\n        setPaginated(prev => value);\r\n    }\r\n\r\n    // objPropArgs event handlers\r\n    const handleDeleteObjPropArgs = (value, e) => {\r\n        setObjPropArgs(prev => prev.filter(item => item !== value));\r\n    }\r\n\r\n    const propArgsInputChangeHandler = (e) => {\r\n        setCurrentPropArg(prev => e.target.value);\r\n        if(e.target.value !== \"\")   {\r\n            setObjPropArgsError(prev => null);\r\n            setAddObjPropArgsButtonEnabled(true);\r\n        } else  {\r\n            setAddObjPropArgsButtonEnabled(false);\r\n        }\r\n    }\r\n\r\n    const addButtonHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setCurrentPropArg(prev => {\r\n\r\n            setObjPropArgs(prevState => {\r\n                if(prevState.includes(prev))    {\r\n                    setObjPropArgsError(prevState => `We already have \"${prev}\" in our Object Property Arguments list...`);\r\n                    return [...prevState];\r\n                } else  {\r\n                    return [...prevState, prev];\r\n                }\r\n            });\r\n            setAddObjPropArgsButtonEnabled(false);\r\n            return \"\";\r\n        });\r\n        \r\n    }\r\n\r\n    // productUrlProp event handler\r\n    const productUrlPropChangeHandler = (e) => {\r\n        setProductUrlPropError(null);\r\n        setProductUrlProp(prev => e.target.value);\r\n    }\r\n\r\n     // usage\r\n     const usageInputChangeHandler = (e) => {\r\n        setUsage(prev => e.target.value);\r\n    }\r\n\r\n\r\n     // groupIdentifierKey event hander\r\n    const groupIdentifierKeyPropChangeHandler = (value) => {\r\n        setGroupIdentifierKey(prev => value);\r\n    }\r\n\r\n\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n    // addEvaluatorObject event handler\r\n    const addEvaluatorObjectHandler = (e) => {\r\n        e.preventDefault();\r\n        if(type === \"list\") {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                paginated,\r\n            }]);\r\n        } else  {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                objPropArgs,\r\n                productUrlProp,\r\n            }]);\r\n            \r\n        }\r\n        \r\n        setCallback(prev => \"\");\r\n        setWaitMethods(prev => []);\r\n        setPaginated(false);\r\n        setObjPropArgs(prev => []);\r\n        setProductUrlProp(prv => \"\");\r\n        setAddEvaluatorButtonEnabled(false);\r\n        \r\n        \r\n    }\r\n\r\n    const removeEvaluatorHandler = (item, e) => {\r\n        setEvaluatorObjects(prev => prev.filter(evaluator => evaluator !== item));\r\n    }\r\n\r\n    const checkEvaluatorReady = () => {\r\n        if(callback === \"\")   {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        if(type === \"single\" && productUrlProp.trim() === \"\")  {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        setAddEvaluatorButtonEnabled(true);\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n\r\n\r\n\r\n\r\n    // submitHandler\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setEvaluatorObjectsHandler(evaluatorObjects, usage, groupIdentifierKey, false, setIsLoading, setMessage, setStatus);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAddWaitMethodButtonReady(prev => (currentWaitMethod.name.trim() !== \"\" && currentWaitMethod.args.trim() !== \"\"));\r\n        checkEvaluatorReady();\r\n        if(evaluatorObjects.length) {\r\n            setSubmitButtonEnabled(true);\r\n        } else  {\r\n            setSubmitButtonEnabled(false);\r\n        }\r\n\r\n    }, [currentWaitMethod, callback, type, productUrlProp, evaluatorObjects]);\r\n\r\n    return (\r\n        <form className={styles[\"main-container\"]} onSubmit={submitHandler}>\r\n\r\n            <EmptyCardFlex className={styles[\"evaluator-object-container\"]}>\r\n\r\n\r\n                { message && \r\n                    <EmptyCardFlex style={{padding : \".7rem 0\"}}>\r\n                        <Alert severity={status}>{isLoading && <CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>}{message}</Alert>\r\n                        {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n                        <Alert severity=\"warning\">This is a warning message!</Alert>\r\n                        \r\n                        <Alert severity=\"success\">This is a success message!</Alert> */}\r\n                    </EmptyCardFlex>\r\n                }\r\n\r\n\r\n                {evaluatorObjects.length > 0 && \r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={styles[\"added-evaluator-container\"]}>\r\n                        <h6 className={styles[\"template-title\"]}>Current Evaluator Objects</h6>\r\n\r\n                        {evaluatorObjects.map((item, index) => {\r\n                            return (\r\n                                <div className={styles[\"added-evaluator-object-container\"]} key={index}>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <div className={styles[\"label\"]}>Callback : </div>\r\n                                            <FormControl>\r\n                                                {/* onChange, padding, value, style, placeholder */}\r\n                                                <CodeEditor disabled value={item.callback}></CodeEditor>\r\n                                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                            </FormControl>\r\n                                        </li>\r\n                                        {item.waitMethods.length > 0 && <li>\r\n                                            <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                            <ul>\r\n                                                {item.waitMethods.map((method, i) => {\r\n                                                    return (\r\n                                                        <li key={i}>\r\n                                                            <ul>\r\n                                                                <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                            </ul>\r\n                                                        </li>\r\n                                                    )\r\n                                                })}\r\n                                            </ul>\r\n                                            \r\n                                        </li>}\r\n                                        {\r\n                                            item.type === \"list\" && \r\n                                            <li>\r\n                                                <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                {item.paginated.toString()}\r\n                                            </li>\r\n                                        }\r\n                                        {\r\n                                            item.type !== \"list\" && \r\n                                            <>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                    {item.objPropArgs.join(\", \")}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                    {item.productUrlProp}\r\n                                                </li>\r\n                                            </>\r\n                                        }\r\n                                        \r\n                                    </ul>\r\n                                    <span className={styles[\"remove-button\"]}>\r\n                                        <IconButton onClick={removeEvaluatorHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                        <Cancel />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </Card>}\r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <h6 className={styles[\"template-title\"]}>Create Evaluator Objects</h6>\r\n                        <div className={styles[\"input-container\"]}>\r\n                            <h6 className={styles[\"template-section-title\"]}>Write an Evaluator Function</h6>\r\n                            <FormControl>\r\n                                {/* onChange, padding, value, style, placeholder */}\r\n                                <CodeEditor onChange={callbackTextFieldChangeHandler} value={callback}></CodeEditor>\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n                            {/* // wait methods */}\r\n                            <div className={styles[\"wait-methods-container\"]}>\r\n                                \r\n                                {waitMethods.length > 0 &&\r\n                                    <>\r\n                                    <h6 className={styles[\"description\"]}>Added Wait Methods</h6>\r\n                                    <div className={styles[\"added-methods\"]}>\r\n                                        \r\n                                        <ul>\r\n                                            {waitMethods.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={`${index}-${item}`}>\r\n                                                        <ul>\r\n                                                            <li><span>Method Name : </span> {item.name}</li>\r\n                                                            <li><span>Method Args : </span> {item.args}</li>\r\n                                                        </ul>\r\n                                                        <span className={styles[\"cancel-button\"]}>\r\n                                                            <IconButton onClick={removeWaitMethodHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                                            <Cancel />\r\n                                                            </IconButton>\r\n                                                        </span>\r\n                                                        \r\n                                                    </li>\r\n                                                );\r\n                                            })}\r\n                                        </ul>\r\n                                        {waitMethodError && <p className={styles[\"error-message\"]}>{waitMethodError}</p>}\r\n                                    </div>\r\n                                    </>\r\n                                }\r\n\r\n                                <div className={styles[\"wait-method-input-container\"]}>\r\n                                    <div className={styles[\"input-container-array\"]}>\r\n                                        <p className={styles[\"description\"]}>Add Puppeteer Wait Methods</p>\r\n                                        <div className={styles[\"field-container\"]}>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"name\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Name\" \r\n                                                    value={currentWaitMethod.name}\r\n                                                />\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"args\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Arguments\" \r\n                                                    value={currentWaitMethod.args}\r\n                                                />\r\n                                            </FormControl>\r\n                                        </div>\r\n                                        <div className={styles[\"button-container\"]}>\r\n                                            {addWaitMethodButtonReady && \r\n                                            <Button \r\n                                                onClick={addWaitMethodHandler}\r\n                                                type=\"button\" \r\n                                                variant=\"contained\" \r\n                                                size=\"small\" \r\n                                                color=\"default\" \r\n                                                disableElevation \r\n                                                startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                            {!addWaitMethodButtonReady && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation disabled startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n\r\n                            {/* evaluator options */}\r\n                            <div className={styles[\"evaluator-options\"]}>\r\n                                <FormControl fullWidth>\r\n                                    <RadioButtonsGroup value={type} defaultValue={type} radioOptions={radioOptions} legend=\"Evalutator Type\" onChange={radioChangeHandler} />\r\n                                </FormControl>\r\n                                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                {showPaginated &&\r\n                                    <>\r\n                                    <FormControl fullWidth>\r\n                                        <p className={styles[\"description\"]}>Is the evaluator function meant to be used for paginated starting url?</p>\r\n                                        <Select selectOnchangeHandler={selectOnchangeHandler} label=\"Is Paginated?\" options={selectOptions} uniqueProp=\"value\" optionLabelProp=\"name\" ></Select>\r\n                                    </FormControl>\r\n                                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                    </>\r\n                                }\r\n                                {!showPaginated &&\r\n                                    <>\r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <p className={styles[\"description\"]}>Object Properties as function arguments</p>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    {objPropArgs.length > 0 && \r\n                                                        <>\r\n                                                            <div className={`${styles[\"result-container\"]} ${styles[\"chip-container\"]}`}>\r\n                                                \r\n                                                                {objPropArgs.length > 0 && \r\n                                                                    objPropArgs.map((item, index) => {\r\n                                                                        return (\r\n                                                                            <Chip\r\n                                                                                key={`${item}-${index}`}\r\n                                                                                label={item}\r\n                                                                                onDelete={handleDeleteObjPropArgs.bind(this, item)}\r\n                                                                                deleteIcon={<Cancel />}\r\n                                                                            />\r\n                                                                        );\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        </>\r\n                                                    }\r\n                                                    <div>\r\n                                                        <TextField \r\n                                                            value={currentPropArg}\r\n                                                            onChange={propArgsInputChangeHandler}\r\n                                                            fullWidth \r\n                                                            label=\"Object Property Arguments\" />\r\n                                                        {objPropArgsError && <p className={styles[\"error-message\"]}>{objPropArgsError}</p>}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disableElevation \r\n                                                            onClick={addButtonHandler}\r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                        {!addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disabled\r\n                                                            disableElevation \r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        \r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    <TextField \r\n                                                        value={productUrlProp}\r\n                                                        onChange={productUrlPropChangeHandler}\r\n                                                        fullWidth \r\n                                                        label=\"Product URI Property\" />\r\n                                                        {productUrlPropError && <p className={styles[\"error-message\"]}>{productUrlPropError}</p>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                                        \r\n                                    </>\r\n                                }\r\n                                \r\n                                <div className={styles[\"buttons-container\"]}>\r\n                                {addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                {!addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" disabled size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <div className={styles[\"input-container\"]}>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <p className={styles[\"description\"]}>This will be used to group the data into sets or maybe categories</p>\r\n                                    <div className={styles[\"field-container\"]}>\r\n                                        <FormControl fullWidth>\r\n                                        <Select \r\n                                            selectOnchangeHandler={groupIdentifierKeyPropChangeHandler} \r\n                                            label=\"Product Group / Set Identifier Key\" \r\n                                            defaultValue={[{name : \" -- Select a Property Name -- \", value : \"\"}, ...Object.keys(currentSchema).map((item, index) => {\r\n                                                return {\r\n                                                    name : item, value : item,\r\n                                                }\r\n                                            })].find(item => item[\"value\"] === currentGroupIdentifierKeyValue)}\r\n                                            options={[{name : \" -- Select a Property Name -- \", value : \"\"}, ...Object.keys(currentSchema).map((item, index) => {\r\n                                            return {\r\n                                                name : item, value : item,\r\n                                            }\r\n                                        })]} \r\n                                            uniqueProp=\"value\" \r\n                                            optionLabelProp=\"name\"\r\n                                            \r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <p className={styles[\"description\"]}>Developer's comments in terms of Script Usage.</p>\r\n                                    <div className={styles[\"field-container\"]}>\r\n                                        \r\n                                        <TextField \r\n                                            value={usage}\r\n                                            multiline\r\n                                            onChange={usageInputChangeHandler}\r\n                                            fullWidth \r\n                                            label=\"Usage\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>      \r\n                    </div>  \r\n\r\n\r\n                    {/* // buttons */}\r\n                    <div className={styles[\"buttons-container\"]}>\r\n                        <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                                Cancel\r\n                        </Button>\r\n                        \r\n                        {submitButtonEnabled && !isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n                        {!submitButtonEnabled && !isLoading &&  <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n\r\n                        {isLoading &&  <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\", color : \"#777\"}}></CircularProgress>} >\r\n                            Saving...\r\n                        </Button>}\r\n                        \r\n                    </div>\r\n                </Card>\r\n            </EmptyCardFlex>\r\n        </form>    \r\n    )\r\n\r\n\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { isObjectUnique } from \"../../utilities/objects-array\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl, CircularProgress } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport Select from \"../../components/Select\";\r\nimport RadioButtonsGroup from \"../../components/Radio\";\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// styles \r\nimport styles from \"./EditModelOptions.module.scss\";\r\n\r\nexport default function EditModelSchema({currentValue, setModelObjectHandler, cancelHandler}) {\r\n\r\n    let selectOptions = [\r\n            { name : \"String\" },\r\n            { name : \"Array\" },\r\n        ],\r\n        radioOptions = [\r\n            { value : \"true\", label : \"True\" },\r\n            { value : \"false\", label : \"False\" },\r\n        ],\r\n        [modelObjectOptions, setModelObjectOptions] = useState(currentValue),\r\n        [saveButtonEnabled, setSavedButtonEnabled] = useState(false),\r\n        [schemaArray, setSchemaArray] = useState(Object.keys(modelObjectOptions.schema).map(propKey => {\r\n            return {key : propKey, ...modelObjectOptions.schema[propKey]}\r\n        })),\r\n        [addSchemaButtonDisabled, setAddSchemaButtonDisabled] = useState(true),\r\n        [schemaKey, setSchemaKey] = useState(\"\"),\r\n        [schemaKeyType, setSchemaKeyType] = useState(\"String\"),\r\n        [schemaKeyRequired, setSchemaKeyRequired] = useState(\"false\"),\r\n        [schemaError, setSchemaError] = useState(\"\"),\r\n\r\n\r\n        // model initialized props \r\n        [propObjectsErrMessage, setPropObjectsErrMessage] = useState({\r\n            friendlyUrlProps : null,\r\n            immutableProps : null,\r\n            uniqueProps : null,\r\n        }),\r\n        [propObjects, setPropObjects] = useState({\r\n            friendlyUrlProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"friendlyUrlProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"friendlyUrlProps\"))[\"friendlyUrlProps\"]] : [],\r\n            immutableProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"immutableProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"immutableProps\"))[\"immutableProps\"]] : [],\r\n            uniqueProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"uniqueProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"uniqueProps\"))[\"uniqueProps\"]] : [],\r\n        }),\r\n        [friendlyUrlProp, setFriendlyUrlProp] = useState(\"\"),\r\n        [immutableProp, setImmutableProp] = useState(\"\"),\r\n        [uniqueProp, setUniqueProp] = useState(\"\"),\r\n\r\n        [isLoading, setIsLoading] = useState(null),\r\n        [message, setMessage] = useState(null),\r\n        [status, setStatus] = useState(null);\r\n\r\n    // model schema event handlers \r\n    const inputChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        setSchemaKey(prev => e.target.value);\r\n        if(e.target.value.trim() !== \"\")    {\r\n            setAddSchemaButtonDisabled(prev => false);\r\n            setSchemaError(prev => false);\r\n        } else  {\r\n            setAddSchemaButtonDisabled(prev => true);\r\n        }\r\n    }\r\n\r\n    const selectOnchangeHandler = (value) => {\r\n        setSchemaKeyType(prev => value);\r\n    }\r\n\r\n    const radioChangeHandler = (value) => {\r\n        setSchemaKeyRequired(prev => value);\r\n    }\r\n\r\n    const addSchemaHandler = (e) => {\r\n        e.preventDefault();\r\n        if(schemaKey && schemaKey.length > 0) {\r\n\r\n            let schemaObject = {key : schemaKey, type : schemaKeyType, required : schemaKeyRequired};\r\n\r\n            if(isObjectUnique(schemaObject, schemaArray, [\"key\"])) {\r\n                setSchemaArray(prev => {                    \r\n                    let arr = [...prev, schemaObject];\r\n                    return arr;\r\n                });\r\n            } else  {\r\n                setSchemaError('We already have this schema...');\r\n            }\r\n            setSchemaKey(prev => \"\");\r\n            // setSchemaKeyType(prev => \"String\");\r\n            setSchemaKeyRequired(prev => \"false\");\r\n            setAddSchemaButtonDisabled(prev => true);\r\n        }\r\n    }\r\n\r\n    const deleteSchemaHandler = (key, e) => {\r\n        e.preventDefault();\r\n        setSchemaArray(prev => {\r\n            let arr = prev.slice().filter(item => item.key !== key);\r\n            return arr;\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // initializedPropsHandler\r\n\r\n\r\n    const handleDeleteChipEntry = (propName, arrItem, e) => {\r\n        e.preventDefault();\r\n\r\n        setPropObjects(prev => {\r\n            let obj = {...prev},\r\n                arr = obj[propName].filter(item => item !== arrItem);\r\n            return {...obj, [propName] : arr};\r\n        });\r\n        \r\n    }   \r\n\r\n    const propObjectChangeHandler = (setter, propName, e) => {\r\n        setter(e.target.value);\r\n        setPropObjectsErrMessage(prev => {\r\n            return {...prev, [propName] : null};\r\n        })\r\n    }\r\n\r\n    const addPropObjects = (propName, value, setter, e) => {\r\n        e.preventDefault();\r\n\r\n        if(value.trim() !== \"\")    {\r\n            \r\n            if(!propObjects[propName].includes(value)) {\r\n                \r\n                setPropObjects(prev => {\r\n                    let obj = {...prev};\r\n                    obj[propName].push(value);\r\n                    return obj;\r\n                });\r\n            } else  {\r\n                setPropObjectsErrMessage(prev => {\r\n                    return {...prev, [propName] : `We already have \"${value}\" property name in ${propName}`}\r\n                });\r\n            }\r\n        }\r\n        setter(prev => \"\");\r\n    }\r\n\r\n\r\n\r\n    // submit handler\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setModelObjectOptions(prev => {\r\n            let obj = {...prev},\r\n                initializedProps = [];\r\n            \r\n            for(let key in propObjects) {\r\n                initializedProps.push({[key] : propObjects[key]});\r\n            }\r\n            \r\n            obj.schema = schemaArray.reduce((a, b) => {\r\n                    a[b.key] = {\r\n                        type : b.type,\r\n                        required : b.required,\r\n                    };\r\n\r\n                    return a;\r\n                }, {});\r\n\r\n            obj.initializedProps = initializedProps;\r\n            setModelObjectHandler(obj, false, setIsLoading, setMessage, setStatus);\r\n            return obj;\r\n        });\r\n        \r\n    }  \r\n\r\n    useEffect(() => {\r\n        if(schemaArray.length)  {\r\n            setSavedButtonEnabled(prev => true);\r\n        } else  {\r\n            setSavedButtonEnabled(prev => false);\r\n        }\r\n    }, [schemaArray]);\r\n\r\n    return (\r\n        <form className={styles[\"main-container\"]} onSubmit={submitHandler}>\r\n            <EmptyCardFlex className={styles[\"model-object-container\"]}>\r\n                <Card className={styles[\"create-model-card\"]}> \r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <h6 className={styles[\"template-title\"]}>Edit DB Model Schema</h6>\r\n                        <div className={styles.form} >\r\n                        <h6 className={styles[\"template-section-title\"]}>Add DB Model Schema</h6>\r\n                            <div className={styles[\"input-container\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <FormControl fullWidth>\r\n                                        <TextField value={schemaKey} onChange={inputChangeHandler} label=\"Schema Property Name\" />\r\n                                        {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>}\r\n                                    </FormControl>\r\n                                    <FormControl fullWidth>\r\n                                        <Select defaultValue={selectOptions[0]} selectOnchangeHandler={selectOnchangeHandler} label=\"Shema Property Type\" options={selectOptions} uniqueProp=\"name\" optionLabelProp=\"name\" ></Select>\r\n                                    </FormControl>\r\n                                    <FormControl fullWidth>\r\n                                        <RadioButtonsGroup radioOptions={radioOptions} legend=\"Is Value Required?\" onChange={radioChangeHandler} />\r\n                                    </FormControl>\r\n                                    {!addSchemaButtonDisabled && \r\n                                        <Button onClick={addSchemaHandler.bind(this)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Add />} >\r\n                                            Add Schema Property\r\n                                        </Button>\r\n                                    }\r\n                                    {addSchemaButtonDisabled && \r\n                                        <Button onClick={addSchemaHandler.bind(this)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disabled disableElevation startIcon={<Add />} >\r\n                                            Add Schema Property\r\n                                        </Button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </Card>\r\n                {\r\n                    schemaArray.length > 0 && \r\n                    <Card className={styles[\"schema-container\"]}>\r\n                        <h6 className={styles[\"template-subtitle\"]}>Added Model Schemas</h6>\r\n                        <ul>\r\n                        {schemaArray.map(item => {\r\n                            let {key, type, required} = item;\r\n                            return (\r\n                                <li key={key}>\r\n                                    <span>Key : {key}</span>\r\n                                    <span>Type : {type}</span>\r\n                                    <span>Required : {required}</span>\r\n                                    \r\n                                    <IconButton onClick={deleteSchemaHandler.bind(this, key)} className={styles[\"delete-button\"]} color=\"default\"  component=\"span\">\r\n                                    <Cancel />\r\n                                    </IconButton>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                        </ul>\r\n                    </Card>\r\n                }\r\n            </EmptyCardFlex>\r\n            <EmptyCardFlex className={styles[\"model-object-container\"]}>\r\n                <Card className={styles[\"create-model-card\"]}> \r\n                <div className={`${styles[\"form-container\"]}`}>\r\n                   \r\n                    <div className={styles.form}>\r\n                        <h6 className={styles[\"template-section-title\"]}>Set the Initialized Properties</h6>\r\n\r\n\r\n                        {/* Array containers : uniqueProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n                            <p className={styles[\"description\"]}>Unique Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.uniqueProps.length > 0 && \r\n                                    propObjects.uniqueProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"uniqueProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={uniqueProp} onChange={propObjectChangeHandler.bind(this, setUniqueProp, \"uniqueProps\")} fullWidth label=\"Unique Properties\" />\r\n                                    {propObjectsErrMessage.uniqueProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.uniqueProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {uniqueProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"uniqueProps\", uniqueProp, setUniqueProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!uniqueProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"uniqueProps\", uniqueProp, setUniqueProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Array containers : immutableProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n\r\n                            <p className={styles[\"description\"]}>Immutable Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.immutableProps.length > 0 && \r\n                                    propObjects.immutableProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"immutableProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={immutableProp} onChange={propObjectChangeHandler.bind(this, setImmutableProp, \"immutableProps\")} fullWidth label=\"Immutable Properties\" />\r\n                                    {propObjectsErrMessage.immutableProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.immutableProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {immutableProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"immutableProps\", immutableProp, setImmutableProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!immutableProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"immutableProps\", immutableProp, setImmutableProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Array containers : friendlyUrlProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n                            <p className={styles[\"description\"]}>Friendly URL Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.friendlyUrlProps.length > 0 && \r\n                                    propObjects.friendlyUrlProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"friendlyUrlProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={friendlyUrlProp} onChange={propObjectChangeHandler.bind(this, setFriendlyUrlProp, \"friendlyUrlProps\")} fullWidth label=\"Friendly URL Properties\" />\r\n                                    {propObjectsErrMessage.friendlyUrlProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.friendlyUrlProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {friendlyUrlProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"friendlyUrlProps\", friendlyUrlProp, setFriendlyUrlProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!friendlyUrlProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"friendlyUrlProps\", friendlyUrlProp, setFriendlyUrlProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>            \r\n                </div>    \r\n                </Card> \r\n                \r\n            </EmptyCardFlex>\r\n            <Card>\r\n                <div className={styles[\"buttons-container\"]}>\r\n                    <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                            Cancel\r\n                    </Button>\r\n                    \r\n                    {saveButtonEnabled && !isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation endIcon={<SaveIcon />} >\r\n                        Save\r\n                    </Button>}\r\n                    {!saveButtonEnabled && !isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation endIcon={<SaveIcon />} >\r\n                        Save\r\n                    </Button>}\r\n                    {\r\n                        isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation endIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>} >\r\n                        Saving the DB Model Schema\r\n                    </Button>\r\n                    }\r\n                    \r\n                </div>\r\n            </Card>\r\n        </form>\r\n    )\r\n}","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport { baseUrl } from \"../../../config\";\r\nimport useAccessCheck from \"../../../hooks/useAccessCheck\"\r\n\r\n\r\n// components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport EditEvaluators from \"../../../templates/EditEvaluators\";\r\nimport EditModelOptions from \"../../../templates/EditModelOptions\";\r\nimport { Button, Divider, CircularProgress, Modal, FormControl } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport PlayIcon from '@material-ui/icons/PlayArrow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Check from '@material-ui/icons/Check';\r\nimport CodeEditor from \"../../../components/CodeEditor/\";\r\n\r\n\r\nimport styles from \"./ScraperDetails.module.scss\";\r\n\r\n\r\nexport default function ScraperDetails({pageTitle})  {\r\n\r\n    useAccessCheck(3);\r\n\r\n    let { authToken } = useAuth(),\r\n        { id } = useParams(),\r\n        {data : scraperDetails, setData : setScraperDetails} = useFetch(`/api/scrapers/${id}`, {}, null),\r\n        history = useHistory(),\r\n        [modalOpen, setModalOpen] = useState(false),\r\n        [isLoading, setIsLoading] = useState(null),\r\n        [message, setMessage] = useState(null),\r\n        [messageType, setMessageType] = useState(null),\r\n\r\n        // edit evaluator functions\r\n        [editingEvaluatorObjects, setEditingEvaluatorObjects] = useState(false),\r\n        [editingModelObjectOptions, setEditingModelObjectOptions] = useState(false),\r\n        abortCont = new AbortController();\r\n        \r\n\r\n    const executeScriptHandler = () => {\r\n        history.push(`/manage-scrapers/run-script/${id}`)\r\n    }\r\n\r\n    const editEvaluatorObjectsHandler = () => {\r\n        setEditingEvaluatorObjects(prev =>true);\r\n    }\r\n\r\n    const editModelObjectOptionsHandler = () => {\r\n        setEditingModelObjectOptions(prev =>true);\r\n    }\r\n\r\n    const setModelObjectOptionsHandler = (modelObjectOptions, state, setLoading, setMessage, setStatus) => {\r\n        setLoading(true);\r\n        setStatus(\"info\");\r\n        setMessage(\"Updating the Evalutors\");\r\n\r\n\r\n        fetch(`${baseUrl}/api/scrapers/${id}`, {\r\n            method : \"PUT\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({...scraperDetails, modelObjectOptions}),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(\"We had problems reaching the server... We couldn't update the DB Model Schema.\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setLoading(false);\r\n                setStatus(\"success\");\r\n                setMessage(\"We have successfully updated the DB Model Schema.\");\r\n\r\n\r\n                setScraperDetails(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        modelObjectOptions,\r\n                    }\r\n                });\r\n                setTimeout(() => setEditingModelObjectOptions(prev => state), 777);\r\n\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setLoading(false);\r\n                    setStatus(\"error\");\r\n                    setMessage(err.message);\r\n                }\r\n            });\r\n    }\r\n\r\n    const setEvaluatorObjectsHandler = (evaluatorObjects, usage, groupIdentifierKey, state, setLoading, setMessage, setStatus) => {\r\n        \r\n        setLoading(true);\r\n        setStatus(\"info\");\r\n        setMessage(\"Updating the Evalutors\");\r\n\r\n\r\n        fetch(`${baseUrl}/api/scrapers/${id}`, {\r\n            method : \"PUT\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({...scraperDetails, evaluatorObjects, usage, groupIdentifierKey}),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(\"We had problems reaching the server... We couldn't update the evaluators.\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setLoading(false);\r\n                setStatus(\"success\");\r\n                setMessage(\"We have successfully updated the evaluators.\");\r\n\r\n\r\n                setScraperDetails(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        evaluatorObjects,\r\n                        usage,\r\n                        groupIdentifierKey,\r\n                    }\r\n                });\r\n                setTimeout(() => setEditingEvaluatorObjects(prev => state), 777);\r\n\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setLoading(false);\r\n                    setStatus(\"error\");\r\n                    setMessage(err.message);\r\n                }\r\n            });\r\n\r\n        \r\n        // save the data to database...\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        setEditingEvaluatorObjects(prev => false);\r\n        setEditingModelObjectOptions(prev => false);\r\n    }\r\n\r\n    const deleteScriptHandler = () => {\r\n        setIsLoading(true);\r\n        fetch(`${baseUrl}/api/scrapers/${id}`, {\r\n            method : \"DELETE\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            signal : abortCont.signal\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.statusOk)    {\r\n                    setMessage(\"We have successfully deleted the scraper script\");\r\n                    setIsLoading(false);\r\n                    setMessageType(\"success\");\r\n                    setTimeout(() => history.push(`/manage-scrapers/`), 2500);\r\n                } else  {\r\n                    setMessage(\"We were not able to delete the scraper script\");\r\n                    setIsLoading(false);\r\n                    setMessageType(\"success\");\r\n                    setModalOpen(false);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setMessage(err.message);\r\n                    setIsLoading(false);\r\n                    setMessageType(\"error\");\r\n                    setModalOpen(false);\r\n                }\r\n            });\r\n\r\n        return () => abortCont.abort();\r\n    }\r\n\r\n    const modalSetter = (value) => {\r\n        setModalOpen(prev => value);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [modalOpen, scraperDetails])\r\n\r\n    return (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>\r\n            {/* {message && <Alert severity={messageType}>{message}</Alert>} */}\r\n\r\n            {\r\n                editingEvaluatorObjects && \r\n\r\n                <>\r\n                    \r\n                    {scraperDetails && scraperDetails.evaluatorObjects && <EditEvaluators currentValue={scraperDetails.evaluatorObjects} currentUsageValue={scraperDetails.usage} currentGroupIdentifierKeyValue={scraperDetails.groupIdentifierKey} currentSchema={scraperDetails.modelObjectOptions.schema} setEvaluatorObjectsHandler={setEvaluatorObjectsHandler} cancelHandler={cancelHandler}></EditEvaluators>}\r\n\r\n                </>\r\n            }\r\n\r\n            {\r\n                editingModelObjectOptions && \r\n\r\n                <>\r\n                    \r\n                    {scraperDetails && scraperDetails.modelObjectOptions && \r\n                        <EditModelOptions currentValue={scraperDetails.modelObjectOptions} \r\n                            setModelObjectHandler={setModelObjectOptionsHandler} \r\n                            cancelHandler={cancelHandler}\r\n                        ></EditModelOptions>}\r\n\r\n                </>\r\n            }\r\n\r\n\r\n            {!editingEvaluatorObjects && !editingModelObjectOptions &&  <Card>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n                {scraperDetails && \r\n                <>\r\n                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n                    <div className={styles[\"details-container\"]}>\r\n                        \r\n\r\n                        \r\n                        <div className={styles[\"container\"]}>\r\n                            <p className={styles[\"template-section-title\"]}>Site Resource Info : </p>\r\n                            <ul>\r\n                                <li><span className={styles[\"label\"]}>Site Name</span> : {scraperDetails.siteName}</li>\r\n                                <li><span className={styles[\"label\"]}>Site Url</span> : {scraperDetails.siteUrl}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                        <div className={styles[\"container\"]}>\r\n                            <p className={styles[\"template-section-title\"]}>Scraper Details : </p>\r\n                            <ul>\r\n                                <li><span className={styles[\"label\"]}>Product Brand</span> : {scraperDetails.productBrand}</li>\r\n                                <li><span className={styles[\"label\"]}>Image Prop Name</span> : {scraperDetails.imagePropName}</li>\r\n                                <li><span className={styles[\"label\"]}>Image Name Object</span> : \r\n                                    <ul>\r\n                                        <li><span className={styles[\"label\"]}>Split</span> : {scraperDetails.imageNameObject.split.join(\", \")}</li>\r\n                                        <li><span className={styles[\"label\"]}>Shared</span> : {scraperDetails.imageNameObject.shared.join(\", \")}</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li><span className={styles[\"label\"]}>Image Name Object</span> : {scraperDetails.csvExcludedProps.join(\", \")}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                        <div className={styles[\"container\"]}>\r\n                            <p className={styles[\"template-section-title\"]}>Evaluator Objects : </p>\r\n                            <ul>\r\n                                {scraperDetails.evaluatorObjects.map((item, index) => {\r\n                                    return (\r\n                                        <li key={index}><span className={styles[\"label\"]}>Evaluator Object {index + 1}</span> : \r\n                                            <ul>\r\n                                                <li>\r\n                                                    <div className={styles[\"label\"]}>Callback : </div>\r\n                                                    <FormControl>\r\n                                                        {/* onChange, padding, value, style, placeholder */}\r\n                                                        <CodeEditor style={{overflow : \"auto\"}} disabled value={item.callback}></CodeEditor>\r\n                                                        {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                                    </FormControl>\r\n                                                </li>\r\n                                                {item.waitMethods.length > 0 && <li>\r\n                                                    <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                                    <ul>\r\n                                                        {item.waitMethods.map((method, i) => {\r\n                                                            return (\r\n                                                                <li key={i}>\r\n                                                                    <ul>\r\n                                                                        <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                        <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                                    </ul>\r\n                                                                </li>\r\n                                                            )\r\n                                                        })}\r\n                                                    </ul>\r\n                                                    \r\n                                                </li>}\r\n                                                {\r\n                                                    item.type === \"list\" && \r\n                                                    <li>\r\n                                                        <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                        {item.paginated.toString()}\r\n                                                    </li>\r\n                                                }\r\n                                                {\r\n                                                    item.type !== \"list\" && \r\n                                                    <>\r\n                                                        <li>\r\n                                                            <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                            {item.objPropArgs.join(\", \")}\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                            {item.productUrlProp}\r\n                                                        </li>\r\n                                                    </>\r\n                                                }\r\n                                                \r\n                                            </ul>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div>\r\n                                <p className={styles[\"template-section-title\"]}>Developer's comment on usage : </p>\r\n                                <ul>\r\n                                    <li><span className={styles[\"label\"]}>Usage</span> : {scraperDetails.usage}</li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div>\r\n                                <p className={styles[\"template-section-title\"]}>Product Group / Set Identifier Key : </p>\r\n                                <ul>\r\n                                    <li><span className={styles[\"label\"]}>Key</span> : {scraperDetails.groupIdentifierKey}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                }\r\n                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                <div className={styles[\"buttons-container\"]}>\r\n                    \r\n                    <Button onClick={() =>modalSetter(true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<DeleteIcon />}>\r\n                        Delete Script\r\n                    </Button>\r\n                    <Button onClick={editEvaluatorObjectsHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 177 201)\", color : \"white\"}} disableElevation startIcon={<EditIcon />}>\r\n                        Edit Evaluators\r\n                    </Button>\r\n                    <Button onClick={editModelObjectOptionsHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 177 201)\", color : \"white\"}} disableElevation startIcon={<EditIcon />}>\r\n                        Edit DB Model Schema\r\n                    </Button>\r\n\r\n                    <Button onClick={executeScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<PlayIcon />} >\r\n                            Run the Script\r\n                    </Button>\r\n                    <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        onClose={() => modalSetter(false)}\r\n                        open={modalOpen}\r\n                        style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}\r\n                    >\r\n    \r\n                            <Alert severity=\"error\" style={{minHeight : \"300px\", minWidth : \"250px\", paddingRight : \"2rem\"}}>\r\n                                <h4 style={{color : \"rgb(201, 85, 85)\"}}className={styles[\"template-section-title\"]}>Deleting the Script?</h4>\r\n                                <Divider style={{margin : \".7rem 0 1.4rem\"}} />\r\n                                <p>Are you sure you want to delete this awesome script?</p>\r\n                                <div className={styles[\"buttons-container\"]}>\r\n                                    \r\n                                    {!isLoading && !messageType &&\r\n                                        <>\r\n                                        <Button onClick={deleteScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<DeleteIcon />}>\r\n                                            Delete Script\r\n                                        </Button>\r\n                                        \r\n                                        <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 159 171)\", color : \"white\"}} disableElevation startIcon={<Cancel />}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        </>\r\n                                    }\r\n\r\n\r\n                                    {isLoading && \r\n                                        <>\r\n                                            <Button onClick={deleteScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                                                Delete Script\r\n                                            </Button>\r\n                                            <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        </>\r\n                                    }\r\n\r\n                                    {!isLoading && messageType === \"success\" &&\r\n                                        <>\r\n                                            <Button onClick={deleteScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Check />}>\r\n                                                Script Deleted\r\n                                            </Button>\r\n                                            <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            </Alert>\r\n\r\n                    </Modal>\r\n                </div>\r\n            </Card>}\r\n            \r\n        </EmptyCardFlex>\r\n    )\r\n}","// hooks\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\n\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../components/MuiTable\";\r\nimport { Button, FormControl, CircularProgress, Modal, Divider } from '@material-ui/core';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport DownloadIcon from '@material-ui/icons/GetApp';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Select from \"../../components/Select\";\r\nimport Check from '@material-ui/icons/Check';\r\n\r\n\r\n//config\r\nimport { baseUrl, fileUrl } from \"../../config/\"; \r\nimport { toNormalString } from \"../../utilities/string\";\r\n\r\n\r\n// styles\r\nimport styles from \"./ScrapedData.module.scss\";\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n\r\n    let {authToken, fileToken} = useAuth(),\r\n\r\n        // collections of data\r\n        {data : siteResources, fetchMessage, isLoading : fetchLoading} = useFetch(`/api/site-resources/`, {}, []),\r\n        {data : scrapers, setData : setScrapers } = useFetch(`/api/scrapers/`, {}, []),\r\n        {data : productSets, setData : setProductSets } = useFetch(`/api/product-sets`, {}, []),\r\n        \r\n\r\n        // filtered data\r\n        [filteredScrapers, setFilteredScrapers] = useState([]),\r\n        [filteredProductSets, setFilteredProductSets] = useState([]),\r\n        [selectedProductBrand, setSelectedProductBrand] = useState(null),\r\n        [siteResource, setSiteResource] = useState(null),\r\n        [scraper, setScraper] = useState(null),\r\n        [productSet, setProductSet] = useState(null),\r\n\r\n\r\n        // productsData;\r\n\r\n        [productsData, setProductsData] = useState([]),\r\n\r\n\r\n        // next action states // downloading and saving;\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [message, setMessage] = useState(null),\r\n        [status, setStatus] = useState(null),\r\n        [downloadingZip, setDownloadingZip] = useState(false),\r\n        \r\n        // deleting data;\r\n        [modalOpen, setModalOpen] = useState(false),\r\n\r\n        // abort Controller\r\n        abortCont = new AbortController();\r\n\r\n\r\n\r\n\r\n    // set site resource by select\r\n    const selectSiteResourceHandler = (value) => {\r\n        setSiteResource(prev => siteResources.find(item => item.siteName === value));\r\n        setFilteredScrapers(prev => {\r\n            return productSets.filter(item => item.siteName === value);\r\n        });\r\n        setFilteredProductSets(prev => []);\r\n        setProductSet(prev => null);\r\n        setScraper(prev => null);\r\n        setDownloadingZip(prev => false);\r\n    }\r\n\r\n    // set productBrand by select\r\n    const selectScraperHandler = (value) => {\r\n        setScraper(prev => productSets.find(item => item.productBrand === value));\r\n        setFilteredProductSets(prev => {\r\n            return productSets.filter(item => item.productBrand === value)\r\n        });\r\n        setProductSet(prev => null);\r\n        \r\n    }\r\n\r\n    // productSet handler\r\n    const selectProductSetHandler = (value) => {\r\n        setProductSet(prev => filteredProductSets.find(item => item.groupIdentifier === value));\r\n    }\r\n\r\n    const createUrl = () => {\r\n        let url = `${baseUrl}`;\r\n        if(scraper) {\r\n            url += `${scraper.apiRoute}/`;\r\n            if(productSet)  {\r\n                url += `all?${scraper.groupIdentifierKey}=${encodeURIComponent(productSet.groupIdentifier)}`;\r\n            }\r\n            console.log(url);\r\n            return url;\r\n        } else  {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const downloadZipHandler = (e) => {\r\n        e.preventDefault();\r\n        setDownloadingZip(true);\r\n\r\n        let { dataDirPath : dirPath, productBrand, groupIdentifierKey, groupIdentifier, siteName, apiRoute, csvExcludedProps } = productSet;;\r\n        // productsData\r\n            \r\n\r\n        fetch(`${baseUrl}/api/script/create-csv-saved-data/`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({ dirPath, siteName, productBrand, groupIdentifierKey, groupIdentifier, apiRoute, csvExcludedProps }),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n                setDownloadingZip(false);\r\n\r\n                let {filePath} = data,\r\n                    downloadUrl = `${fileUrl}${fileToken}?filePath=${filePath}&qType=download`;\r\n                \r\n                // console.log(data);\r\n\r\n                let aElem = document.createElement(\"a\");\r\n                aElem.setAttribute(\"href\", downloadUrl);\r\n                aElem.setAttribute(\"download\", true);\r\n                aElem.setAttribute(\"target\", \"_blank\");\r\n                aElem.click();\r\n\r\n                aElem.remove();\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setDownloadingZip(false);\r\n                }\r\n            });\r\n    }\r\n\r\n    const modalSetter = (value) => {\r\n        setModalOpen(prev => value);\r\n    }\r\n\r\n    const deleteDataHandler = () => {\r\n        setIsLoading(prev => true);\r\n        setStatus(prev => \"info\");\r\n\r\n        fetch(`${baseUrl}${productSet.apiRoute}/all?${productSet.groupIdentifierKey}=${productSet.groupIdentifier}`,{\r\n            method : \"DELETE\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            signal : abortCont.signal,\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n\r\n                fetch(`${baseUrl}/api/product-sets/${productSet._id}`,  {\r\n                    method : \"DELETE\",\r\n                    headers : {\r\n                        \"Content-type\" : \"application/json\",\r\n                        \"x-auth-token\" : authToken,\r\n                    },\r\n                    signal : abortCont.signal,\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(data => {\r\n                        setIsLoading(prev => false);\r\n                        setStatus(prev => \"success\");\r\n                        setMessage(prev => `We have successfully deleted the ${productSet.groupIdentifierKey} : ${productSet.groupIdentifier}`);\r\n                        setFilteredProductSets(prev => []);\r\n                        setProductsData(prev => []);\r\n                        setModalOpen(prev => false);\r\n                        setProductSet(prev => null);\r\n                        setProductSets(prev => []);\r\n                    })\r\n                    .catch(err => {\r\n                        if(err.name !== \"AbortError\")   {\r\n                            setIsLoading(prev => false);\r\n                            setStatus(prev => \"error\");\r\n                            setMessage(prev => err.message);\r\n                        }\r\n                    });\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setIsLoading(prev => false);\r\n                    setStatus(prev => \"error\");\r\n                    setMessage(prev => err.message);\r\n                }\r\n            });\r\n    }\r\n\r\n    // side effects\r\n\r\n    useEffect(() => {\r\n        if(fetchLoading)    {\r\n            setIsLoading(prev => fetchLoading);\r\n            setMessage(prev => fetchMessage);\r\n            setStatus(prev => \"info\");\r\n        } else  {\r\n            setStatus(null);\r\n            setMessage(null);\r\n            setIsLoading(null);\r\n        }\r\n        \r\n\r\n    }, [fetchLoading, fetchMessage])\r\n\r\n    useEffect(() => {\r\n        let url = createUrl();\r\n\r\n        if(url) {\r\n\r\n            setIsLoading(prev => true);\r\n            setStatus(prev => \"info\");\r\n            setMessage(\"Currently Loading data...\");\r\n\r\n            fetch(url, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                signal : abortCont.signal,\r\n            })\r\n                .then(res => {\r\n                    if(!res.ok) {\r\n                        throw Error(\"We couldn't reach the server...\")\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setProductsData(prev => data);\r\n                    if(data.length) {\r\n                        \r\n\r\n                        setIsLoading(prev => false);\r\n                        setStatus(prev => \"success\");\r\n                        setMessage(\"We have successfully fetched the data\");\r\n                    } else  {\r\n                        setIsLoading(prev => false);\r\n                        setStatus(prev => \"success\");\r\n                        setMessage(\"Query is valid, although we don't have any saved data for this set of products.\");\r\n                    }\r\n\r\n                    setTimeout(() => {\r\n                        setIsLoading(prev => false);\r\n                        setStatus(prev => null);\r\n                        setMessage(prev => null);\r\n                    }, 1500)\r\n\r\n                })\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        setIsLoading(prev => false);\r\n                        setStatus(prev => \"error\");\r\n                        setMessage(err.message);\r\n                    }\r\n                })\r\n\r\n        } else  {\r\n            setProductsData(prev => []);\r\n        }\r\n\r\n    }, [scraper, productSet]);\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        return () => abortCont.abort();\r\n    }, []); \r\n    \r\n    return  (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>  \r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n\r\n            \r\n\r\n            <EmptyCardFlex >\r\n                <Card>\r\n                {!siteResource && !isLoading && productSets.length > 0 && <h3 className={styles[\"template-section-title\"]}>Please use the filter to display data...</h3>}\r\n                {!isLoading && productSets.length === 0 && <h3 className={styles[\"template-section-title\"]}>We currently have no data to display</h3>}\r\n                \r\n                {isLoading && <h3 className={styles[\"template-section-title\"]}>Currently Loading the scraped data</h3>}\r\n\r\n                {/* scraper productBrand !productSet */}\r\n                {scraper && !productSet && !isLoading && productsData.length > 0 && <h3 className={styles[\"template-section-title\"]}>Showing the scraped for <span className={styles[\"highlighted\"]}>{scraper.productBrand}</span></h3>}\r\n                \r\n                {/* scraper productBrand !productSet */}\r\n                {scraper && !isLoading && productSet && productsData.length === 0 && <h3 className={styles[\"template-section-title\"]}>We currently have no data for <span className={styles[\"highlighted\"]}>{scraper.productBrand}</span> - <span className={styles[\"highlighted-2\"]}>{productSet.groupIdentifier}</span></h3>}\r\n\r\n                {/* scraper productBrand productSet */}\r\n                {scraper && !isLoading && productSet && productsData.length > 0 && <h3 className={styles[\"template-section-title\"]}>Showing the scraped data for <span className={styles[\"highlighted\"]}>{scraper.productBrand}</span> - <span className={styles[\"highlighted-2\"]}>{productSet.groupIdentifier}</span></h3>}\r\n                <div className={styles[\"select-container\"]}>\r\n                    {siteResources.length > 0 && <FormControl style={{width : \"auto\"}}>\r\n                        <Select value={siteResource} selectOnchangeHandler={selectSiteResourceHandler} label=\"Site Resource\" options={siteResources.map(item=> ({...item, labelName : `${item.siteName} - ${item.siteUrl}`}))} uniqueProp=\"siteName\" optionLabelProp=\"labelName\" ></Select>\r\n                    </FormControl>\r\n                    }\r\n\r\n                    {filteredScrapers.length > 0 && productSets.length > 0 &&\r\n                    <FormControl style={{width : \"auto\"}}>\r\n                        <Select value={scraper} selectOnchangeHandler={selectScraperHandler} label=\"Product Line / Brand\" options={filteredScrapers.reduce((a, b) => {\r\n                            let notIncluded = a.every(item => {\r\n                                return item.productBrand !== b.productBrand;\r\n                            });\r\n                            if(notIncluded) {\r\n                                a.push(b);\r\n                            }\r\n                            return a;\r\n                        }, [])} uniqueProp=\"productBrand\" optionLabelProp=\"productBrand\" ></Select>\r\n                    </FormControl>\r\n                    }\r\n\r\n                    {filteredProductSets.length > 0 && \r\n                    <FormControl style={{width : \"auto\"}}>\r\n                        <Select value={productSet} selectOnchangeHandler={selectProductSetHandler} label={toNormalString(scraper.groupIdentifierKey)} options={filteredProductSets} uniqueProp=\"groupIdentifier\" optionLabelProp=\"groupIdentifier\" ></Select>\r\n                    </FormControl>\r\n                    }\r\n\r\n                    \r\n                </div>\r\n                </Card>\r\n            </EmptyCardFlex>  \r\n            {isLoading && \r\n                <EmptyCardFlex className={styles[\"message-container-top\"]}>\r\n                {message &&\r\n                    <Alert severity={status}>\r\n                        {status === \"info\" && \r\n                            <>\r\n                                <CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"primary\"  />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                            </>\r\n                        }\r\n                        {message}\r\n                    </Alert>\r\n                }\r\n                </EmptyCardFlex>\r\n            }\r\n            <EmptyCardFlex style={{display : \"grid\"}}>\r\n            {productsData.length > 0 && \r\n                <Card>\r\n                    {productSet && <div className={styles[\"action-buttons-container\"]}>\r\n                       \r\n                        {!downloadingZip && scraper && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disableElevation startIcon={<DownloadIcon />}>\r\n                            Download CSV files and Images\r\n                        </Button>}\r\n\r\n                        {downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />}>\r\n                            Downloading CSV files and Images\r\n                        </Button>}\r\n\r\n                        {downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" style={{backgroundColor : \"#c56969\", color : \"white\"}} onClick={modalSetter.bind(this, true)} disabled disableElevation startIcon={<DeleteIcon />}>\r\n                            Delete - {productSet.groupIdentifier || \"product set\"}\r\n                        </Button>}\r\n\r\n                        {!downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" style={{backgroundColor : \"#c56969\", color : \"white\"}} onClick={modalSetter.bind(this, true)} disableElevation startIcon={<DeleteIcon />}>\r\n                            Delete - {productSet.groupIdentifier || \"product set\"}\r\n                        </Button>}\r\n                    </div>}\r\n\r\n                    <MuiTable tableData={productsData} uniqueId=\"_id\" excludedColumns={[\"imageUris\", \"dateCreated\", \"cardUri\", \"__v\", \"productUri\", \"multiFaced\"]}></MuiTable>\r\n\r\n                </Card>\r\n            }\r\n\r\n\r\n                    <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        onClose={() => modalSetter(false)}\r\n                        open={modalOpen}\r\n                        style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}\r\n                    >\r\n    \r\n                        <Alert severity=\"error\" style={{minHeight : \"300px\", minWidth : \"250px\", paddingRight : \"2rem\"}}>\r\n                            <h4 style={{color : \"rgb(201, 85, 85)\"}}className={styles[\"template-section-title\"]}>Deleting Product Set?</h4>\r\n                            <Divider style={{margin : \".7rem 0 1.4rem\"}} />\r\n                            {!isLoading && <p>Are you sure you want to delete all data from this set - {productSet && productSet.groupIdentifier}?</p>}\r\n                            {isLoading && <p>Currently deleting all products from this set...</p>}\r\n                            <div className={styles[\"buttons-container\"]}>\r\n                                \r\n                                {!isLoading && !status &&\r\n                                    <>\r\n                                    <Button onClick={deleteDataHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<DeleteIcon />}>\r\n                                        Delete Product Set\r\n                                    </Button>\r\n                                    \r\n                                    <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 159 171)\", color : \"white\"}} disableElevation startIcon={<Cancel />}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                    </>\r\n                                }\r\n\r\n\r\n                                {isLoading && \r\n                                    <>\r\n                                        <Button onClick={deleteDataHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                                            Deleting Product Set\r\n                                        </Button>\r\n                                        <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                            Cancel\r\n                                    </Button>\r\n                                    </>\r\n                                }\r\n\r\n                                {!isLoading && status === \"success\" &&\r\n                                    <>\r\n                                        <Button onClick={deleteDataHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Check />}>\r\n                                            Product Set Deleted\r\n                                        </Button>\r\n                                        <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </Alert>\r\n\r\n                </Modal>\r\n\r\n            </EmptyCardFlex>\r\n        </EmptyCardFlex>\r\n    )\r\n}","// hooks\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport { useParams } from \"react-router\";\r\nimport  { baseUrl } from \"../../../config\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../../components/MuiTable\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\n\r\n// styles\r\nimport styles from \"./ScrapedDataTable.module.scss\"\r\n\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n    let { authToken } = useAuth(),\r\n        { apiRoute } = useParams(),\r\n        { data : productSet } = useFetch(`/api/product-sets/single?apiRoute=/api/${apiRoute}`),\r\n        [productData, setProductData] = useState(null),\r\n        [siteName, setSiteName] = useState(\"\"),\r\n        [productBrand, setProductBrand] = useState(\"\"),\r\n\r\n\r\n\r\n        [message, setMessage] = useState(null),\r\n        [status, setStatus] = useState(null),\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [hasError, setHasError] = useState(false),\r\n        abortCont = new AbortController();\r\n        \r\n\r\n    useEffect(() => {\r\n        if(productSet.apiRoute)    {\r\n            let queryString = window.location.search;\r\n\r\n            setMessage(\"We are currently loading the data...\");\r\n            setStatus(\"info\");\r\n            setIsLoading(true);\r\n            setSiteName(prev => productSet.siteName);\r\n            setProductBrand(prev => productSet.productBrand);\r\n\r\n\r\n            fetch(`${baseUrl}${productSet.apiRoute}/all${queryString}`, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                signal : abortCont.signal\r\n            })\r\n                .then(res => res.json())\r\n                .then(dataObject => {\r\n\r\n                    if(Array.isArray(dataObject))    {\r\n                        setProductData(prev => dataObject);\r\n                    } else  {\r\n                        throw Error(dataObject.message)\r\n                    }\r\n\r\n                    setMessage(\"All data shown here are the ones we just saved into our database.\");\r\n                    setStatus(\"success\");\r\n                    setIsLoading(false);\r\n                    \r\n                    \r\n                })\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        setMessage(\"We have successfully fetched the data from the database.\");\r\n                        setStatus(\"error\");\r\n                        setIsLoading(false);\r\n                    }\r\n                })\r\n        }\r\n\r\n\r\n        return () => abortCont.abort();\r\n    }, [productSet])\r\n\r\n    return  (\r\n        <>  \r\n            \r\n\r\n            <EmptyCardFlex className={styles[\"main-container\"]}>\r\n                {message && <EmptyCardFlex style={{padding : \".7rem 0\"}}>\r\n                    <Alert severity={status}>{isLoading && <CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>}{message}</Alert>\r\n                </EmptyCardFlex>}\r\n                <Card>\r\n                    {siteName && \r\n                        <h1 className=\"page-title\">{siteName} - <span className={styles[\"highlighted\"]}>{productBrand}</span></h1>}\r\n                    {!siteName && !message &&\r\n                        <h1 className=\"page-title\">{pageTitle}</h1>}\r\n                    {productData && <MuiTable tableData={productData} uniqueId=\"_id\" excludedColumns={[\"imageUris\", \"dateCreated\", \"cardUri\", \"__v\", \"productUri\", \"multiFaced\"]}></MuiTable>}\r\n                </Card>\r\n            </EmptyCardFlex>  \r\n        </>\r\n    )\r\n}","// core\r\nimport { useHistory } from \"react-router\";\r\n\r\n// hooks\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useAccessCheck from \"../../hooks/useAccessCheck\";\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../components/MuiTable\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button } from '@material-ui/core';\r\nimport AddUserIcon from '@material-ui/icons/PersonAdd';\r\nimport ListAlt from '@material-ui/icons/ListAlt';\r\n\r\n\r\n// styles\r\nimport styles from \"./ManageUsers.module.scss\";\r\n\r\n// url;\r\nimport { getAllObjectKeys } from \"../../utilities/objects-array\";\r\n\r\n\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n    let history = useHistory(),\r\n        { data : users } = useFetch(\"/api/users/\"),\r\n        tableData = users.sort((a, b) => {\r\n            return a.firstName < b.firstName ? -1 : a.firstName > b.firstName ? 1 : 0;\r\n        })\r\n        .sort((a, b) => {   \r\n            return Number(b.permissionLevel) - Number(a.permissionLevel);\r\n        })\r\n        .map(item => {\r\n\r\n            const positions = [\"guest\", \"staff\", \"developer\", \"administrator\", \"site-owner\"];\r\n\r\n            const optionClickHandler = (value) => {\r\n                history.push(value);\r\n            }\r\n\r\n            return  {\r\n                ...item,\r\n                accessLevel : positions[item.permissionLevel - 1],\r\n                action : <div className={styles[\"action-column\"]} style={{display: \"flex\", flexDirection : \"row\", gap : \".7rem\", justifyContent: \"center\"}}>\r\n                    <Button \r\n                        onClick={optionClickHandler.bind(null, `/manage-users/${item._id}`)}\r\n                        startIcon={<ListAlt />} \r\n                        size=\"small\" \r\n                        style={{backgroundColor: \"rgb(85 159 171)\", color : \"white\", whiteSpace : \"nowrap\", minWidth : \"125px\", maxWidth : \"250px\"}}>View Details</Button>\r\n                        \r\n                </div>\r\n            }\r\n        }),\r\n        includedKeys = [\"_id\", \"firstName\", \"lastName\", \"username\", \"accessLevel\", \"action\",],\r\n        excludedColumns = getAllObjectKeys(tableData).filter(key => !includedKeys.includes(key));\r\n    \r\n    const addUserHandler = () => {\r\n        history.push(\"/manage-users/create\");\r\n    }\r\n\r\n\r\n    useAccessCheck(4);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            <EmptyCardFlex>\r\n                \r\n                <Card className={styles[\"main-container\"]}>\r\n                    <Button onClick={addUserHandler} startIcon={<AddUserIcon />} size=\"md\" \r\n                        style={{backgroundColor: \"rgb(35 191 112)\", color : \"white\", whiteSpace : \"nowrap\"}}>Add User</Button>\r\n                    <MuiTable tableData={tableData} uniqueId=\"_id\" excludedColumns={excludedColumns}></MuiTable>\r\n                </Card>\r\n            </EmptyCardFlex>    \r\n        </>\r\n    )\r\n}","// core\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport Select from \"../../../components/Select\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress, TextField, FormControl } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\n\r\n\r\n// styles\r\nimport styles from \"./EditUser.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../../config\";\r\n\r\n\r\n\r\nexport default function EditUser({loggedUser, user, editUserSetter, userSetter, updateStateHandler})  {\r\n\r\n    let abortCont = new AbortController(),\r\n        { authToken } = useAuth(),\r\n        [initialValue, setInitialValue] = useState({...user}),\r\n        [currentUser, setCurrentUser] = useState(user),\r\n        selectOptions = [\r\n            { name : \"Guest\", value : 1 },\r\n            { name : \"Staff\", value : 2 },\r\n            { name : \"Developer\", value : 3 },\r\n            { name : \"Administrator\", value : 4 },\r\n        ].filter(item => item.value < loggedUser.permissionLevel ),\r\n        [updateButtonEnabled, setUpdateButtonEnabled] = useState(false),\r\n        [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    const inputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n\r\n        setCurrentUser(prev => {\r\n            let obj = {\r\n                ...prev,\r\n                [propName] : e.target.value,\r\n            }\r\n            userSetter(previousState => {\r\n                return obj;\r\n            });\r\n\r\n            setUpdateButtonEnabled(prev => {\r\n                return compareData(obj);\r\n            });\r\n\r\n            return obj;\r\n        });\r\n    }   \r\n\r\n    const compareData = (userObject) => {\r\n        let results = [];\r\n        for(let key in userObject)  {\r\n            results.push(userObject[key] !== initialValue[key]);\r\n        }\r\n        return results.some(res => res);\r\n    }\r\n\r\n    const cancelEditHandler = () => {\r\n        editUserSetter(false);\r\n        userSetter(previousState => {\r\n            return initialValue;\r\n        });\r\n        updateStateHandler(false, null, null);\r\n    }\r\n\r\n    const selectOnChangeHandler = (value) => {\r\n        setCurrentUser(prev => {\r\n            let obj = {\r\n                ...prev,\r\n                permissionLevel : value,\r\n            }\r\n            userSetter(previousState => {\r\n                return obj;\r\n            });\r\n\r\n            setUpdateButtonEnabled(prev => {\r\n                return compareData(obj);\r\n            });\r\n            \r\n            return obj;\r\n        });\r\n    }\r\n\r\n    const updateUserHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        updateStateHandler(true, \"Updating User Information\", \"info\");\r\n        setIsLoading(true);\r\n        setUpdateButtonEnabled(false);\r\n\r\n        fetch(`${baseUrl}/api/users/${currentUser._id}`, {\r\n            method : \"PUT\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify(currentUser),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                updateStateHandler(false, \"We have successfully updated the user's information.\", \"success\");\r\n                setIsLoading(false);\r\n                setInitialValue(currentUser);\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setIsLoading(false);\r\n                    updateStateHandler(false, err.message, \"error\");\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        return () => abortCont.abort();\r\n\r\n    }, [currentUser])\r\n    \r\n    return (\r\n        <Card>\r\n            <div className={styles[\"edit-user-field-container\"]}>\r\n                <FormControl fullWidth>\r\n                    <TextField \r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        value={currentUser.firstName} \r\n                        label=\"First Name\" \r\n                        onChange={inputChangeHandler.bind(this, \"firstName\")}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                    <TextField \r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        value={currentUser.lastName} \r\n                        label=\"First Name\" \r\n                        onChange={inputChangeHandler.bind(this, \"lastName\")}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                    <TextField \r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        value={currentUser.username} \r\n                        label=\"First Name\" \r\n                        disabled\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                    <Select defaultValue={selectOptions.find(item => item.value === currentUser.permissionLevel)} selectOnchangeHandler={selectOnChangeHandler} label=\"Permission / Access Level\" options={selectOptions} uniqueProp=\"value\" optionLabelProp=\"name\" ></Select>\r\n                </FormControl>\r\n            </div>\r\n            <Divider style={{margin : \"1.4rem 0\"}} />\r\n            <div className={styles[\"buttons-container-main\"]}>\r\n                <Button onClick={cancelEditHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                    Cancel\r\n                </Button>\r\n                {!updateButtonEnabled && !isLoading && <Button disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<SaveIcon />}>\r\n                    Update\r\n                </Button>}\r\n                {updateButtonEnabled && !isLoading && <Button type=\"button\" onClick={updateUserHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />}>\r\n                    Update\r\n                </Button>}\r\n                {isLoading && <Button type=\"button\" disabled onClick={updateUserHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                    Update\r\n                </Button>}\r\n            </div>\r\n        </Card>\r\n    )\r\n}","// core\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// hooks\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useAccessCheck from \"../../../hooks/useAccessCheck\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport EditUser from \"../EditUser\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress, Modal } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Check from '@material-ui/icons/Check';\r\n\r\n\r\n// styles\r\nimport styles from \"./UserDetails.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../../config\";\r\n\r\n// utils\r\nimport { toCapitalizeAll, toNormalString } from \"../../../utilities/string\";\r\n\r\n\r\n\r\nexport default function UserDetails({pageTitle})   {\r\n\r\n    useAccessCheck(4);\r\n\r\n    let history = useHistory(),\r\n        { authToken, loggedUser } = useAuth(),\r\n        { id } = useParams(),\r\n        { data : user, hasError : userFetchError, fetchMessage : userFetchMessage } = useFetch(`/api/users/${id}`),\r\n        [currentUser, setCurrentUser] = useState(user),\r\n        [modalOpen, setModalOpen] = useState(false),\r\n        positions = [\"guest\", \"staff\", \"developer\", \"administrator\", \"site-owner\"],\r\n        abortCont = new AbortController(),\r\n\r\n        // delete user states\r\n        [isLoading, setIsLoading] = useState(null),\r\n        [message, setMessage] = useState(null),\r\n        [messageType, setMessageType] = useState(null),\r\n\r\n\r\n        // edit user state\r\n        [editUserOn, setEditUserOn] = useState(false);\r\n    \r\n\r\n    const modalSetter = (value) => {\r\n        setModalOpen(prev => value);\r\n    };\r\n\r\n    const editUserHandler = ()  => {\r\n        setEditUserOn(true)\r\n    };\r\n\r\n    const backButtonHandler = () => {\r\n        history.push(\"/manage-users/\");\r\n    }\r\n\r\n    const deleteUserHandler = () => {\r\n        setIsLoading(true);\r\n        setMessageType(\"info\");\r\n        setMessage(\"Deleting the user...\");\r\n        fetch(`${baseUrl}/api/users/${id}`, {\r\n            method : \"DELETE\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            signal : abortCont.signal\r\n        })\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(\"We couldn't fetch the data\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setIsLoading(false);\r\n                setMessageType(\"success\");\r\n                setMessage(\"User's information was successfully fetched.\");\r\n                setModalOpen(false);\r\n                setTimeout(() => history.push(\"/manage-users\"), 2500);\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setIsLoading(false);\r\n                    setMessageType(\"error\");\r\n                    setMessage(err.message);\r\n                    setModalOpen(false);\r\n\r\n                }\r\n            })\r\n    };\r\n    \r\n    const updateStateHandler = (loadingState, messageState, messageTypeState) => {\r\n        setIsLoading(loadingState);\r\n        setMessage(messageState);\r\n        setMessageType(messageTypeState);\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        setCurrentUser(user);        \r\n\r\n\r\n\r\n        return () => abortCont.abort();\r\n\r\n    }, [user])\r\n    return (\r\n        <>\r\n            \r\n            <EmptyCardFlex className={styles[\"main-container\"]}>\r\n                <h1 className=\"page-title\">{pageTitle}</h1>\r\n                {\r\n                    message && \r\n                    <Alert severity={messageType}>{isLoading && <><CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>&nbsp;&nbsp;&nbsp; </>}\r\n                        {message}\r\n                    </Alert>\r\n                }\r\n            \r\n                <EmptyCardFlex className={styles[\"main-cards-container\"]}>\r\n                        \r\n                    <Card>\r\n                        {/* <Divider style={{margin : \"1.4rem 0\"}} /> */}\r\n                        \r\n                        \r\n                        {!userFetchError && <div className={styles[\"user-info-container\"]}>\r\n                            <ul className={styles[\"user-info-list\"]}>\r\n                                <li><span className={styles[\"label\"]}>ID</span> : <span className={styles[\"value\"]}>{currentUser._id}</span></li>\r\n                                <li><span className={styles[\"label\"]}>First Name</span> : <span className={styles[\"value\"]}>{currentUser.firstName}</span></li>\r\n                                <li><span className={styles[\"label\"]}>Last Name</span> : <span className={styles[\"value\"]}>{currentUser.lastName}</span></li>\r\n                                <li><span className={styles[\"label\"]}>username</span> : <span className={styles[\"value\"]}>{currentUser.username}</span></li>\r\n                                <li><span className={styles[\"label\"]}>Access Level</span> : <span className={styles[\"value\"]}>{currentUser.permissionLevel ? toCapitalizeAll(toNormalString(positions[currentUser.permissionLevel - 1], \"url\")) : \"\"}</span></li>\r\n                            </ul>\r\n                        </div>}\r\n                        {\r\n                            userFetchError && \r\n                            <Alert severity=\"error\">\r\n                                {userFetchMessage}\r\n                            </Alert>\r\n                        }\r\n\r\n                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                        {currentUser && loggedUser && <>\r\n                        {\r\n                            (loggedUser.permissionLevel <= currentUser.permissionLevel || editUserOn) && \r\n                            <div className={styles[\"buttons-container-main\"]}>\r\n                                <Button onClick={backButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                    Back to Users' List\r\n                                </Button>\r\n                                <Button disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<DeleteIcon />}>\r\n                                    Delete User\r\n                                </Button>\r\n                                <Button disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\"  disableElevation startIcon={<EditIcon />}>\r\n                                    Edit User\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                        {(loggedUser.permissionLevel > currentUser.permissionLevel && !editUserOn) && <div className={styles[\"buttons-container-main\"]}>\r\n                        \r\n                            {!userFetchError && !message &&\r\n                            <>\r\n                                <Button onClick={backButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                    Back to Users' List\r\n                                </Button>\r\n                                <Button onClick={() =>modalSetter(true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<DeleteIcon />}>\r\n                                    Delete User\r\n                                </Button>\r\n                                <Button onClick={editUserHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 177 201)\", color : \"white\"}} disableElevation startIcon={<EditIcon />}>\r\n                                    Edit User\r\n                                </Button>\r\n                            </>\r\n                            }\r\n                            {userFetchError && !message && \r\n                            <>\r\n                                <Button onClick={backButtonHandler} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                    Back to Users' List\r\n                                </Button>\r\n                                <Button onClick={() =>modalSetter(true)} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<DeleteIcon />}>\r\n                                    Delete User\r\n                                </Button>\r\n                                <Button onClick={editUserHandler} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\"  disableElevation startIcon={<EditIcon />}>\r\n                                    Edit User\r\n                                </Button>\r\n                                \r\n                            </>\r\n                            }\r\n\r\n                            {message && messageType === \"success\" &&\r\n                            <>\r\n                                <Button onClick={backButtonHandler} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                    Back to Users' List\r\n                                </Button>\r\n                                <Button onClick={() =>modalSetter(true)} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<DeleteIcon />}>\r\n                                    User Deleted\r\n                                </Button>\r\n                                <Button onClick={editUserHandler} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\"  disableElevation startIcon={<EditIcon />}>\r\n                                    Edit User\r\n                                </Button>\r\n                                \r\n                            </>\r\n                            }\r\n                            <Modal\r\n                                aria-labelledby=\"transition-modal-title\"\r\n                                aria-describedby=\"transition-modal-description\"\r\n                                onClose={() => modalSetter(false)}\r\n                                open={modalOpen}\r\n                                style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}\r\n                            >\r\n            \r\n                                    <Alert severity=\"error\" style={{minHeight : \"300px\", minWidth : \"250px\", paddingRight : \"2rem\"}}>\r\n                                        <h4 style={{color : \"rgb(201, 85, 85)\"}}className={styles[\"template-section-title\"]}>Deleting the User?</h4>\r\n                                        <Divider style={{margin : \".7rem 0 1.4rem\"}} />\r\n                                        <p>Are you sure you want to delete this user? Is he/she annoying?</p>\r\n                                        <div className={styles[\"buttons-container\"]}>\r\n                                            \r\n                                            {!isLoading && !messageType &&\r\n                                                <>\r\n                                                <Button onClick={deleteUserHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<DeleteIcon />}>\r\n                                                    Delete User\r\n                                                </Button>\r\n                                                \r\n                                                <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 159 171)\", color : \"white\"}} disableElevation startIcon={<Cancel />}>\r\n                                                    Cancel\r\n                                                </Button>\r\n                                                </>\r\n                                            }\r\n\r\n\r\n                                            {isLoading && \r\n                                                <>\r\n                                                    <Button onClick={deleteUserHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                                                        Deleting User\r\n                                                    </Button>\r\n                                                    <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                                    Cancel\r\n                                                    </Button>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!isLoading && messageType === \"success\" &&\r\n                                                <>\r\n                                                    <Button onClick={deleteUserHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Check />}>\r\n                                                        User Deleted\r\n                                                    </Button>\r\n                                                    <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                                    Cancel\r\n                                                    </Button>\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </Alert>\r\n\r\n                            </Modal>\r\n                        </div>}\r\n                        </>}\r\n                    </Card>\r\n                    {editUserOn && \r\n                        <EditUser loggedUser={loggedUser} user={currentUser} editUserSetter={setEditUserOn} userSetter={setCurrentUser} updateStateHandler={updateStateHandler} />\r\n                    }\r\n                </EmptyCardFlex>    \r\n            </EmptyCardFlex>\r\n        </>    \r\n    )\r\n}","import EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\n\r\nimport styles from \"./ManageTasks.module.scss\"\r\n\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            <EmptyCardFlex className={styles[\"main-container\"]}>\r\n                <h2 className={styles[\"section-title\"]}>Page Under Construction...</h2>\r\n            </EmptyCardFlex>\r\n        </>\r\n    )\r\n}","// core\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress, TextField, FormControl } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport PasswordIcon from '@material-ui/icons/VpnKey';\r\n\r\n\r\n// styles\r\nimport styles from \"./EditInfo.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../../config\";\r\n\r\n\r\nexport default function EditInfo({currentUser, currentUserSetter, updateStateHandler, editInforHandler})  {\r\n\r\n    let abortCont = new AbortController(),\r\n        { authToken } = useAuth(),\r\n        [updateButtonEnabled, setUpdateButtonEnabled] = useState(false),\r\n        [changePassword, setChangePassword] = useState(false),\r\n        [isLoading, setIsLoading] = useState(false),\r\n\r\n        // change password message,\r\n        [passwordMessage, setPasswordMessage] = useState(null),\r\n        [passwordMessageType, setPasswordMessageType] = useState(null),\r\n\r\n        // data for submission\r\n        [firstName, setFirstName] = useState(currentUser.firstName),\r\n        [lastName, setLastName] = useState(currentUser.lastName),\r\n        [password, setPassword] = useState(null),\r\n        [passwordConf, setPasswordConf] = useState(null);\r\n\r\n\r\n\r\n    \r\n    const inputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n        let setter = propName === \"firstName\" ? setFirstName : setLastName;\r\n        setter(prev => e.target.value);\r\n    }\r\n\r\n    const cancelEditHandler = () => {\r\n        editInforHandler(prev => false);\r\n    }\r\n\r\n    \r\n\r\n    const changePasswordHandler = (value, e) => {\r\n        e.preventDefault();\r\n        setChangePassword(prev => value);\r\n        setPassword(null);\r\n        setPasswordConf(null);\r\n    }\r\n\r\n    const passwordInputChangeHandler = (propName, e) => {\r\n        let setter = propName === \"password\" ? setPassword : setPasswordConf;\r\n        setter(prev => e.target.value);\r\n    }\r\n\r\n    // update request submission\r\n    const updateUserHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        let obj = password ? {firstName, lastName, password} : {firstName, lastName};\r\n\r\n        updateStateHandler(true, \"Currently updating your info...\", \"info\");\r\n        setIsLoading(true);\r\n\r\n        fetch(`${baseUrl}/api/users/${currentUser._id}`,    {\r\n            method : \"PUT\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify(obj),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                updateStateHandler(false, \"We have successfully updated your info!\", \"success\");\r\n                setIsLoading(false);\r\n                currentUserSetter(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        firstName,\r\n                        lastName,\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    updateStateHandler(false, err.message, \"error\");\r\n                    setIsLoading(false);\r\n                }   \r\n            });\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(changePassword && password && passwordConf) {\r\n            if(password === passwordConf)   {\r\n                if(password.trim().length >= 8) {\r\n                    setUpdateButtonEnabled(true);\r\n                    setPasswordMessage(\"Passwords met the number of required characters, and both of them matched.\");\r\n                    setPasswordMessageType(\"success\");\r\n                } else  {\r\n                    setUpdateButtonEnabled(false);\r\n                    setPasswordMessage(\"Password requires a minimum of 8 characters.\");\r\n                    setPasswordMessageType(\"error\");\r\n                }\r\n            } else  {\r\n                setUpdateButtonEnabled(false);\r\n                setPasswordMessage(\"Please type the same password on both fields.\");\r\n                setPasswordMessageType(\"error\");\r\n            }\r\n        } else if(firstName !== currentUser.firstName || lastName !== currentUser.lastName) {\r\n            setUpdateButtonEnabled(true);\r\n        } else  {\r\n            setUpdateButtonEnabled(false);\r\n        }\r\n\r\n\r\n        return () => abortCont.abort();\r\n    }, [changePassword, firstName, lastName, password, passwordConf]);\r\n    \r\n\r\n    return (\r\n        <Card>\r\n            <form onSubmit={updateUserHandler}>\r\n                <div className={styles[\"edit-user-field-container\"]}>\r\n                    <FormControl fullWidth>\r\n                        <TextField \r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            value={firstName} \r\n                            label=\"First Name\" \r\n                            onChange={inputChangeHandler.bind(this, \"firstName\")}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl fullWidth>\r\n                        <TextField \r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            value={lastName} \r\n                            label=\"Last Name\" \r\n                            onChange={inputChangeHandler.bind(this, \"lastName\")}\r\n                        />\r\n                    </FormControl>\r\n                    {\r\n                        changePassword && \r\n                        <>\r\n                        <FormControl fullWidth>\r\n                            <TextField \r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                label=\"Password\" \r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={passwordInputChangeHandler.bind(this, \"password\")}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl fullWidth>\r\n                            <TextField \r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                label=\"Confirm Password\" \r\n                                type=\"password\"\r\n                                value={passwordConf}\r\n                                onChange={passwordInputChangeHandler.bind(this, \"passwordConf\")}\r\n                            />\r\n                            {passwordMessage && passwordMessageType === \"error\" && <p className={styles[\"error-message\"]}>{passwordMessage}</p>}\r\n                            {passwordMessage && passwordMessageType === \"success\" && <p className={styles[\"success-message\"]}>{passwordMessage}</p>}\r\n                        </FormControl>\r\n                        </>\r\n                    }\r\n                </div>\r\n                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                <div className={styles[\"buttons-container-main\"]}>\r\n                    {!isLoading &&\r\n                        <Button onClick={cancelEditHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                            Cancel\r\n                        </Button>\r\n                    }\r\n                    {isLoading &&\r\n                        <Button onClick={cancelEditHandler} type=\"button\" disabled variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                            Cancel\r\n                        </Button>\r\n                    }\r\n                    { isLoading && \r\n                    <>\r\n                        {!changePassword && \r\n                            <Button onClick={changePasswordHandler.bind(this, true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation disabled startIcon={<PasswordIcon />}>\r\n                                Change Password\r\n                            </Button>\r\n                        }\r\n                        {changePassword &&\r\n                            <Button onClick={changePasswordHandler.bind(this, false)} type=\"button\" variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<PasswordIcon />}>\r\n                                Keep Same Password\r\n                            </Button>\r\n                        }\r\n                    </>\r\n                    }\r\n                    { !isLoading && \r\n                        <>\r\n                            {!changePassword && \r\n                                <Button onClick={changePasswordHandler.bind(this, true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation style={{backgroundColor : \"rgb(194 138 36)\", color : \"white\"}} startIcon={<PasswordIcon />}>\r\n                                    Change Password\r\n                                </Button>\r\n                            }\r\n                            {changePassword &&\r\n                                <Button onClick={changePasswordHandler.bind(this, false)} type=\"button\" variant=\"contained\" size=\"small\" style={{backgroundColor : \"#67b5a6\", color : \"white\"}} disableElevation startIcon={<PasswordIcon />}>\r\n                                    Keep Same Password\r\n                                </Button>\r\n                            }\r\n                        </>\r\n                    }\r\n                    {!updateButtonEnabled && !isLoading && <Button disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<SaveIcon />}>\r\n                        Update My Info\r\n                    </Button>}\r\n                    {updateButtonEnabled && !isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />}>\r\n                        Update My Info\r\n                    </Button>}\r\n                    {isLoading && <Button type=\"submit\" disabled variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                        Updating Info...\r\n                    </Button>}\r\n                </div>\r\n            </form>\r\n        </Card>\r\n    )\r\n}","// core\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress } from '@material-ui/core';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nimport { toNormalString, toCapitalizeAll } from \"../../utilities/string\";\r\n\r\n// styles\r\nimport styles from \"./MyProfile.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../config\";\r\nimport EditInfo from \"./EditInfo\";\r\n\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n    let { loggedUser, authToken } = useAuth(),\r\n        history = useHistory(),\r\n        abortCont = new AbortController(),\r\n        positions = [\"guest\", \"staff\", \"developer\", \"administrator\", \"site-owner\"],\r\n        [currentUser, setCurrentUser] = useState(),\r\n\r\n        // edit info\r\n        [editInfoEnabled, setEditInfoEnabled] = useState(false),\r\n\r\n\r\n        // fetch states\r\n        [message, setMessage] = useState(null),\r\n        [messageType, setMessageType] = useState(null),\r\n        [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n\r\n    const updateStateHandler = (loadingState, messageState, messageTypeState) => {\r\n        setIsLoading(loadingState);\r\n        setMessage(messageState);\r\n        setMessageType(messageTypeState);\r\n    }\r\n\r\n    const editInforHandler = (value) => {\r\n        setEditInfoEnabled(value);\r\n    }\r\n\r\n    const backButtonHandler = () => {\r\n        history.goBack();\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(loggedUser) {\r\n\r\n            setMessage(\"Currently getting your information\");\r\n            setMessageType(\"info\");\r\n            setIsLoading(true);\r\n\r\n            fetch(`${baseUrl}/api/users/single?username=${loggedUser.username}&permissionLevel=${loggedUser.permissionLevel}`, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                signal : abortCont.signal,\r\n            })\r\n                .then(res => {\r\n                    return res.json()\r\n                })\r\n                .then(data => {\r\n                    setMessage(\"We have successfully fetched your information from the database.\");\r\n                    setMessageType(\"success\");\r\n                    setIsLoading(false);\r\n\r\n                    setCurrentUser(prev => data);\r\n\r\n                })\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        setMessage(\"We couldn't reach the server.\");\r\n                        setMessageType(\"error\");\r\n                        setIsLoading(false);\r\n                    }\r\n                })\r\n\r\n\r\n\r\n        }\r\n\r\n        return () => abortCont.abort();\r\n    }, [loggedUser])\r\n    \r\n\r\n    return (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            {\r\n                message && \r\n                <Alert severity={messageType}>{isLoading && <><CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>&nbsp;&nbsp;&nbsp; </>}\r\n                    {message}\r\n                </Alert>\r\n            }\r\n            <EmptyCardFlex className={styles[\"main-cards-container\"]}>\r\n                <Card>\r\n                    {currentUser && \r\n                    <>\r\n                        <div className={styles[\"user-info-container\"]}>\r\n                            <ul className={styles[\"user-info-list\"]}>\r\n                                <li><span className={styles[\"label\"]}>ID</span> : <span className={styles[\"value\"]}>{currentUser._id}</span></li>\r\n                                <li><span className={styles[\"label\"]}>First Name</span> : <span className={styles[\"value\"]}>{currentUser.firstName}</span></li>\r\n                                <li><span className={styles[\"label\"]}>Last Name</span> : <span className={styles[\"value\"]}>{currentUser.lastName}</span></li>\r\n                                <li><span className={styles[\"label\"]}>username</span> : <span className={styles[\"value\"]}>{currentUser.username}</span></li>\r\n                                <li><span className={styles[\"label\"]}>Access Level</span> : <span className={styles[\"value\"]}>{currentUser.permissionLevel ? toCapitalizeAll(toNormalString(positions[currentUser.permissionLevel - 1], \"url\")) : \"\"}</span></li>\r\n                            </ul>\r\n                        </div>\r\n                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                    </>\r\n                    }\r\n                    <>\r\n                        <div className={styles[\"buttons-container-main\"]}>\r\n                        {!isLoading && \r\n                            <Button onClick={backButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                Back\r\n                            </Button>\r\n                        }\r\n                        {isLoading && \r\n                            <Button onClick={backButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation disabled startIcon={<Cancel />}>\r\n                                Back\r\n                            </Button>\r\n                        }\r\n                        {!editInfoEnabled &&\r\n                            <Button onClick={editInforHandler.bind(this, true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 177 201)\", color : \"white\"}} disableElevation startIcon={<EditIcon />}>\r\n                                Edit My Info\r\n                            </Button>\r\n                        }\r\n                        {editInfoEnabled &&\r\n                            <Button onClick={editInforHandler.bind(this, true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<EditIcon />}>\r\n                                Edit My Info\r\n                            </Button>\r\n                        }\r\n                        </div>\r\n                    </>\r\n                    \r\n                </Card>\r\n                \r\n\r\n                {\r\n                    editInfoEnabled && \r\n                    <EditInfo currentUser={currentUser} currentUserSetter={setCurrentUser} editInforHandler={editInforHandler} updateStateHandler={updateStateHandler} ></EditInfo>\r\n                }\r\n\r\n\r\n            </EmptyCardFlex>\r\n        </EmptyCardFlex>\r\n    )\r\n}","import EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport styles from \"./Page404.module.scss\";\r\n\r\n\r\n\r\nexport default function Page404()   {\r\n    return (\r\n        <EmptyCardFlex className={styles[\"page404-container\"]}>\r\n            <h2 className={styles[\"page404-error\"]}>404 Error : Page not found</h2>\r\n        </EmptyCardFlex>\r\n    )\r\n}","// core\r\nimport { useHistory } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// hooks\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useAccessCheck from \"../../../hooks/useAccessCheck\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport Select from \"../../../components/Select\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress, TextField, FormControl, InputAdornment } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport PasswordIcon from '@material-ui/icons/VpnKey';\r\nimport UsernameIcon from '@material-ui/icons/AccountCircle';\r\n\r\n\r\n// styles\r\nimport styles from \"./CreateUser.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../../config\";\r\n\r\n// utils\r\nimport { debounce } from \"../../../utilities\";\r\n\r\n\r\nexport default function CreateUser({pageTitle})    {\r\n\r\n    useAccessCheck(4);\r\n\r\n    let history = useHistory(),\r\n        abortCont = new AbortController(),\r\n        { authToken, loggedUser } = useAuth(),\r\n        [user, setUser] = useState({\r\n            firstName : null,\r\n            lastName : null,\r\n            username : null,\r\n            password : null,\r\n            permissionLevel : 1,\r\n        }),\r\n        [selectOptions, setSelectOptions] = useState([\r\n            { name : \"Guest\", value : 1 },\r\n            { name : \"Staff\", value : 2 },\r\n            { name : \"Developer\", value : 3 },\r\n            { name : \"Administrator\", value : 4 },\r\n        ]),\r\n\r\n        // password\r\n        [passwordMessage, setPasswordMessage] = useState(null),\r\n        [passwordMessageType, setPasswordMessageType] = useState(null),\r\n\r\n        // save user states;\r\n        [message, setMessage] = useState(null),\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [messageType, setMessageType] = useState(null),\r\n        [saveButtonEnabled, setSaveButtonEnabled] = useState(false),\r\n\r\n        // username state checker\r\n        [usernameCheckMessage, setUsernameCheckMessage] = useState(null),\r\n        [usernameCheckLoading, setUsernameCheckLoading] = useState(false),\r\n        [usernameCheckMessageType, setUsernameCheckMessageType] = useState(null);\r\n\r\n\r\n\r\n    const inputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if(propName === \"password\")   {\r\n            if(e.target.value.trim().length >= 8)    {\r\n                setPasswordMessage(\"Password is valid\");\r\n                setPasswordMessageType(\"success\");\r\n            } else  {\r\n                setPasswordMessage(\"Password must contain at least 8 characters.\");\r\n                setPasswordMessageType(\"error\");\r\n            }\r\n        }\r\n        setUser(prev => {\r\n            let obj = {\r\n                ...prev,\r\n                [propName] : e.target.value,\r\n            }\r\n            return obj;\r\n        });\r\n    }   \r\n\r\n\r\n    const selectOnChangeHandler = (value) => {\r\n        setUser(prev => {\r\n            let obj = {\r\n                ...prev,\r\n                permissionLevel : value,\r\n            }\r\n            return obj;\r\n        });\r\n    }\r\n\r\n    \r\n    const cancelButtonHandler = () => {\r\n        history.push(\"/manage-users/\")\r\n    }\r\n\r\n    const usernameKeypressHandler = (e) => {\r\n        setSaveButtonEnabled(prev => false);\r\n        setUsernameCheckMessage(\"Checking the uniqueness of entered username...\");\r\n        setUsernameCheckLoading(true);\r\n        setUsernameCheckMessageType(\"info\");\r\n        if(e.code === \"Space\")  {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    const checkUsername = debounce((e) => {\r\n\r\n\r\n        let enteredUsername = e.target.value.trim().replace(/\\s+/g, \"\").toLowerCase();\r\n\r\n        if(!enteredUsername.length) {\r\n            setUsernameCheckMessage(\"Please enter a username\");\r\n            setUsernameCheckLoading(false);\r\n            setUsernameCheckMessageType(\"info\");\r\n        } else  {\r\n            \r\n            \r\n\r\n\r\n            fetch(`${baseUrl}/api/users/all?username=${enteredUsername}`, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                signal : abortCont.signal,\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if(data.length) {\r\n                        throw Error(\"This username is already in use.\")\r\n                    } else  {\r\n                        setUsernameCheckMessage(\"Username is valid.\");\r\n                        setUsernameCheckLoading(false);\r\n                        setUsernameCheckMessageType(\"success\");\r\n                        setUser(prev => {\r\n                            return {\r\n                                ...prev,\r\n                                username : enteredUsername\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        setUsernameCheckMessage(err.message);\r\n                        setUsernameCheckLoading(true);\r\n                        setUsernameCheckMessageType(\"error\");\r\n                        setUser(prev => {\r\n                            return {\r\n                                ...prev,\r\n                                username : null\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        \r\n    }, 1400, false);\r\n\r\n\r\n    const saveUserHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"Saving User...\");\r\n        setIsLoading(true);\r\n        setMessageType(\"info\");\r\n        setSaveButtonEnabled(false);\r\n\r\n        fetch(`${baseUrl}/api/users`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify(user),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setMessage(\"We have successfully saved the user.\");\r\n                setIsLoading(false);\r\n                setMessageType(\"success\");\r\n                setSaveButtonEnabled(false);\r\n\r\n                let userId = data.data._id;\r\n\r\n                setTimeout(() => history.push(`/manage-users/${userId}`), 2500);\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setMessage(err.message);\r\n                    setIsLoading(false);\r\n                    setMessageType(\"error\");\r\n                    setSaveButtonEnabled(true);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    const checkAllFields = () => {\r\n        let results = [];\r\n\r\n        for(let key in user)    {\r\n            if(key === \"password\")    {\r\n                if(user.password && user.password.length >= 8)   {\r\n                    results.push(true);\r\n                } else  {\r\n                    results.push(false);\r\n                }\r\n            } else  {\r\n                results.push(user[key] && user[key] !== \"\");\r\n            }\r\n        }\r\n\r\n        setSaveButtonEnabled(prev => results.every(res => res));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(loggedUser)  {\r\n            setSelectOptions(prev => {\r\n                return prev.filter(item => item.value < loggedUser.permissionLevel);\r\n            });\r\n        }\r\n\r\n        checkAllFields();\r\n\r\n\r\n        return () => abortCont.abort();\r\n\r\n    }, [loggedUser, user]);\r\n\r\n    return (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>\r\n                <h1 className=\"page-title\">{pageTitle}</h1>\r\n                {\r\n                    message && \r\n                    <Alert severity={messageType}>{isLoading && <><CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>&nbsp;&nbsp;&nbsp; </>}\r\n                        {message}\r\n                    </Alert>\r\n                }\r\n            \r\n                <EmptyCardFlex className={styles[\"main-cards-container\"]}>\r\n                    <Card>  \r\n                        <form onSubmit={saveUserHandler}>\r\n                            <div className={styles[\"create-user-field-container\"]}>\r\n                                <FormControl fullWidth className={styles[\"firstName\"]}>\r\n                                    <TextField \r\n                                        value={user.firstName} \r\n                                        label=\"First Name\" \r\n                                        onChange={inputChangeHandler.bind(this, \"firstName\")}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl fullWidth className={styles[\"lastName\"]}>\r\n                                    <TextField \r\n                                        value={user.lastName} \r\n                                        label=\"Last Name\" \r\n                                        onChange={inputChangeHandler.bind(this, \"lastName\")}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl fullWidth className={styles[\"username\"]}>\r\n                                    <TextField \r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                            <UsernameIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        label=\"Username\"\r\n                                        onKeyPress={usernameKeypressHandler}\r\n                                        onChange={checkUsername}\r\n                                    />\r\n                                    {usernameCheckMessage && usernameCheckMessageType === \"error\" && <p className={styles[\"error-message\"]}>{usernameCheckMessage}</p>}\r\n                                    {usernameCheckMessage && usernameCheckMessageType === \"info\" && usernameCheckLoading && <p className={styles[\"info-message\"]}>{usernameCheckMessage}</p>}\r\n                                    {usernameCheckMessage && usernameCheckMessageType === \"info\" && !usernameCheckLoading && <p className={styles[\"info-message\"]}>{usernameCheckMessage}</p>}\r\n                                    {usernameCheckMessage && usernameCheckMessageType === \"success\" && <p className={styles[\"success-message\"]}>{usernameCheckMessage}</p>}\r\n                                </FormControl>\r\n                                <FormControl fullWidth className={styles[\"password\"]}>\r\n                                    <TextField \r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                            <PasswordIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        value={user.password} \r\n                                        label=\"Password\" \r\n                                        onChange={inputChangeHandler.bind(this, \"password\")}\r\n                                    />\r\n                                    {passwordMessage && <p className={styles[`${passwordMessageType}-message`]}>{passwordMessage}</p>}\r\n                                </FormControl>\r\n                                <FormControl fullWidth className={styles[\"permissionLevel\"]}>\r\n                                    <Select defaultValue={selectOptions[0]} selectOnchangeHandler={selectOnChangeHandler} label=\"Permission / Access Level\" options={selectOptions} uniqueProp=\"value\" optionLabelProp=\"name\" ></Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            \r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div className={styles[\"buttons-container-main\"]}>\r\n                                <Button onClick={cancelButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                    Cancel\r\n                                </Button>\r\n                                {!saveButtonEnabled && !isLoading && <Button disabled type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />}>\r\n                                    Save User\r\n                                </Button>}\r\n\r\n                                {!saveButtonEnabled && isLoading && <Button disabled type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                                    Saving the User...\r\n                                </Button>}\r\n                                {saveButtonEnabled && !isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />}>\r\n                                    Save User\r\n                                </Button>}\r\n                            </div>\r\n                        </form>\r\n                    </Card>\r\n                </EmptyCardFlex>\r\n\r\n        </EmptyCardFlex>\r\n    )\r\n}","export function debounce(func, wait, immediate = false){\r\n    let timeout;\r\n    return function() {\r\n        let context = this, args = arguments;\r\n        let later = function() {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n        };\r\n        let callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(context, args);\r\n    };\r\n}\r\n\r\n\r\n\r\n","// core\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// Layout\r\nimport Layout from \"./Layout\";\r\n\r\n// routes \r\nimport routes from \"./routes\";\r\n\r\n// views \r\n    import Login from \"./views/Login\";\r\n    import Dashboard from \"./views/Dashboard\";\r\n\r\n    // Manage Scrapers\r\n    import ManageScrapers from \"./views/ManageScrapers\";\r\n        import CreateScraper from \"./views/ManageScrapers/CreateScraper/\";\r\n        import RunScraperScript from \"./views/ManageScrapers/RunScraperScript/RunScraperScript\";\r\n        import ScraperDetails from \"./views/ManageScrapers/ScraperDetails\";\r\n\r\n    // Scraped Data\r\n    import ScrapedData from \"./views/ScrapedData\";\r\n        import ScrapedDataTable from \"./views/ScrapedData/ScrapedDataTable\";\r\n\r\n    // Manage Users\r\n    import ManageUsers from \"./views/ManageUsers\";\r\n        import UserDetails from \"./views/ManageUsers/UserDetails\";\r\n\r\n    // Manage Tasks\r\n    import ManageTasks from \"./views/ManageTasks\";\r\n\r\n    // MY Profile\r\n    import MyProfile from \"./views/MyProfile\";\r\n\r\n\r\n    // 404\r\n    import Page404 from \"./views/Page404/Page404\";\r\n\r\n\r\n\r\n// css\r\nimport styles from \"./MainComponent.module.scss\";\r\nimport CreateUser from \"./views/ManageUsers/CreateUser\";\r\n\r\nexport default function Main()  {\r\n\r\n    const getRoute = (route) => {\r\n        return routes.find(item => item.path === route);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <Router>\r\n                <Switch>\r\n\r\n                    <Route path=\"/\" exact>\r\n                        <Layout><Dashboard pageTitle=\"Scraper Admin Dashboard\" /></Layout>\r\n                    </Route>\r\n\r\n                    {/* {ManageScrapers} */}\r\n                    <Route path=\"/manage-scrapers\" exact>\r\n                        <Layout><ManageScrapers pageTitle={getRoute(\"/manage-scrapers\").title} /></Layout>\r\n                    </Route>\r\n                        <Route path=\"/manage-scrapers/create-scraper/\" exact>\r\n                            <Layout><CreateScraper pageTitle=\"Create a Scraper Script\" /></Layout>\r\n                        </Route>\r\n                        \r\n                        <Route path=\"/manage-scrapers/run-script/:id\" exact>\r\n                            <Layout><RunScraperScript pageTitle=\"Run Scraper Script\" /></Layout>\r\n                        </Route>\r\n\r\n                        <Route path=\"/manage-scrapers/:id\" exact>\r\n                            <Layout><ScraperDetails pageTitle=\"Scraper Details : \" /></Layout>\r\n                        </Route>\r\n\r\n                    \r\n                    {/* Scraped Data */}\r\n                    <Route path=\"/scraped-data/\" exact>\r\n                        <Layout><ScrapedData pageTitle={getRoute(\"/scraped-data\").title} /></Layout>\r\n                    </Route>\r\n                        <Route path=\"/scraped-data/:apiRoute\">\r\n                            <Layout><ScrapedDataTable pageTitle=\"Scraped Data : \" /></Layout>\r\n                        </Route>\r\n\r\n                    {/* Manage Users */}\r\n                    <Route path=\"/manage-users\" exact>\r\n                        <Layout><ManageUsers pageTitle={getRoute(\"/manage-users\").title} /></Layout>\r\n                    </Route>\r\n                        <Route path=\"/manage-users/create\" exact>\r\n                            <Layout><CreateUser pageTitle=\"Create a New User\" /></Layout>\r\n                        </Route>\r\n                        <Route path=\"/manage-users/:id\" exact>\r\n                            <Layout><UserDetails pageTitle=\"User Information\" /></Layout>\r\n                        </Route>\r\n\r\n                    \r\n                        \r\n\r\n                    {/* Tasks*/}\r\n                    <Route path=\"/manage-tasks\" exact>\r\n                        <Layout><ManageTasks pageTitle={getRoute(\"/manage-tasks\").title} /></Layout>\r\n                    </Route>\r\n\r\n                    {/* My Profile */}\r\n                    <Route path=\"/my-profile\" exact>\r\n                        <Layout><MyProfile pageTitle=\"My Profile\" /></Layout>\r\n                    </Route>\r\n\r\n                    {/* Login */}\r\n                    <Route path=\"/login\" exact>\r\n                        <Login  />\r\n                    </Route>\r\n\r\n\r\n                    <Route path=\"/\" >\r\n                        <Layout><Page404 pageTitle={\"Page 404\"} /></Layout>\r\n                    </Route>\r\n                    \r\n                    \r\n                </Switch>\r\n                \r\n            </Router>\r\n        </div>\r\n    );\r\n}","import { blue,blueGrey, red } from '@material-ui/core/colors';\r\nimport { createTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createTheme({  \r\n    palette: {\r\n        primary: blue,\r\n        secondary: blueGrey,\r\n        error: red,\r\n    },\r\n    typography: {\r\n        button: {\r\n            textTransform: 'none',\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;","// Main Component\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport MainComponent from \"./MainComponent\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport theme from './theme';    \r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\n\r\n\r\nimport \"./Reset.scss\";\r\nimport \"./App.scss\";\r\nimport \"./Defaults.scss\";\r\n\r\nfunction App() {\r\n\t\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t<MainComponent />\r\n\t\t\t\t</div>\r\n\t\t\t</ThemeProvider>\r\n\t\t</Router>\r\n\r\n  \t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  // TODO : clean all fetch\r\n\t<App />,\r\n  \tdocument.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"Header_main-header__3eOCA\",\"button-container\":\"Header_button-container__ti_Jx\",\"nav-button\":\"Header_nav-button__lRemk\",\"bar-container\":\"Header_bar-container__MBglt\",\"bar\":\"Header_bar__33P0w\",\"active\":\"Header_active__8uDMo\",\"navButtonBars\":\"Header_navButtonBars__1E8ns\",\"header-nav\":\"Header_header-nav__1HYWa\",\"selected\":\"Header_selected__1oEhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mui-table-container\":\"MuiTable_mui-table-container__t-iYb\",\"mui-table\":\"MuiTable_mui-table__2siwn\",\"image-slider-container\":\"MuiTable_image-slider-container__3CN7f\",\"image-slider-inner\":\"MuiTable_image-slider-inner__1tOpY\",\"image-container\":\"MuiTable_image-container__1CuhY\",\"tbody\":\"MuiTable_tbody__1ELSK\",\"table-cell\":\"MuiTable_table-cell__2iSCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"Login_template-title__24amy\",\"highlighted\":\"Login_highlighted__3eS1t\",\"highlighted-2\":\"Login_highlighted-2__3BPcv\",\"template-subtitle\":\"Login_template-subtitle__1eUyI\",\"template-section-title\":\"Login_template-section-title__3s-il\",\"error-message\":\"Login_error-message__3ttV8\",\"description\":\"Login_description__2m9NU\",\"buttons-container\":\"Login_buttons-container__9Kn7-\",\"field-container\":\"Login_field-container__1cDP0\",\"select-container\":\"Login_select-container__1hxIy\",\"main-container\":\"Login_main-container__3Mwx7\",\"action-buttons-container\":\"Login_action-buttons-container__2lx6-\",\"form-container\":\"Login_form-container__3cvAy\",\"logo-container\":\"Login_logo-container__1xqTK\",\"site-name\":\"Login_site-name__2d77P\",\"logo\":\"Login_logo__UtXdE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"CreateScraper_template-title__2sUbP\",\"highlighted\":\"CreateScraper_highlighted__1FLML\",\"template-subtitle\":\"CreateScraper_template-subtitle__3LSoK\",\"template-section-title\":\"CreateScraper_template-section-title__3CJ60\",\"error-message\":\"CreateScraper_error-message__2o4TX\",\"description\":\"CreateScraper_description___tIGu\",\"buttons-container\":\"CreateScraper_buttons-container__1-How\",\"create-scraper-container\":\"CreateScraper_create-scraper-container__zHcQF\",\"site-resource-card\":\"CreateScraper_site-resource-card__3Mfl4\",\"site-resource-select-container\":\"CreateScraper_site-resource-select-container__2ppek\",\"json-data\":\"CreateScraper_json-data__4sNLD\",\"label\":\"CreateScraper_label__2rD19\",\"container\":\"CreateScraper_container__2aybL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"Dashboard_main-container__2pDL7\",\"grid-container\":\"Dashboard_grid-container__ySdI9\",\"data-container\":\"Dashboard_data-container__Ha2cs\",\"users-container\":\"Dashboard_users-container__1vS3S\",\"scrapers-container\":\"Dashboard_scrapers-container__2RAVV\",\"profile-container\":\"Dashboard_profile-container__1m_Y1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"CreateSiteResource_form-container__I57IL\",\"template-title\":\"CreateSiteResource_template-title__1hvQ8\",\"form\":\"CreateSiteResource_form__1tnkX\",\"input-container\":\"CreateSiteResource_input-container__bpnU2\",\"buttons-container\":\"CreateSiteResource_buttons-container__1PLbK\"};"],"sourceRoot":""}