{"version":3,"sources":["templates/CreateEvaluatos/CreateEvaluators.module.scss","templates/SelectSiteResource/SelectSiteResources.module.scss","views/MyProfile/EditInfo/EditInfo.module.scss","views/ManageScrapers/ManageScrapers.module.scss","templates/EditEvaluators/EditEvaluators.module.scss","components/Sidebar/Sidebar.module.scss","Layout/Layout.module.scss","views/ScrapedData/ScrapedDataTable/ScrapedDataTable.module.scss","views/ManageUsers/ManageUsers.module.scss","views/ManageUsers/EditUser/EditUser.module.scss","views/ManageTasks/ManageTasks.module.scss","views/Page404/Page404.module.scss","templates/CreateModelOptions/CreateModelOptions.module.scss","components/Main/Main.module.scss","components/SiteLogo/SiteLogo.module.scss","views/ManageScrapers/RunScraperScript/RunScraperScript.module.scss","components/Nav/Nav.module.scss","components/Footer/Footer.module.scss","components/Card/Card.module.scss","components/EmptyCardFlex/EmptyCardFlex.module.scss","views/ManageScrapers/ScraperDetails/ScraperDetails.module.scss","components/Select/Select.module.scss","MainComponent.module.scss","templates/CreateScraperData/CreateScraperData.module.scss","views/ManageUsers/UserDetails/UserDetails.module.scss","views/ScrapedData/ScrapedData.module.scss","views/MyProfile/MyProfile.module.scss","views/ManageUsers/CreateUser/CreateUser.module.scss","hooks/useAuth.js","hooks/useActiveMenu.js","routes/index.js","components/Header/Header.js","hooks/useWindowWidth.js","components/Main/Main.js","components/SiteLogo/logo.png","components/SiteLogo/SiteLogo.js","components/Sidebar/Sidebar.js","components/Nav/Nav.js","components/Footer/Footer.js","Layout/Layout.js","components/Card/Card.js","config/index.js","views/Login/logo.png","views/Login/Login.js","hooks/useFetch.js","components/EmptyCardFlex/EmptyCardFlex.js","utilities/string/index.js","utilities/objects-array/index.js","components/MuiTable/MuiTable.js","views/Dashboard/Dashboard.js","views/ManageScrapers/ManageScrapers.js","components/CodeEditor/CodeEditor.js","components/Select/Select.js","templates/SelectSiteResource/SelectSiteResources.js","templates/CreateSiteResource/CreateSiteResource.js","templates/CreateScraperData/CreateScraperData.js","components/Radio/Radio.js","templates/CreateModelOptions/CreateModelOptions.js","templates/CreateEvaluatos/CreateEvaluators.js","views/ManageScrapers/CreateScraper/CreateScraper.js","views/ManageScrapers/RunScraperScript/RunScraperScript.js","templates/EditEvaluators/EditEvaluators.js","views/ManageScrapers/ScraperDetails/ScraperDetails.js","views/ScrapedData/ScrapedData.js","views/ScrapedData/ScrapedDataTable/ScrapedDataTable.js","hooks/useAccessCheck.js","views/ManageUsers/ManageUsers.js","views/ManageUsers/EditUser/EditUser.js","views/ManageUsers/UserDetails/UserDetails.js","views/ManageTasks/ManageTasks.js","views/MyProfile/EditInfo/EditInfo.js","views/MyProfile/MyProfile.js","views/Page404/Page404.js","views/ManageUsers/CreateUser/CreateUser.js","utilities/index.js","MainComponent.js","theme/index.js","App.js","index.js","components/Header/Header.module.scss","components/MuiTable/MuiTable.module.scss","views/Login/Login.module.scss","views/ManageScrapers/CreateScraper/CreateScraper.module.scss","views/Dashboard/Dashboard.module.scss","templates/CreateSiteResource/CreateSiteResource.module.scss"],"names":["module","exports","useAuth","useState","isLoggedIn","setIsLoggedIn","loggedUser","setLoggedUser","window","localStorage","getItem","authToken","setAuthToken","fileToken","setFileToken","tokenExpiration","setTokenExpiration","loginMessage","setLoginMessage","history","useHistory","logout","prev","removeItem","checkLoggedIn","Date","getTime","Number","JSON","parse","location","pathname","push","useEffect","login","res","xAuthToken","xFileToken","xTokenExpiration","userInfo","statusOk","message","setItem","stringify","useActiveMenu","setActiveParentMenu","setActiveChildMenu","href","currentUrl","setCurrentUrl","listen","addEventListener","e","console","log","activeMenuHandler","parentMenus","Array","from","document","querySelectorAll","childMenus","activeParent","find","item","includes","activeChild","forEach","classList","remove","add","mainNavObjectsArr","title","path","shown","children","permissionLevel","Header","className","openMenuHandler","menuActive","windowWidth","callback","innerWidth","setWindowWidth","useWindowWidth","styles","firstName","active","onClick","bind","this","to","Main","SiteLogo","src","logo","Sidebar","Nav","navObjectsArr","nav","length","map","child","Footer","year","getFullYear","Layout","setActive","mainNav","setMainNav","filter","wrapper","Card","style","width","card","baseUrl","fileUrl","socketUrl","Login","username","setUsername","password","setPassword","loggingIn","setLoggingIn","messageType","setMessageType","abortCont","AbortController","onChangeHandler","inputName","setter","value","target","trim","submitHandler","a","preventDefault","fetch","method","headers","body","signal","then","json","jsonData","Error","catch","err","name","abort","action","onSubmit","FormControl","fullWidth","TextField","onChange","label","type","autoComplete","Button","variant","size","color","disableElevation","startIcon","disabled","CircularProgress","height","useFetch","apiEndPoint","fetchOptions","initialValue","data","setData","isLoading","setIsLoading","hasError","setHasError","fetchMessage","setFetchMessage","ok","EmptyCardFlex","toNormalString","str","previousFormat","replace","char","toUpperCase","split","toCapitalize","join","index","toCapitalizeAll","getAllObjectKeys","objects","reduce","b","Object","keys","key","isObjectUnique","obj","objectsArray","overAllResults","object","results","every","isObjectInArray","array","some","useStyles","makeStyles","root","container","maxHeight","StickyHeadTable","tableData","uniqueId","excludedColumns","classes","React","page","setPage","rowsPerPage","setRowsPerPage","rows","columns","isArray","id","align","minWidth","maxWidth","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","role","tabIndex","imagePaths","alt","textAlign","justifyContent","TablePagination","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","Dashboard","pageTitle","ManageScrapers","scrapers","isLoadingTableData","optionClickHandler","display","flexDirection","gap","_id","backgroundColor","whiteSpace","includedKeys","Divider","margin","Alert","severity","CodeEditor2","padding","placeholder","language","fontSize","fontFamily","minHeight","border","gridAutoFlow","theme","formControl","selectEmpty","marginTop","spacing","Select2","options","uniqueProp","optionLabelProp","selectOnchangeHandler","defaultValue","selectedOption","setSeletedOption","select","InputLabel","Select","labelId","MenuItem","selected","SelectSiteResource","selectOptions","selectedSiteResource","setSelectHandler","createReadyHandler","hasSelected","setHasSelected","siteName","siteUrl","CreateSiteResource","siteResourceHandler","siteResource","setSiteResource","setMessage","url","changeHandler","setTimeout","form","noValidate","CreateScraperData","currentValue","setScraperDataHandler","backButtonHandler","cancelHandler","scraperDetails","setScraperDetails","productBrandErrorMessage","setProductBrandErrorMessage","imagePropNameErrorMessage","setImagePropNameErrorMessage","uniqueSplitErrorMessage","setUniqueSplitErrorMessage","arrItemError","setArrItemError","splitItem","sharedItem","csvExcludedPropsItem","arrItem","setArrItem","prop","arrInputChangeHandler","addItemToArrayInObjectHandler","propName","arrName","arr","handleDeleteChipEntry","productBrand","imagePropName","imageNameObject","Chip","onDelete","deleteIcon","shared","csvExcludedProps","endIcon","RadioButtonsGroup","legend","radioOptions","setValue","FormLabel","RadioGroup","FormControlLabel","control","Radio","CreateModelSchema","setModelObjectHandler","modelObjectOptions","setModelObjectOptions","saveButtonEnabled","setSavedButtonEnabled","schema","propKey","schemaArray","setSchemaArray","addSchemaButtonDisabled","setAddSchemaButtonDisabled","schemaKey","setSchemaKey","schemaKeyType","setSchemaKeyType","schemaKeyRequired","setSchemaKeyRequired","schemaError","setSchemaError","friendlyUrlProps","immutableProps","uniqueProps","propObjectsErrMessage","setPropObjectsErrMessage","initializedProps","propObjects","setPropObjects","friendlyUrlProp","setFriendlyUrlProp","immutableProp","setImmutableProp","setUniqueProp","addSchemaHandler","schemaObject","required","deleteSchemaHandler","propObjectChangeHandler","addPropObjects","IconButton","CreateEvaluators","currentUsageValue","currentGroupIdentifierKeyValue","currentSchema","setEvaluatorObjectsHandler","setUsageHandler","setGroupIdentifierKeyHandler","evaluatorObjects","setEvaluatorObjects","submitButtonEnabled","setSubmitButtonEnabled","addEvaluatorButtonEnabled","setAddEvaluatorButtonEnabled","setCallback","setType","waitMethods","setWaitMethods","args","currentWaitMethod","setCurrentWaitMethod","addWaitMethodButtonReady","setAddWaitMethodButtonReady","waitMethodError","setWaitMethodError","showPaginated","setShowPaginated","paginated","setPaginated","objPropArgs","setObjPropArgs","objPropArgsError","setObjPropArgsError","currentPropArg","setCurrentPropArg","addObjPropArgsButtonEnabled","setAddObjPropArgsButtonEnabled","productUrlProp","setProductUrlProp","productUrlPropError","setProductUrlPropError","usage","setUsage","groupIdentifierKey","setGroupIdentifierKey","removeWaitMethodHandler","waitMethodInputChangeHandler","handleDeleteObjPropArgs","addEvaluatorObjectHandler","prv","removeEvaluatorHandler","evaluator","i","toString","fontWeight","waitMethod","prevState","multiline","CreateScraper","selectOn","setSelectOn","setSelectOptions","siteResourceReady","setSiteResourceReady","scraperDetailsReady","setScraperDetailsReady","imageUris","modelObjectOptionsReady","setModelObjectOptionsReady","recordName","pluralized","routeObjectOptions","setRouteObjectOptions","evaluatorObjectsReady","setEvaluatorObjectsReady","loading","submitObject","setSubmitObject","state","saveScraperHandler","scraperDetailsObj","boolState","modelObject","values","socket","io","RunScraperScript","useParams","scraperData","setSiteName","setProductBrand","setSiteUrl","setCsvExcludedProps","apiRoute","setApiRoute","evaluatorIndexes","setEvaluatorIndexes","scriptId","setScriptId","productsListEvaluatorUris","setProductsListEvaluatorUris","groupIdentifier","setGroupIdentifier","evaluatorArgs","setEvaluatorArgs","scriptRunning","setScriptRunning","scrapingMessage","setScrapingMessage","scrapingStatus","setScrapingStatus","downloadingZip","setDownloadingZip","savingToDb","setSavingToDb","savingDataMessage","setSavingDataMessage","savingDataStatus","setSavingDataStatus","scrapedData","setScrapedData","unscrapedData","setUnscrapedData","submitEnabled","setSubmitEnabled","currentProcess","setCurrentProcess","setCurrentScrapedProducts","rescraping","setRescraping","totalScrapedData","setTotalScrapedData","totalUnscrapedData","setTotalUnscrapedData","setCurrentShownData","productsTotal","setProductsTotal","progress","setProgress","groupIdentifierKeyChangeHandler","evaluatorUriChangeHandler","evaluatorObjectIndex","arrIndex","goBack","runScraperScriptHandler","downloadZipHandler","filePath","downloadUrl","aElem","createElement","setAttribute","click","saveDataHandler","scraperId","subApiRoute","evaluatorIndex","removeClick","alert","removeEventListener","on","phase","totalProducts","LinearProgress","EditEvaluators","status","setStatus","ScraperDetails","modalOpen","setModalOpen","editingEvaluatorObjects","setEditingEvaluatorObjects","deleteScriptHandler","modalSetter","setLoading","Modal","onClose","open","alignItems","paddingRight","ManageScrapedData","siteResources","fetchLoading","productSets","filteredScrapers","setFilteredScrapers","filteredProductSets","setFilteredProductSets","scraper","setScraper","productSet","setProductSet","productsData","setProductsData","dirPath","dataDirPath","createUrl","labelName","productData","setProductData","queryString","search","dataObject","useAccessCheck","allowedPermissionLevel","go","sort","accessLevel","EditUser","user","editUserSetter","userSetter","updateStateHandler","setInitialValue","currentUser","setCurrentUser","updateButtonEnabled","setUpdateButtonEnabled","inputChangeHandler","previousState","compareData","userObject","updateUserHandler","InputLabelProps","shrink","lastName","UserDetails","userFetchError","userFetchMessage","editUserOn","setEditUserOn","editUserHandler","deleteUserHandler","loadingState","messageState","messageTypeState","EditInfo","currentUserSetter","editInforHandler","changePassword","setChangePassword","passwordMessage","setPasswordMessage","passwordMessageType","setPasswordMessageType","setFirstName","setLastName","passwordConf","setPasswordConf","cancelEditHandler","changePasswordHandler","passwordInputChangeHandler","editInfoEnabled","setEditInfoEnabled","Page404","CreateUser","setUser","setSaveButtonEnabled","usernameCheckMessage","setUsernameCheckMessage","usernameCheckLoading","setUsernameCheckLoading","usernameCheckMessageType","setUsernameCheckMessageType","checkUsername","func","wait","timeout","immediate","context","arguments","later","apply","callNow","clearTimeout","debounce","enteredUsername","toLowerCase","checkAllFields","userId","startAdornment","InputAdornment","position","onKeyPress","code","getRoute","route","routes","main","exact","createTheme","palette","primary","blue","secondary","blueGrey","error","red","typography","button","textTransform","App","ThemeProvider","CssBaseline","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9acf6928.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"CreateEvaluators_main-container__L1QLS\",\"template-title\":\"CreateEvaluators_template-title__3joHi\",\"template-subtitle\":\"CreateEvaluators_template-subtitle__34U99\",\"template-section-title\":\"CreateEvaluators_template-section-title__HOskF\",\"error-message\":\"CreateEvaluators_error-message__3O6N1\",\"description\":\"CreateEvaluators_description__1nUIX\",\"buttons-container\":\"CreateEvaluators_buttons-container__o_nle\",\"added-evaluator-container\":\"CreateEvaluators_added-evaluator-container__3sKxr\",\"added-evaluator-object-container\":\"CreateEvaluators_added-evaluator-object-container__k62aU\",\"wait-methods-container\":\"CreateEvaluators_wait-methods-container__1DaOB\",\"added-methods\":\"CreateEvaluators_added-methods__2V2HE\",\"wait-method-input-container\":\"CreateEvaluators_wait-method-input-container__31vrb\",\"input-container-array\":\"CreateEvaluators_input-container-array__2sgoC\",\"field-container\":\"CreateEvaluators_field-container__2axJd\",\"evaluator-options\":\"CreateEvaluators_evaluator-options__1m5TU\",\"chip-container\":\"CreateEvaluators_chip-container__1xZ46\",\"evaluator-object-container\":\"CreateEvaluators_evaluator-object-container__smZQj\",\"input-container\":\"CreateEvaluators_input-container__3ivrg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-container\":\"SelectSiteResources_select-container__1-JiI\",\"template-title\":\"SelectSiteResources_template-title__1U8_p\",\"site-resource-info-container\":\"SelectSiteResources_site-resource-info-container__3_EoZ\",\"buttons-container\":\"SelectSiteResources_buttons-container__3rckh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"highlighted\":\"EditInfo_highlighted__ifGoV\",\"template-subtitle\":\"EditInfo_template-subtitle__2MM2C\",\"template-section-title\":\"EditInfo_template-section-title__3UIeJ\",\"error-message\":\"EditInfo_error-message__dowMy\",\"success-message\":\"EditInfo_success-message__3ug0N\",\"description\":\"EditInfo_description__byuAZ\",\"buttons-container\":\"EditInfo_buttons-container__1B_3h\",\"buttons-container-main\":\"EditInfo_buttons-container-main__O7EZ_\",\"edit-user-field-container\":\"EditInfo_edit-user-field-container__3918V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"ManageScrapers_template-title__1gYDy\",\"template-subtitle\":\"ManageScrapers_template-subtitle__2TNtk\",\"template-section-title\":\"ManageScrapers_template-section-title__2jxgT\",\"error-message\":\"ManageScrapers_error-message__fE1x8\",\"description\":\"ManageScrapers_description__1QpS5\",\"buttons-container\":\"ManageScrapers_buttons-container__1fUxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"EditEvaluators_main-container__rVkYk\",\"template-title\":\"EditEvaluators_template-title__311Zh\",\"template-subtitle\":\"EditEvaluators_template-subtitle__25f9z\",\"template-section-title\":\"EditEvaluators_template-section-title__S2k_j\",\"error-message\":\"EditEvaluators_error-message__jq0Lc\",\"description\":\"EditEvaluators_description__4cI0s\",\"buttons-container\":\"EditEvaluators_buttons-container__ez580\",\"added-evaluator-container\":\"EditEvaluators_added-evaluator-container__40-o0\",\"added-evaluator-object-container\":\"EditEvaluators_added-evaluator-object-container__2SuVM\",\"wait-methods-container\":\"EditEvaluators_wait-methods-container__3Wsra\",\"added-methods\":\"EditEvaluators_added-methods__14x5C\",\"wait-method-input-container\":\"EditEvaluators_wait-method-input-container__11_d1\",\"input-container-array\":\"EditEvaluators_input-container-array__i589F\",\"field-container\":\"EditEvaluators_field-container__2hPyU\",\"evaluator-options\":\"EditEvaluators_evaluator-options__9Mulg\",\"chip-container\":\"EditEvaluators_chip-container__hmug_\",\"evaluator-object-container\":\"EditEvaluators_evaluator-object-container__3DTv-\",\"input-container\":\"EditEvaluators_input-container__101bE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-sidebar\":\"Sidebar_main-sidebar__3Rgi_\",\"active\":\"Sidebar_active__1nQ3e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__1I9fC\",\"main-section\":\"Layout_main-section__2RRp_\",\"active\":\"Layout_active__OP-CQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"ScrapedDataTable_template-title__lXkco\",\"highlighted\":\"ScrapedDataTable_highlighted__O759G\",\"highlighted-2\":\"ScrapedDataTable_highlighted-2__i85Az\",\"template-subtitle\":\"ScrapedDataTable_template-subtitle__1ZE-H\",\"template-section-title\":\"ScrapedDataTable_template-section-title__270TT\",\"error-message\":\"ScrapedDataTable_error-message__3-DCc\",\"description\":\"ScrapedDataTable_description__1TPFq\",\"buttons-container\":\"ScrapedDataTable_buttons-container__2-RKT\",\"field-container\":\"ScrapedDataTable_field-container__3mUye\",\"main-container\":\"ScrapedDataTable_main-container__1lgwO\",\"action-buttons-container\":\"ScrapedDataTable_action-buttons-container__3leEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"ManageUsers_main-container__3EGGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"highlighted\":\"EditUser_highlighted__2K6Cp\",\"template-subtitle\":\"EditUser_template-subtitle__2ggI6\",\"template-section-title\":\"EditUser_template-section-title__3luT4\",\"error-message\":\"EditUser_error-message__3m0HO\",\"description\":\"EditUser_description__2ZFLJ\",\"buttons-container\":\"EditUser_buttons-container__1rSnl\",\"buttons-container-main\":\"EditUser_buttons-container-main__jL-Zj\",\"edit-user-field-container\":\"EditUser_edit-user-field-container__23cz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"ManageTasks_template-title__3OcT9\",\"highlighted\":\"ManageTasks_highlighted__1ae_C\",\"template-subtitle\":\"ManageTasks_template-subtitle__2S65B\",\"template-section-title\":\"ManageTasks_template-section-title__17HNP\",\"error-message\":\"ManageTasks_error-message__ClyLz\",\"success-message\":\"ManageTasks_success-message__34kHx\",\"info-message\":\"ManageTasks_info-message__1qF9_\",\"description\":\"ManageTasks_description__2r-a-\",\"main-container\":\"ManageTasks_main-container__1UMI4\",\"section-title\":\"ManageTasks_section-title__2ghl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404-container\":\"Page404_page404-container__3XbcL\",\"page404-error\":\"Page404_page404-error__HwDsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"CreateModelOptions_main-container__2q2wt\",\"template-title\":\"CreateModelOptions_template-title__1a1hx\",\"template-subtitle\":\"CreateModelOptions_template-subtitle__SQ-Js\",\"template-section-title\":\"CreateModelOptions_template-section-title__2aKby\",\"model-object-container\":\"CreateModelOptions_model-object-container__1sG63\",\"schema-container\":\"CreateModelOptions_schema-container__3svsi\",\"delete-button\":\"CreateModelOptions_delete-button__1QvLU\",\"form-container\":\"CreateModelOptions_form-container__38ByB\",\"form\":\"CreateModelOptions_form__1ib5V\",\"input-container\":\"CreateModelOptions_input-container__3dBpU\",\"field-container\":\"CreateModelOptions_field-container__1bR8B\",\"error-message\":\"CreateModelOptions_error-message__2KfyY\",\"input-container-array\":\"CreateModelOptions_input-container-array__1V5SL\",\"description\":\"CreateModelOptions_description__2i8lD\",\"result-container\":\"CreateModelOptions_result-container__11MS-\",\"input-container-2\":\"CreateModelOptions_input-container-2__1sUPq\",\"button-container\":\"CreateModelOptions_button-container__2ZmVy\",\"buttons-container\":\"CreateModelOptions_buttons-container__1Wy5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-content\":\"Main_main-content__2PId1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"site-logo\":\"SiteLogo_site-logo__15HOR\",\"active\":\"SiteLogo_active__16QxB\",\"selected\":\"SiteLogo_selected__2Mn19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"RunScraperScript_template-title__1nedh\",\"highlighted\":\"RunScraperScript_highlighted__34vZI\",\"highlighted-2\":\"RunScraperScript_highlighted-2__M1ahb\",\"template-subtitle\":\"RunScraperScript_template-subtitle__1eAiT\",\"template-section-title\":\"RunScraperScript_template-section-title__34btA\",\"error-message\":\"RunScraperScript_error-message__1NIb0\",\"description\":\"RunScraperScript_description__34Nnt\",\"buttons-container\":\"RunScraperScript_buttons-container__3D2rQ\",\"field-container\":\"RunScraperScript_field-container__1q1UQ\",\"main-container\":\"RunScraperScript_main-container__2UzuV\",\"action-buttons-container\":\"RunScraperScript_action-buttons-container__3s59l\",\"current-shown-data-container\":\"RunScraperScript_current-shown-data-container__3i3W0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1nqzN\",\"active\":\"Nav_active__9yukH\",\"selected\":\"Nav_selected__3FBIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-footer\":\"Footer_main-footer__2ckRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__20Eqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"EmptyCardFlex_empty__1HqJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"ScraperDetails_main-container__3g4oz\",\"label\":\"ScraperDetails_label__c7_Ox\",\"template-title\":\"ScraperDetails_template-title__3pSuX\",\"highlighted\":\"ScraperDetails_highlighted__3C83h\",\"template-subtitle\":\"ScraperDetails_template-subtitle__XZHNU\",\"template-section-title\":\"ScraperDetails_template-section-title__1rWL0\",\"error-message\":\"ScraperDetails_error-message__3-TZk\",\"description\":\"ScraperDetails_description__380T_\",\"buttons-container\":\"ScraperDetails_buttons-container__3Bc2j\",\"container\":\"ScraperDetails_container__sEQ48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3yWx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MainComponent_main__3ufCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"CreateScraperData_form-container__15urQ\",\"template-title\":\"CreateScraperData_template-title__1B-r0\",\"error-message\":\"CreateScraperData_error-message__207TQ\",\"form\":\"CreateScraperData_form__1IJtr\",\"input-container\":\"CreateScraperData_input-container__2cQXY\",\"field-container\":\"CreateScraperData_field-container__-yxIW\",\"input-container-array\":\"CreateScraperData_input-container-array__oVrpj\",\"description\":\"CreateScraperData_description__1xkam\",\"result-container\":\"CreateScraperData_result-container__1fVG7\",\"buttons-container\":\"CreateScraperData_buttons-container__2B9HU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"UserDetails_main-container__3d4yR\",\"main-cards-container\":\"UserDetails_main-cards-container__2vst9\",\"user-info-container\":\"UserDetails_user-info-container__10w2Q\",\"user-info-list\":\"UserDetails_user-info-list__1S6FO\",\"label\":\"UserDetails_label__2FrnD\",\"value\":\"UserDetails_value__-dj7b\",\"template-title\":\"UserDetails_template-title__2GQp9\",\"highlighted\":\"UserDetails_highlighted__t_7X3\",\"template-subtitle\":\"UserDetails_template-subtitle__3EC0k\",\"template-section-title\":\"UserDetails_template-section-title__HW4Cs\",\"error-message\":\"UserDetails_error-message__2VPDd\",\"description\":\"UserDetails_description__3vd4V\",\"buttons-container\":\"UserDetails_buttons-container__kX9aM\",\"buttons-container-main\":\"UserDetails_buttons-container-main__28fAe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"ScrapedData_template-title__1zciU\",\"highlighted\":\"ScrapedData_highlighted__1S5f-\",\"highlighted-2\":\"ScrapedData_highlighted-2__2u-Rc\",\"template-subtitle\":\"ScrapedData_template-subtitle__rq8A3\",\"template-section-title\":\"ScrapedData_template-section-title__3mjg-\",\"error-message\":\"ScrapedData_error-message__3odXm\",\"description\":\"ScrapedData_description__3ESNh\",\"buttons-container\":\"ScrapedData_buttons-container__LZl9l\",\"field-container\":\"ScrapedData_field-container__n9Qta\",\"select-container\":\"ScrapedData_select-container__GMexO\",\"main-container\":\"ScrapedData_main-container__19d9J\",\"action-buttons-container\":\"ScrapedData_action-buttons-container__gl9cE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"MyProfile_main-container__2b7Y-\",\"main-cards-container\":\"MyProfile_main-cards-container__W5d9S\",\"user-info-container\":\"MyProfile_user-info-container__3M-Zx\",\"user-info-list\":\"MyProfile_user-info-list__2ofMs\",\"label\":\"MyProfile_label__1jPTG\",\"value\":\"MyProfile_value__18xla\",\"template-title\":\"MyProfile_template-title__25lgY\",\"highlighted\":\"MyProfile_highlighted__Of0xW\",\"template-subtitle\":\"MyProfile_template-subtitle__1RqHc\",\"template-section-title\":\"MyProfile_template-section-title__1AEm2\",\"error-message\":\"MyProfile_error-message__3sSXF\",\"description\":\"MyProfile_description__h6ChK\",\"buttons-container\":\"MyProfile_buttons-container__TeyqP\",\"buttons-container-main\":\"MyProfile_buttons-container-main__11wYy\",\"edit-user-field-container\":\"MyProfile_edit-user-field-container__ue2pY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"CreateUser_main-container__Pkn3h\",\"main-cards-container\":\"CreateUser_main-cards-container__3YIBa\",\"create-user-field-container\":\"CreateUser_create-user-field-container__2ZiCx\",\"firstName\":\"CreateUser_firstName__Myi-N\",\"lastName\":\"CreateUser_lastName__Dknrj\",\"username\":\"CreateUser_username__2rLwK\",\"password\":\"CreateUser_password__P3n8g\",\"permissionLevel\":\"CreateUser_permissionLevel__2ENz6\",\"user-info-container\":\"CreateUser_user-info-container__1JKHM\",\"user-info-list\":\"CreateUser_user-info-list__2OXy1\",\"label\":\"CreateUser_label__-iCQw\",\"value\":\"CreateUser_value__2qQXl\",\"template-title\":\"CreateUser_template-title__13l-X\",\"highlighted\":\"CreateUser_highlighted__zmiuS\",\"template-subtitle\":\"CreateUser_template-subtitle__2sr7Q\",\"template-section-title\":\"CreateUser_template-section-title__8-3YL\",\"error-message\":\"CreateUser_error-message__2TZfQ\",\"success-message\":\"CreateUser_success-message__2MvjP\",\"info-message\":\"CreateUser_info-message__1mBwm\",\"description\":\"CreateUser_description__2U2vW\",\"buttons-container\":\"CreateUser_buttons-container__1ICo9\",\"buttons-container-main\":\"CreateUser_buttons-container-main__355_2\"};","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function useAuth()   {\r\n    let [isLoggedIn, setIsLoggedIn] = useState(false),\r\n        [loggedUser, setLoggedUser] = useState(null),\r\n        [authToken, setAuthToken] = useState(window.localStorage.getItem(\"x-auth-token\")),\r\n        [fileToken, setFileToken] = useState(window.localStorage.getItem(\"x-file-token\")),\r\n        [tokenExpiration, setTokenExpiration] = useState(window.localStorage.getItem(\"x-token-expiration\") || 0),\r\n        [loginMessage, setLoginMessage] = useState(null),\r\n        history = useHistory();\r\n        \r\n\r\n    const logout = () => {\r\n        setIsLoggedIn(prev => false);\r\n        setLoginMessage(prev => null);\r\n        setAuthToken(prev => null);\r\n        setFileToken(prev => null);\r\n        setLoggedUser(prev => null);\r\n        setTokenExpiration(prev => 0);\r\n\r\n        window.localStorage.removeItem(\"x-auth-token\");\r\n        window.localStorage.removeItem(\"x-file-token\");\r\n        window.localStorage.removeItem(\"x-logged-user\");\r\n        window.localStorage.removeItem(\"x-token-expiration\");\r\n    }\r\n\r\n\r\n    const login = (res) => {\r\n        let {authToken : xAuthToken, fileToken : xFileToken, tokenExpiration : xTokenExpiration, userInfo, statusOk, message} = res;\r\n\r\n        if(statusOk)    {\r\n            setIsLoggedIn(prev => statusOk);\r\n            setLoginMessage(prev => message);\r\n            setAuthToken(prev => {\r\n                window.localStorage.setItem(\"x-auth-token\", xAuthToken);\r\n                return xAuthToken\r\n            });\r\n            setFileToken(prev => {\r\n                window.localStorage.setItem(\"x-file-token\", xFileToken);\r\n                return xFileToken\r\n            });\r\n            setLoggedUser(prev => {\r\n                window.localStorage.setItem(\"x-logged-user\", JSON.stringify(userInfo, null, 4));\r\n                return userInfo\r\n            });\r\n            setTokenExpiration(prev => {\r\n                window.localStorage.setItem(\"x-token-expiration\", Number(xTokenExpiration));\r\n                return Number(xTokenExpiration);\r\n            });\r\n\r\n            \r\n\r\n        }  else {\r\n            setIsLoggedIn(prev => false);\r\n            logout();\r\n\r\n        }\r\n\r\n        return {authToken, fileToken, loggedUser, isLoggedIn, loginMessage};\r\n        \r\n    }\r\n\r\n    const checkLoggedIn = () => {\r\n        \r\n        if( new Date().getTime() < Number(tokenExpiration) )   {\r\n            setIsLoggedIn(prev => {\r\n                setLoggedUser(prev => {\r\n                    return JSON.parse(window.localStorage.getItem(\"x-logged-user\"));\r\n                });\r\n                return true;\r\n            });\r\n\r\n\r\n            if(window.location.pathname === \"/login\")   {\r\n                history.push(\"/\");\r\n            }\r\n\r\n\r\n        } else  {\r\n            setIsLoggedIn(prev => false);\r\n            setLoginMessage(prev => null);\r\n            setAuthToken(prev => null);\r\n            setFileToken(prev => null);\r\n            setLoggedUser(prev => null);\r\n            setTokenExpiration(prev => 0)\r\n\r\n            window.localStorage.removeItem(\"x-auth-token\");\r\n            window.localStorage.removeItem(\"x-file-token\");\r\n            window.localStorage.removeItem(\"x-logged-user\");\r\n            window.localStorage.removeItem(\"x-token-expiration\");\r\n            history.push(\"/login\");\r\n\r\n        }\r\n\r\n    }\r\n    \r\n    useEffect(() => {\r\n        checkLoggedIn();\r\n\r\n        // return () => console.log(\"Authentication checked.\");\r\n    }, [isLoggedIn]);\r\n\r\n\r\n    return {authToken, fileToken, loggedUser, isLoggedIn, loginMessage, login, logout, checkLoggedIn};\r\n\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function useActiveMenu() {\r\n    let setActiveParentMenu = useState(null)[1],\r\n        setActiveChildMenu = useState(null)[1],\r\n        [currentUrl, setCurrentUrl] = useState(window.location.href),\r\n        history = useHistory();\r\n        \r\n\r\n    history.listen((location) => { \r\n        setCurrentUrl(prev => window.location.href);\r\n    });\r\n\r\n    window.addEventListener(\"click\", function() {\r\n        setCurrentUrl(prev => window.location.href);\r\n    });\r\n\r\n    window.addEventListener(\"load\", function() {\r\n        setCurrentUrl(prev => window.location.href);\r\n    });\r\n\r\n    window.addEventListener('popstate', function (e) {\r\n        setCurrentUrl(prev => window.location.href);\r\n        console.log(\"this fired...\")\r\n    });\r\n\r\n    const activeMenuHandler = () => {\r\n        let parentMenus = Array.from(document.querySelectorAll(`.main-sidebar > .main-nav > ul > li > a`)),\r\n            childMenus = Array.from(document.querySelectorAll(`.main-sidebar > .main-nav > ul > li > ul > li a`));\r\n\r\n\r\n        let activeParent = parentMenus.find(item => currentUrl.includes(item.href)),\r\n            activeChild = childMenus.find(item => item.href === window.location.href);\r\n\r\n        if(activeParent) {\r\n            parentMenus.forEach(item => item.classList.remove(`active-parent`));\r\n            childMenus.forEach(item => item.classList.remove(`active-child`));\r\n            setActiveParentMenu(prev => activeParent);\r\n            activeParent.classList.add(`active-parent`);\r\n        } else  {\r\n            parentMenus.forEach(item => item.classList.remove(`active-parent`));\r\n            childMenus.forEach(item => item.classList.remove(`active-child`));\r\n        }\r\n        if(activeChild) {\r\n            setActiveChildMenu(prev => activeChild)\r\n            activeChild.classList.add(`active-child`);\r\n        };\r\n\r\n\r\n        return () => {\r\n            parentMenus.forEach(item => item.classList.remove(`active-parent`));\r\n            childMenus.forEach(item => item.classList.remove(`active-child`));\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        activeMenuHandler();\r\n\r\n    }, [currentUrl]);\r\n\r\n\r\n    return { activeMenuHandler, currentUrl, setCurrentUrl };\r\n}\r\n\r\n","const mainNavObjectsArr = [    \r\n    {\r\n        title : \"Manage Scrapers\",\r\n        path : \"/manage-scrapers\",\r\n        shown : true,\r\n        children : [],\r\n        permissionLevel : 2,\r\n    },\r\n    {\r\n        title : \"Scraped / Stored Data\",\r\n        path : \"/scraped-data\",\r\n        children : [],\r\n        permissionLevel : 2,\r\n\r\n    },\r\n    {\r\n        title : \"Manage Users\",\r\n        path : \"/manage-users\",\r\n        children : [\r\n            // {\r\n            //     title : \"Create a User\",\r\n            //     path : \"/manage-users/create-user\"\r\n            // },\r\n            // {\r\n            //     title : \"Update a User\",\r\n            //     path : \"/manage-users/update-user/:id\"\r\n            // },\r\n            // {\r\n            //     title : \"Delete a User\",\r\n            //     path : \"/manage-users/delete-user/:id\"\r\n            // }\r\n        ],\r\n        permissionLevel : 4,\r\n\r\n    },\r\n    {\r\n        title : \"Manage Tasks\",\r\n        path : \"/manage-tasks\",\r\n        children : [\r\n            // @ic@yumi1828\r\n            // {\r\n            //     title : \"Create a Task\",\r\n            //     path : \"/manage-tasks/create-scraper\"\r\n            // },\r\n            // {\r\n            //     title : \"Update a Task\",\r\n            //     path : \"/manage-tasks/update-scraper/:id\"\r\n            // },\r\n            // {\r\n            //     title : \"Delete a Task\",\r\n            //     path : \"/manage-tasks/delete-scraper/:id\"\r\n            // }\r\n        ],\r\n        permissionLevel : 2,\r\n    }\r\n];\r\n\r\n\r\nexport default mainNavObjectsArr;","import { Link } from \"react-router-dom\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport useWindowWidth from \"../../hooks/useWindowWidth\";\r\n\r\n// styles\r\nimport styles from \"./Header.module.scss\";\r\n\r\nexport default function Header({loggedUser, className, openMenuHandler, menuActive}) {\r\n\r\n    let windowWidth = useWindowWidth(() => {})\r\n\r\n    const { logout } = useAuth();\r\n    \r\n    const logoutHandler = (e) => {\r\n        // e.preventDefault();\r\n        logout();\r\n    }\r\n\r\n    const menuClickHandler = (e) => {\r\n        openMenuHandler();\r\n    }\r\n\r\n    return  (\r\n        <header className={`${styles[\"main-header\"]} ${className}`}>\r\n            \r\n            <h1>Welcome to CC Scraper App, <span>{loggedUser.firstName}</span>!</h1>\r\n            {windowWidth < 768 && \r\n                <div className={styles[\"button-container\"]}>\r\n                    <div className={`${styles[\"nav-button\"]} ${menuActive ? styles.active : null}`} onClick={menuClickHandler.bind(this)}>\r\n                        <div className={styles[\"bar-container\"]}>\r\n                            <div className={styles[\"bar\"]}></div>\r\n                            <div className={styles[\"bar\"]}></div>\r\n                            <div className={styles[\"bar\"]}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <nav className={styles[\"header-nav\"]}>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/my-profile\">My Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/login\" onClick={logoutHandler}>Logout</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useWindowWidth(callback)    {\r\n    let [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", function(){\r\n            setWindowWidth(window.innerWidth);\r\n        });\r\n        window.addEventListener(\"load\", function(){\r\n            setWindowWidth(window.innerWidth);\r\n        });\r\n\r\n        callback();\r\n    });\r\n\r\n    return windowWidth;\r\n}\r\n\r\n\r\n\r\n","import styles from \"./Main.module.scss\";\r\n\r\nexport default function Main({children})    {\r\n    \r\n    return (\r\n        <main className={styles[\"main-content\"]}>\r\n            {children}\r\n        </main>\r\n    )\r\n\r\n}","export default __webpack_public_path__ + \"static/media/logo.07fa326a.png\";","// core\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// styles\r\nimport styles from \"./SiteLogo.module.scss\";\r\n\r\nimport logo from \"./logo.png\";\r\n\r\nexport default function SiteLogo()  {\r\n\r\n    return (\r\n        <h1 className={styles[\"site-logo\"]}>\r\n            <Link to=\"/\">\r\n            <img src={logo} />\r\n            </Link>\r\n            <Link to=\"/\">\r\n                CC Scraper App\r\n            </Link>\r\n        </h1>\r\n    )\r\n\r\n}","import styles from \"./Sidebar.module.scss\";\r\n\r\nexport default function Sidebar({children, className, menuActive})   {\r\n    return (\r\n        <aside className={`${styles[\"main-sidebar\"]} ${className} ${menuActive ? styles.active : \"\"}`}>\r\n            {children}\r\n        </aside>\r\n    )\r\n}","import {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styles from \"./Nav.module.scss\";\r\nimport \"./Nav.scss\";\r\n\r\n\r\nexport default function Nav({navObjectsArr, className}) {\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <nav className={`${styles.nav} ${className} nav`}>\r\n            <ul>\r\n                {navObjectsArr.length > 0 && \r\n                \r\n                    navObjectsArr.map(item => {\r\n                        return (\r\n                            <li key={item.path}>\r\n                                <Link key={item.path} to={item.path}>{item.title}</Link>\r\n                                {item.children.length > 0 && \r\n                                    <ul>\r\n                                        {item.children.map(child => {\r\n                                            return (\r\n                                                <li key={child.path}><Link to={child.path}>{child.title}</Link></li>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                }\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\n","import styles from \"./Footer.module.scss\";\r\n\r\nexport default function Footer({children})    {\r\n\r\n    const year = new Date().getFullYear();\r\n\r\n    return (\r\n        <footer className={styles[\"main-footer\"]}>\r\n            {children}\r\n            <p>&copy; CC Scraper App {year}. All Rights Reserved.</p>\r\n        </footer>\r\n    );\r\n}","// hooks\r\nimport { useState, useEffect } from \"react\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport useActiveMenu from \"../hooks/useActiveMenu\";\r\n\r\n// routes\r\nimport mainNavObjectsArr from \"../routes\";\r\n\r\n// components\r\nimport Header from \"../components/Header\";\r\nimport Main from \"../components/Main\";\r\nimport SiteLogo from \"../components/SiteLogo\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Nav from \"../components/Nav\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n\r\n\r\n// styles\r\nimport styles from \"./Layout.module.scss\";\r\n\r\nexport default function Layout({ children })  {\r\n\r\n    let [active, setActive] = useState(true),\r\n        [mainNav, setMainNav] = useState([])\r\n    \r\n    useActiveMenu();\r\n\r\n    const { isLoggedIn, loggedUser } = useAuth();\r\n\r\n    const openMenuHandler = (e) => {\r\n        setActive(prev => !prev);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(loggedUser)  {\r\n            setMainNav(prev => {\r\n                return mainNavObjectsArr.filter(item => item.permissionLevel <= loggedUser.permissionLevel);\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }, [loggedUser])\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {isLoggedIn && loggedUser && \r\n            <>\r\n                <div className={styles[\"main-section\"] } onClick={() => {\r\n                    if(active) setActive(prev => false);\r\n                }}>\r\n                    <Header loggedUser={loggedUser} className=\"card\" openMenuHandler={openMenuHandler} menuActive={active}></Header>\r\n                    <Main>{children}</Main>\r\n                    <Footer></Footer>\r\n                </div>\r\n                <Sidebar className=\"card main-sidebar\" menuActive={active}>\r\n                    <SiteLogo></SiteLogo>\r\n                    <Nav navObjectsArr={mainNav} className=\"main-nav\" />\r\n                </Sidebar>\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n}","// styles\r\nimport styles from \"./Card.module.scss\";\r\n\r\nexport default function Card({ children, className, style, width })  {\r\n    return (\r\n        <div className={`${styles.card} ${className}`} style={{...style, width}}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","// decoupled\r\n// export const baseUrl = \"http://localhost:7747\";\r\n// export const fileUrl = `${baseUrl}/cc-files/`;\r\n// export const socketUrl = `${baseUrl}`;\r\n\r\n\r\n// http://ccscraperapp-env-1.eba-shgqnvwf.us-east-2.elasticbeanstalk.com/\r\n\r\n// combined local\r\nexport const baseUrl = \"\";\r\nexport const fileUrl = `${baseUrl}/cc-files/`;\r\nexport const socketUrl = `${baseUrl}`;\r\n\r\n\r\n// decoupled = backend : production, frontend : local,\r\n// const domainName = \"ccscraperapp-env-3.eba-curuzm92.us-east-2.elasticbeanstalk.com\";\r\n// const protocol = \"http://\";\r\n// const wsProtocol = \"ws://\"\r\n// export const baseUrl = `${protocol}${domainName}`;\r\n// export const fileUrl = `${baseUrl}/cc-files/`;\r\n// export const socketUrl = `${wsProtocol}${domainName}`;","export default __webpack_public_path__ + \"static/media/logo.07fa326a.png\";","// hooks\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport { Button, TextField, FormControl, CircularProgress } from '@material-ui/core';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\n\r\n//config\r\nimport { baseUrl } from \"../../config/\"; \r\nimport logo from \"./logo.png\";\r\n\r\n\r\nimport styles from \"./Login.module.scss\";\r\n\r\nexport default function Login() {\r\n    \r\n    const { login } = useAuth();\r\n\r\n    let [username, setUsername] = useState(\"\"),\r\n        [password, setPassword] = useState(\"\"),\r\n        [loginMessage, setLoginMessage] = useState(null),\r\n        [loggingIn, setLoggingIn] = useState(null),\r\n        [messageType, setMessageType] = useState(null),\r\n        history = useHistory(),\r\n        abortCont = new AbortController();\r\n    \r\n\r\n\r\n    const onChangeHandler = (inputName, e) => {\r\n        let setter = inputName === \"username\" ? setUsername : setPassword,\r\n            value = e.target.value.trim();\r\n\r\n        setter(prev => value);\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setLoggingIn(prev => true);\r\n        setMessageType(prev => \"info\");\r\n        \r\n        \r\n        fetch(`${baseUrl}/api/login`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n            },\r\n            body : JSON.stringify({username, password}),\r\n            signal : abortCont.signal\r\n        })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(jsonData => {\r\n            let {statusOk, message} = jsonData;\r\n            if(!statusOk)    {\r\n                throw Error(message);\r\n                \r\n            } else  {\r\n                login(jsonData);\r\n                history.push(\"/\");\r\n                setLoggingIn(false);\r\n                setLoginMessage(prev => \"You have successfully logged in.\");\r\n                setMessageType(prev => \"success\");\r\n\r\n            }\r\n        })\r\n        .catch(err => {\r\n            if(err.name !== \"AbortError\")   {\r\n                setLoggingIn(false);\r\n                setLoginMessage(err.message);\r\n                setMessageType(prev => \"error\");\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        return () => abortCont.abort();\r\n    }, []);\r\n    \r\n    return (\r\n        <div className={styles.login}>\r\n            <div className={styles[\"main-container\"]}>\r\n                \r\n                <Card className={styles[\"form-container\"]}>\r\n                    <div className={styles[\"logo-container\"]}>\r\n                        <img src={logo} className={styles[\"logo\"]} /><h1 className={styles[\"site-name\"]}>CC Scraper App</h1>\r\n                    </div>\r\n                    \r\n                    <form action=\"\" onSubmit={submitHandler.bind(this)}>\r\n                    \r\n                        <FormControl fullWidth>\r\n                            <TextField value={username}onChange={onChangeHandler.bind(this, \"username\")} label=\"Username\" />\r\n                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                        </FormControl>\r\n                        <FormControl fullWidth>\r\n                            <TextField type=\"password\" autoComplete=\"on\" value={password}onChange={onChangeHandler.bind(this, \"password\")} label=\"Password\" />\r\n                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                        </FormControl>\r\n                        {!loggingIn && <Button variant=\"contained\" size=\"large\" color=\"primary\" disableElevation startIcon={<ExitToAppIcon />} type=\"submit\">Login</Button>}\r\n                        {loggingIn && <Button variant=\"contained\" size=\"large\" color=\"primary\" disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>} type=\"submit\">Logging in...</Button>}\r\n                    </form>\r\n                    {loginMessage && messageType === \"success\" && <p className={styles[\"template-section-title\"]}>{loginMessage}</p>}\r\n                    {loginMessage && messageType === \"error\" && <p className={styles[\"error-message\"]}>{loginMessage}</p>}\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import {useState, useEffect} from \"react\";\r\nimport  { baseUrl } from \"../config\";\r\nimport useAuth from \"./useAuth\";\r\n\r\nexport default function useFetch(apiEndPoint, fetchOptions, initialValue = [])  {\r\n\r\n    let [data, setData] = useState(initialValue),\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [hasError, setHasError] = useState(false),\r\n        [fetchMessage, setFetchMessage] = useState(null),\r\n        { authToken } = useAuth(),\r\n        abortCont = new AbortController();\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        setFetchMessage(prev => \"We are currently fetching the data from the database.\");\r\n        setHasError(false);\r\n        if(authToken)   {\r\n            fetch(`${baseUrl}${apiEndPoint}`, {\r\n                ...fetchOptions,\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                signal : abortCont.signal\r\n            })\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(\"We couldn't fetch the data\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(jsonData => {\r\n                setIsLoading(false);\r\n                setHasError(false);\r\n                setFetchMessage(prev => \"We have successfully fetched the data.\");\r\n                setData(prev => jsonData);\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setIsLoading(false);\r\n                    setHasError(true);\r\n                    setFetchMessage(err.message);\r\n                }\r\n            })\r\n\r\n            return () => abortCont.abort();\r\n        }\r\n        \r\n    }, [authToken]);\r\n\r\n    return {data, setData, isLoading, hasError, fetchMessage};\r\n}","import styles from \"./EmptyCardFlex.module.scss\";\r\n\r\nexport default function EmptyCardFlex({ children, style, className }) {\r\n    return (\r\n        <div className={`${styles[\"empty\"]} ${className || \"\"}`}style={style}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","// some non-db related helper functions\r\n\r\n\r\nexport function toUrl(str) {\r\n    return Array.from(str.toLowerCase().trim().replace(/[^a-zA-Z0-9]/g, \" \").split(\" \")).reduce((a, b) => {\r\n        if(b.trim() !== \"\") {\r\n            a.push(b);\r\n        }\r\n        return a;\r\n    }, []).join(\"-\");\r\n}\r\n\r\nexport function enumerate(arr, and = false)  {\r\n    arr = [...arr];\r\n    if(arr.length > 1)  {\r\n        let lastIndex = arr.pop();\r\n        return `${arr.join(\", \")}, ${and ? \"and\" : \"or\"} ${lastIndex}`;  \r\n    } else  {\r\n        return arr[0];\r\n    }\r\n}\r\n\r\nexport function toCamelCase(str, url=false, initialCap=false)  {\r\n    let separator = url ? \"-\" : \" \";\r\n    return str.toLowerCase().split(`${separator}`).map((item, index) => index === 0 && !initialCap ? item : toCapitalize(item)).join(\"\");\r\n}\r\n\r\nexport function toNormalString(str, previousFormat = \"camel-case\")    {\r\n    if(previousFormat === \"camel-case\") {\r\n        str = str.replace(/([A-Z])/g, (char) => ` ${char.toUpperCase()}`);\r\n    } else if(previousFormat === \"underscored\") {\r\n        str = str.split(\"_\").map(item => toCapitalize(item)).join(\" \");\r\n    } else  {\r\n        str = str.split(\"-\").map(item => toCapitalize(item)).join(\" \");\r\n    }\r\n    return toCapitalize(str);\r\n}\r\n\r\nexport function toCapitalize(str) {\r\n    return str.split(\"\").map((char, index) =>  index === 0 ? char.toUpperCase() : char).join(\"\").trim();\r\n}\r\n\r\nexport function toCapitalizeAll(str)   {\r\n    return str.split(\" \").map(item => toCapitalize(item)).join(\" \");\r\n}\r\n\r\n\r\n    \r\n\r\n\r\n\r\n     ","import { toNormalString } from \"../string\";\r\n\r\n\r\nexport function getAllObjectKeys(objects) {\r\n    return objects.reduce((a, b) => {\r\n        for(let key of Object.keys(b))  {\r\n            if(!a.includes(key))    {\r\n                a.push(key);\r\n            }\r\n        }\r\n        return a;\r\n    }, []);\r\n}\r\n\r\nexport function sortObjectsByDate(arr)  {\r\n    arr.sort((a, b) => {\r\n        let date1 = new Date(a.releasedDate).getTime(),\r\n            date2 = new Date(a.releasedDate).getTime();\r\n        return date1 < date2 ? -1 : date1 > date2 ? 1 : 0; \r\n    })\r\n}\r\n\r\n\r\nexport function objectToString(object, delimiter=\", \") {\r\n    let output = [];\r\n    for(let key in object)  {\r\n        output.push(`${toNormalString(key)} : ${toNormalString(object[key]).toUpperCase()}`);\r\n    }\r\n    return output.join(delimiter);\r\n}\r\n\r\nexport function isObjectUnique(obj, objectsArray, keys=[])   {   \r\n    let overAllResults = []; \r\n    for(let object of objectsArray)  {\r\n        let results = [];\r\n        if(keys.length) {\r\n            for(let key of keys)    {\r\n                results.push(obj[key] !== object[key]);\r\n            }\r\n        } else  {\r\n            for(let key in obj) {\r\n                results.push(obj[key] !== object[key]);\r\n            }\r\n        }\r\n        \r\n        overAllResults.push(results.every(res => res));\r\n    }\r\n    return overAllResults.every(res => res);\r\n}\r\n\r\nexport function filterUnlistedObjects(localObjects, allObjects, keys=[])    {\r\n    return allObjects.filter(obj => isObjectUnique(obj, localObjects, keys));\r\n}\r\n\r\nexport function isObjectInArray(object, array = []) {\r\n    return array.some(item => {\r\n        let results = [];\r\n        for(let key in object)    {\r\n            results.push(object[key] === item[key]);\r\n        }\r\n        return results.every(res => res);\r\n    });\r\n}\r\n\r\nexport function sortArrayByObjectProp(arr, prop, asc = true)   {\r\n    return arr.sort((a, b) => {\r\n        if(!isNaN(Number(a[prop]))) {\r\n            return asc ? Number(a[prop]) - Number(b[prop]) : Number(b[prop]) - Number(a[prop]);\r\n        } else  {\r\n            if(asc) {\r\n                return a[prop] < b[prop] ? -1 : a[prop] > b[prop] ? 1 : 0; \r\n            } else  {\r\n                return a[prop] < b[prop] ? 1 : a[prop] > b[prop] ? -1 : 0;\r\n            }\r\n            \r\n        }\r\n    });\r\n}\r\n\r\nexport function getNestedObjectsArray({dataArray, relationalProp, uniqueProp, sortByProp = null, ascSortOrder = true})  {\r\n    \r\n    if(!dataArray.length)   {\r\n        return;\r\n    }\r\n\r\n    sortByProp = sortByProp ? sortByProp : Object.keys(dataArray[0]).includes(\"id\") ? \"id\" : Object.keys(dataArray[0])[0];\r\n\r\n    let sortedArray = [];\r\n    dataArray.forEach(item => item.children = []);\r\n\r\n\r\n    function recursiveNesting(dataArray, relationalProp, uniqueProp) {\r\n        let parentArray = [],\r\n            childrenArray = [];\r\n\r\n        dataArray.forEach(data => {\r\n            let children = dataArray.filter(item => data[uniqueProp] === item[relationalProp]),\r\n                parent = dataArray.find(item => data[relationalProp] === item[uniqueProp]);    \r\n            if(!children.length)    {\r\n                if(!parent) {\r\n                    sortedArray.push(data);\r\n                } else  {\r\n                    childrenArray.push(data);\r\n                }\r\n            } else{\r\n                parentArray.push(data);\r\n            }\r\n        });\r\n\r\n        parentArray = parentArray.map(parent => {\r\n            parent.children.push(...childrenArray.filter(child => child[relationalProp] === parent[uniqueProp]));\r\n            parent.children = sortArrayByObjectProp(parent.children, sortByProp, ascSortOrder);\r\n            return parent;\r\n        });\r\n\r\n        sortArrayByObjectProp(parentArray, sortByProp, ascSortOrder);\r\n\r\n        if(parentArray.length)  {\r\n            recursiveNesting(parentArray, relationalProp, uniqueProp, sortByProp, ascSortOrder);\r\n        }   \r\n    }\r\n    \r\n\r\n    recursiveNesting(dataArray, relationalProp, uniqueProp);\r\n\r\n    return sortArrayByObjectProp(sortedArray, sortByProp, ascSortOrder);\r\n    \r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n// config\r\nimport { fileUrl } from '../../config/';\r\n\r\n// utils\r\nimport { toCapitalizeAll, toNormalString } from \"../../utilities/string/index\"\r\nimport { getAllObjectKeys } from \"../../utilities/objects-array/index\";\r\n\r\n// hooks\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\n// css\r\nimport styles from \"./MuiTable.module.scss\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 770,\r\n    },\r\n});\r\n  \r\nexport default function StickyHeadTable({tableData, uniqueId, excludedColumns}) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(25);\r\n    const { fileToken } = useAuth();\r\n\r\n    const rows = tableData;\r\n    const columns = Array.isArray(tableData) && tableData.length > 0 ? getAllObjectKeys(tableData).map(item => {\r\n        return {\r\n            id: item,\r\n            label: item === \"_id\" ? \"ID\" : item === \"imagePaths\" ? \"Images\" : toCapitalizeAll(toNormalString(item)),\r\n            align : 'center',\r\n            minWidth : 170,\r\n            maxWidth : 400,\r\n        }\r\n    }).filter(item => {\r\n        return !excludedColumns.includes(item.id);\r\n    }) : [];\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Paper className={`${classes.root}`}>\r\n        <TableContainer className={`${classes.container} ${styles[\"mui-table-container\"]}`}>\r\n            <Table stickyHeader aria-label=\"sticky table\" className={styles[\"mui-table\"]}>\r\n            <TableHead className={styles[\"thead\"]}>\r\n                {columns.length > 0 && \r\n                <TableRow>\r\n                {columns.filter(column => column.id !== uniqueId).map((column) => (\r\n                    <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth, color : \"#3a9eb5\" }}\r\n                    >\r\n                    {column.label}\r\n                    </TableCell>\r\n                ))}\r\n                </TableRow>\r\n                }   \r\n            </TableHead>\r\n            \r\n            <TableBody className={styles[\"tbody\"]}>\r\n                {rows.length > 0 && rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={uniqueId ? row[uniqueId] : index}>\r\n                        \r\n                    {columns.filter(column => column.id !== uniqueId).map((column) => {\r\n                        const value = row[column.id];\r\n\r\n                        if(column.id === \"imagePaths\")  {\r\n                            let imagePaths = value.map(item => item.trim());\r\n                            return  (\r\n                                <TableCell className={styles[\"image-container\"]}key={column.id} align={column.align}>\r\n                                    {imagePaths.length > 1 && <div className={styles[\"image-slider-container\"]}>\r\n                                        <div className={styles[\"image-slider-inner\"]} >\r\n                                            {imagePaths.map(item => {\r\n                                                return (\r\n                                                    <div className={styles[\"image-container\"]}>\r\n                                                        <img key={item} src={`${fileUrl}${fileToken}?filePath=${item}`} alt=\"\" />\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>}\r\n                                    {imagePaths.length < 2 && imagePaths.map(item => {\r\n                                        return (\r\n                                            <img key={item} src={`${fileUrl}${fileToken}?filePath=${item}`} alt=\"\" />\r\n                                        );\r\n                                    })}\r\n                                </TableCell>\r\n                            );\r\n                        } else  {\r\n                            \r\n                            return (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                    <div className={styles[\"table-cell\"]} style={{ minWidth: column.minWidth, textAlign : column.align, justifyContent : column.align }}>\r\n                                        {value || \"\"}\r\n                                    </div>\r\n                                </TableCell>\r\n                            );\r\n                        }\r\n                    })}\r\n                    </TableRow>\r\n                );\r\n                })}\r\n            </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n        </Paper>\r\n    );\r\n}","// core\r\nimport { useHistory } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\n\r\n// hooks\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport useActiveMenu from \"../../hooks/useActiveMenu\";\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../components/MuiTable\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button } from '@material-ui/core';\r\nimport AddUserIcon from '@material-ui/icons/PersonAdd';\r\nimport ListAlt from '@material-ui/icons/ListAlt';\r\n\r\nimport styles from \"./Dashboard.module.scss\";\r\n\r\n\r\nexport default function Dashboard({pageTitle}) {\r\n\r\n    let history = useHistory(),\r\n        { activeMenuHandler } = useActiveMenu();\r\n\r\n    useEffect(() => {\r\n        history.push(\"/manage-scrapers/\");\r\n\r\n        // activeMenuHandler();\r\n    })\r\n\r\n    return  (\r\n        <>  \r\n            <EmptyCardFlex className={styles[\"main-container\"]}>\r\n                <h1 className=\"page-title\">{pageTitle}</h1>\r\n                <EmptyCardFlex className={styles[\"grid-container\"]}>\r\n\r\n                    <Card className={styles[\"data-container\"]}>\r\n\r\n                    </Card>\r\n                    <Card className={styles[\"users-container\"]}>\r\n\r\n                    </Card>\r\n\r\n                    <Card className={styles[\"scrapers-container\"]}>\r\n\r\n                    </Card>\r\n\r\n                    <Card className={styles[\"profile-container\"]}>\r\n\r\n                    </Card>\r\n                </EmptyCardFlex>\r\n            </EmptyCardFlex>\r\n        </>\r\n    )\r\n\r\n}","// core\r\nimport { useHistory } from \"react-router\";\r\n\r\n// hooks\r\nimport useFetch from \"../../hooks/useFetch\";\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../components/MuiTable\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Add from '@material-ui/icons/Add';\r\nimport PlayIcon from '@material-ui/icons/PlayArrow';\r\nimport ListAlt from '@material-ui/icons/ListAlt';\r\n\r\n\r\n// styles\r\nimport styles from \"./ManageScrapers.module.scss\";\r\n\r\n// url;\r\nimport { getAllObjectKeys } from \"../../utilities/objects-array\";\r\n\r\n\r\n\r\nexport default function ManageScrapers({pageTitle}) {\r\n\r\n    let history = useHistory(),\r\n        {data : scrapers, isLoading : isLoadingTableData} = useFetch(\"/api/scrapers\"),\r\n        tableData = scrapers.map(item => {\r\n            const optionClickHandler = (value) => {\r\n                history.push(value);\r\n            }\r\n\r\n            return {\r\n                ...item, \r\n                // action : <DropdownButton size=\"small\" dropDownOptions={dropDownOptions} optionClickHandler={optionClickHandler} />\r\n                action : <div className={styles[\"action-column\"]} style={{display: \"flex\", flexDirection : \"row\", gap : \".7rem\", justifyContent: \"center\"}}>\r\n                    <Button \r\n                        \r\n                        onClick={optionClickHandler.bind(null, `/manage-scrapers/run-script/${item._id}`)}\r\n                        startIcon={<PlayIcon />} \r\n                        style={{backgroundColor: \"#4fbf4f\", color : \"white\", whiteSpace : \"nowrap\", minWidth : \"125px\", maxWidth : \"250px\"}}\r\n                        size=\"small\">Run the Script</Button>  \r\n                    <Button \r\n                        onClick={optionClickHandler.bind(null, `/manage-scrapers/${item._id}`)}\r\n                        startIcon={<ListAlt />} \r\n                        size=\"small\" \r\n                        style={{backgroundColor: \"rgb(85 159 171)\", color : \"white\", whiteSpace : \"nowrap\", minWidth : \"125px\", maxWidth : \"250px\"}}>View Details</Button></div>\r\n            }\r\n        }),\r\n        includedKeys = [\"_id\", \"siteName\", \"productBrand\", \"groupIdentifierKey\", \"scraperType\", \"apiRoute\", \"action\", \"anotherAction\"],\r\n        excludedColumns = getAllObjectKeys(tableData).filter(key => !includedKeys.includes(key));\r\n        \r\n    \r\n    const createScraperButtonClickHandler = (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/manage-scrapers/create-scraper/\");\r\n    }\r\n    \r\n\r\n    return  (\r\n        <>  \r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            <EmptyCardFlex flexDirection=\"column\">\r\n                <Card>\r\n                    <div className={styles[\"buttons-container\"]}>\r\n                        <Button onClick={createScraperButtonClickHandler} type=\"button\" variant=\"contained\" size=\"medium\" color=\"primary\" disableElevation startIcon={<Add />} >\r\n                            Create a new Scraper\r\n                        </Button>\r\n                    </div>\r\n                    {isLoadingTableData && \r\n                        <>\r\n                            <Divider style={{ margin : \"1.4rem 0\"}}></Divider>\r\n                            <Alert severity=\"info\"><CircularProgress style={{height: \"20px\", width: \"20px\"}}></CircularProgress> Loading the Scraper Script table</Alert>\r\n                        </>\r\n                    }\r\n                    {\r\n                        tableData.length > 0 && \r\n                        <>\r\n                            <Divider style={{ margin : \"1.4rem 0\"}}></Divider>\r\n                            <h6 className={styles[\"template-subtitle\"]}>These are the current available scripts</h6>\r\n                            <MuiTable tableData={tableData} uniqueId=\"_id\" excludedColumns={excludedColumns}></MuiTable>\r\n                        </>\r\n                    }    \r\n                </Card>\r\n            </EmptyCardFlex>  \r\n        </>\r\n    )\r\n\r\n}","import CodeEditor from '@uiw/react-textarea-code-editor';\r\n\r\nexport default function CodeEditor2({onChange, padding, value, style, placeholder, disabled}) {\r\n  \r\n    return (\r\n        <>\r\n        {!disabled && <CodeEditor\r\n            value={value}\r\n            language=\"js\"\r\n            placeholder={placeholder || \"You can now write some JS code...\"}\r\n            onChange={onChange}\r\n            padding={padding || 15}\r\n            \r\n            style={{\r\n                fontSize: 14,\r\n                backgroundColor: \"#f5f5f5\",\r\n                color : \"#333\",\r\n                fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\r\n                minHeight : \"500px\",\r\n                border : \"1px solid #dedede\",\r\n                display : \"grid\",\r\n                gridAutoFlow : \"row\",\r\n                ...style\r\n            }}\r\n        />}\r\n        {disabled && <CodeEditor\r\n            value={value}\r\n            language=\"js\"\r\n            placeholder={placeholder || \"You can now write some JS code...\"}\r\n            onChange={onChange}\r\n            padding={padding || 15}\r\n            disabled\r\n            style={{\r\n                fontSize: 14,\r\n                backgroundColor: \"#f5f5f5\",\r\n                color : \"#333\",\r\n                fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\r\n                minHeight : \"500px\",\r\n                minWidth : \"250px\",\r\n                width : \"100%\",\r\n                display : \"grid\",\r\n                gridAutoFlow : \"row\",\r\n                border : \"1px solid #dedede\",\r\n                ...style\r\n            }}\r\n        />}\r\n        </>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport styles from \"./Select.module.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n    //   margin: theme.spacing(1),\r\n      minWidth: 250,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nexport default function Select2({label, options, uniqueProp, optionLabelProp, selectOnchangeHandler, defaultValue})    {\r\n    const classes = useStyles();\r\n    const [selectedOption, setSeletedOption] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        setSeletedOption(prev => e.target.value);\r\n        selectOnchangeHandler(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(defaultValue) {\r\n            setSeletedOption(defaultValue[uniqueProp]);\r\n        }\r\n    }, [defaultValue, uniqueProp])\r\n\r\n    return (\r\n        <FormControl className={`${classes.formControl} ${styles.select}`}>\r\n            <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\r\n            <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={selectedOption}\r\n            onChange={handleChange}\r\n            >   \r\n                {options.length > 0 && options.map(item => {\r\n                    return (\r\n                        <MenuItem key={item[uniqueProp]} value={item[uniqueProp]} selected>{item[optionLabelProp]}</MenuItem>\r\n                    )\r\n                })}\r\n                {options.length === 0 && options.map(item => {\r\n                    return (\r\n                        <MenuItem disabled key={item[uniqueProp]} value={item[uniqueProp]}>{item[optionLabelProp]}</MenuItem>\r\n                    )\r\n                })}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}","// core\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// styles\r\nimport styles from \"./SelectSiteResources.module.scss\";\r\nimport { Button } from '@material-ui/core';\r\nimport NavigateNext from '@material-ui/icons/NavigateNext';\r\nimport Create from '@material-ui/icons/Create';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\n\r\n// components\r\nimport Select from \"../../components/Select\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SelectSiteResource({selectOptions, selectedSiteResource, selectOnchangeHandler, setSelectHandler, createReadyHandler})    {\r\n\r\n    let [hasSelected, setHasSelected] = useState(false),\r\n        history = useHistory()\r\n\r\n\r\n    const selectButtonHandler = (e) => {\r\n        e.preventDefault();\r\n        createReadyHandler();\r\n    };\r\n\r\n    const changeHandler = (value) =>   {\r\n        setHasSelected(prev => true);\r\n        selectOnchangeHandler(value);\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        history.push(\"/manage-scrapers\")\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(selectedSiteResource.siteName !== \"\")    {\r\n            setHasSelected(prev => true);\r\n        }\r\n    }, [selectedSiteResource]);\r\n\r\n    return (\r\n        <div className={styles[\"select-container\"]}>\r\n            <h6 className={styles[\"template-title\"]}>Select a Site Resource.</h6>\r\n            <div>\r\n                <Select defaultValue={selectedSiteResource} selectOnchangeHandler={changeHandler} label=\"Select a Site Resource\" options={selectOptions} uniqueProp=\"_id\" optionLabelProp=\"siteName\"></Select>\r\n                \r\n            </div>\r\n\r\n            {selectedSiteResource && selectedSiteResource.siteName !== \"\" && <div className={styles[\"site-resource-info-container\"]}>\r\n                <p>Site Name : {selectedSiteResource.siteName}</p>\r\n                <p>Site Url : {selectedSiteResource.siteUrl}</p>\r\n            </div>}\r\n\r\n            <div className={styles[\"buttons-container\"]}>\r\n                <Button onClick={cancelHandler} variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />}>Cancel</Button>\r\n                {!hasSelected && <Button  variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<NavigateNext />}>Use Selected Resource</Button>}\r\n                {hasSelected && <Button onClick={selectButtonHandler.bind(this)} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<NavigateNext />}>Use Selected Resource</Button>}\r\n                <Button onClick={setSelectHandler.bind(this, false)} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />}>Create a New Site Resource</Button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}   \r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\n// Components\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\n\r\n// config\r\nimport { baseUrl } from \"../../config\";\r\n\r\n// styles\r\nimport styles from \"./CreateSiteResource.module.scss\";\r\n\r\n\r\nexport default function CreateSiteResource({siteResourceHandler, setSelectHandler, createReadyHandler}) {\r\n\r\n    let [siteResource, setSiteResource] = useState({siteName : \"\", siteUrl : \"\"}),\r\n        [message, setMessage] = useState(null),\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [messageType, setMessageType] = useState(null),\r\n        { authToken } = useAuth(),\r\n        url = `${baseUrl}/api/site-resources`,\r\n        abortCont = new AbortController();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n\r\n        let { siteName, siteUrl } = siteResource;\r\n        if((siteName.trim().length) && (siteUrl.trim().length)) {\r\n            setMessage(null);\r\n            setMessageType(null);\r\n            setIsLoading(true);\r\n\r\n            fetch(url, {\r\n                method : \"POST\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken\r\n                },\r\n                body : JSON.stringify(siteResource),\r\n                signal : abortCont.signal\r\n            })\r\n                .then(res => {\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    if(data.statusOk)   {\r\n                        setMessage('you have successfully saved the data');\r\n                        setMessageType(\"success\");\r\n                        siteResourceHandler(data.data);\r\n                        setTimeout(() => createReadyHandler(), 777);\r\n                    } else  {\r\n                        throw Error(`Data NOT SAVED : ${data.message}`);\r\n                    }\r\n                    setIsLoading(false);\r\n                })\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        setMessage(err.message);\r\n                        setMessageType(\"error\");\r\n                        setIsLoading(false);\r\n                    }\r\n                });\r\n        } else  {\r\n            setMessage(prev => \"Please make sure that the Site Name and Site URL fields are not empty.\");\r\n            setMessageType(prev => \"error\");\r\n        }\r\n\r\n        \r\n    }   \r\n\r\n\r\n    const changeHandler = (inputName, e) => {\r\n        setSiteResource(prev => ({...prev, [inputName] : e.target.value}));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // clearing memory leaks on unmount.\r\n        return () => abortCont.abort();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles[\"form-container\"]}>\r\n            <h6 className={styles[\"template-title\"]}>Create a new Site Resource</h6>\r\n            <form onSubmit={submitHandler} className={styles.form} noValidate autoComplete=\"off\">\r\n                <div className={styles[\"input-container\"]}>\r\n                    <TextField onChange={changeHandler.bind(this, \"siteName\")} label=\"Site Name\" />\r\n                    <TextField onChange={changeHandler.bind(this, \"siteUrl\")} id=\"siteUrl\" label=\"Site URL\" />\r\n                </div>\r\n                \r\n                {true && \r\n                    <div className={styles[\"buttons-container\"]}>\r\n                    {!isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />} >\r\n                        Save\r\n                    </Button>}\r\n                    {isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<SaveIcon />} >\r\n                        Saving...\r\n                    </Button>}\r\n                    {!isLoading && <Button onClick={setSelectHandler.bind(this, true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                        Cancel\r\n                    </Button>}\r\n                    {isLoading && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation disabled startIcon={<Cancel />} >\r\n                        Cancel...\r\n                    </Button>}\r\n                    </div>\r\n                }\r\n            </form>\r\n            {message && \r\n                <>\r\n                {messageType === \"error\" && \r\n                    <p style={{color : \"red\"}}>{message}</p>\r\n                }\r\n                {messageType === \"success\" &&\r\n                    <p style={{color : \"green\"}}>{message}</p>\r\n                }\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl } from '@material-ui/core';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport NextIcon from '@material-ui/icons/NavigateNext';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\n\r\n// styles\r\nimport styles from \"./CreateScraperData.module.scss\";\r\n\r\nexport default function CreateScraperData({currentValue, setScraperDataHandler, backButtonHandler, cancelHandler}) {\r\n\r\n    let [scraperDetails, setScraperDetails] = useState(currentValue),\r\n        [productBrandErrorMessage, setProductBrandErrorMessage] = useState(null),\r\n        [imagePropNameErrorMessage, setImagePropNameErrorMessage] = useState(null),\r\n        [uniqueSplitErrorMessage, setUniqueSplitErrorMessage] = useState(null),\r\n        [arrItemError, setArrItemError] = useState({}),\r\n        [arrItem, setArrItem] = useState({\r\n            splitItem : \"\",\r\n            sharedItem : \"\",\r\n            csvExcludedPropsItem : \"\",\r\n        });\r\n        // objectKeys = [getAllObjectKeys];\r\n\r\n\r\n    const submitHandler =(e) => {\r\n        e.preventDefault();\r\n        let { productBrand, imagePropName, imageNameObject } = scraperDetails;\r\n        if(productBrand && imagePropName && imageNameObject.split.length > 0)   {\r\n            setProductBrandErrorMessage(null);\r\n            setUniqueSplitErrorMessage(null);\r\n            setImagePropNameErrorMessage(null);\r\n\r\n            setScraperDataHandler(scraperDetails, true);\r\n        } else  {\r\n            setScraperDataHandler(scraperDetails, false);\r\n            if(!productBrand)   {\r\n                setProductBrandErrorMessage(\"Product Brand is required.\");\r\n            }\r\n            if(!imagePropName)   {\r\n                setImagePropNameErrorMessage(\"Image Prop Name is required.\");\r\n            }\r\n            if(!imageNameObject.split.length)   {\r\n                setUniqueSplitErrorMessage(\"It is required to at least have a single Unique / Split Property.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const changeHandler = (prop, e) => {\r\n        setScraperDetails(prev => ({...prev, [prop] : e.target.value}));\r\n    }\r\n\r\n    const arrInputChangeHandler = (prop, e) => {\r\n        let keys = Object.keys(arrItemError),\r\n            key = keys.find(item => prop.includes(item));\r\n        setArrItemError(prev => {\r\n            let obj = {...prev};\r\n            obj[key] = null;\r\n            return obj;\r\n        })\r\n        setArrItem(prev => ({...prev, [prop] : e.target.value}));\r\n    }\r\n\r\n    const addItemToArrayInObjectHandler = (propName, arrName = null, e) => {\r\n        e.preventDefault();\r\n        let value;\r\n        if(arrName) {\r\n            value = arrItem[`${arrName}Item`];\r\n            if(value.trim() !== \"\") {\r\n                setArrItem(prev => ({...prev, [`${arrName}Item`] : \"\"}));\r\n            }\r\n            \r\n        } else  {\r\n            value = arrItem[`${propName}Item`];\r\n            if(value.trim() !== \"\") {\r\n                setArrItem(prev => ({...prev, [`${propName}Item`] : \"\"}));\r\n            }\r\n        }\r\n        if(value.trim() !== \"\") {\r\n            setScraperDetails(prev => {\r\n                if(value.trim().length) {\r\n                    if(arrName) {\r\n                        let arr = [...prev[propName][arrName]];\r\n                        if(!arr.includes(value))    {\r\n                            arr.push(value)\r\n                        } else  {\r\n                            setArrItemError(prev => {\r\n                                return {\r\n                                    ...prev,\r\n                                    [arrName] : `We already have \"${value}\" in ${arrName} array of data.`\r\n                                };\r\n                            });\r\n                        }\r\n                        return {\r\n                            ...prev, \r\n                            [propName] : {\r\n                                ...prev[propName],\r\n                                [arrName] : arr\r\n                            }\r\n                        };\r\n                    } else  {\r\n                        let arr = [...prev[propName]];\r\n                        if(!arr.includes(value))    {\r\n                            arr.push(value)\r\n                        } else  {\r\n                            setArrItemError(prev => {\r\n                                return {\r\n                                    ...prev,\r\n                                    [propName] : `We already have \"${value}\" in ${propName} array of data.`\r\n                                };\r\n                            });\r\n                        }\r\n                        return {\r\n                            ...prev, \r\n                            [propName] : arr,\r\n                        };\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    const handleDeleteChipEntry = (propName, arrName = null, value, e) => {\r\n        e.preventDefault();\r\n        \r\n        setScraperDetails(prev => {\r\n            if(value.trim().length) {\r\n                if(arrName) {\r\n                    let arr = prev[propName][arrName].filter(item => item !== value);\r\n\r\n                    return {\r\n                        ...prev, \r\n                        [propName] : {\r\n                            ...prev[propName],\r\n                            [arrName] : arr\r\n                        }\r\n                    };\r\n                } else  {\r\n                    let arr = prev[propName].filter(item => item !== value);\r\n\r\n                    return {\r\n                        ...prev, \r\n                        [propName] : arr,\r\n                    };\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [arrItemError])\r\n\r\n    return (\r\n        <div className={`${styles[\"form-container\"]}`}>\r\n            <h6 className={styles[\"template-title\"]}>Create Scraper Details</h6>\r\n            <form className={styles.form} onSubmit={submitHandler}>\r\n                <div className={styles[\"input-container\"]}>\r\n                    <div className={styles[\"field-container\"]}>\r\n                        <FormControl fullWidth>\r\n                            <TextField value={scraperDetails.productBrand} onChange={changeHandler.bind(this, \"productBrand\")} label=\"Product Brand\" />\r\n                        </FormControl>\r\n                        {productBrandErrorMessage && <p className={styles[\"error-message\"]}>{productBrandErrorMessage}</p>}\r\n                    </div>\r\n                    <div className={styles[\"field-container\"]}>\r\n                        <FormControl fullWidth>\r\n                            <TextField value={scraperDetails.imagePropName} onChange={changeHandler.bind(this, \"imagePropName\")} label=\"Image Prop Name\" />\r\n                        </FormControl>\r\n                        {imagePropNameErrorMessage && <p className={styles[\"error-message\"]}>{imagePropNameErrorMessage}</p>}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Array containers : split */}\r\n                <div className={styles[\"input-container-array\"]}>\r\n                    <p className={styles[\"description\"]}>Unique Properties of product to be used as part of the image name.</p>\r\n                    <div className={styles[\"result-container\"]}>\r\n                        {scraperDetails.imageNameObject.split.length > 0 && \r\n                            scraperDetails.imageNameObject.split.map((item, index) => {\r\n                                return (\r\n                                    <Chip\r\n                                        key={`${item}-${index}`}\r\n                                        label={item}\r\n                                        onDelete={handleDeleteChipEntry.bind(this, \"imageNameObject\", \"split\", item)}\r\n                                        deleteIcon={<Cancel />}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        <div className={styles[\"field-container\"]}>\r\n                            <TextField value={arrItem.splitItem} onChange={arrInputChangeHandler.bind(this, \"splitItem\")} fullWidth label=\"Unique / Split\"  />\r\n                            {uniqueSplitErrorMessage && <p className={styles[\"error-message\"]}>{uniqueSplitErrorMessage}</p>}\r\n                            {arrItemError.split !== null && <p className={styles[\"error-message\"]}>{arrItemError.split}</p>}\r\n                        </div>\r\n                        <Button onClick={addItemToArrayInObjectHandler.bind(this, \"imageNameObject\", \"split\")} type=\"button\" variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Array containers : shared */}\r\n                <div className={styles[\"input-container-array\"]}>\r\n                    <p className={styles[\"description\"]}>Shared Properties of the product to be used as part of the image name.</p>\r\n                    <div className={styles[\"result-container\"]}>\r\n                        {scraperDetails.imageNameObject.shared.length > 0 && \r\n                            scraperDetails.imageNameObject.shared.map((item, index) => {\r\n                                return (\r\n                                    <Chip\r\n                                        key={`${item}-${index}`}\r\n                                        label={item}\r\n                                        onDelete={handleDeleteChipEntry.bind(this, \"imageNameObject\", \"shared\", item)}\r\n                                        deleteIcon={<Cancel />}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        <div className={styles[\"field-container\"]}>\r\n                            <TextField fullWidth value={arrItem.sharedItem} onChange={arrInputChangeHandler.bind(this, \"sharedItem\")} label=\"Shared\" />\r\n                            {arrItemError.shared !== null && <p className={styles[\"error-message\"]}>{arrItemError.shared}</p>}\r\n                        </div>\r\n                        <Button onClick={addItemToArrayInObjectHandler.bind(this, \"imageNameObject\", \"shared\")} type=\"button\" variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Array containers : csv excluded props */}\r\n                <div className={styles[\"input-container-array\"]}>\r\n                    <p className={styles[\"description\"]}>Excluded Properties when creating the CSV file.</p>\r\n                    <div className={styles[\"result-container\"]}>\r\n                        {scraperDetails.csvExcludedProps.length > 0 && \r\n                            scraperDetails.csvExcludedProps.map((item, index) => {\r\n                                return (\r\n                                    <Chip\r\n                                        key={`${item}-${index}`}\r\n                                        label={item}\r\n                                        onDelete={handleDeleteChipEntry.bind(this, \"csvExcludedProps\", null, item)}\r\n                                        deleteIcon={<Cancel />}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        <div className={styles[\"field-container\"]}>\r\n                            <TextField value={arrItem.csvExcludedPropsItem} onChange={arrInputChangeHandler.bind(this, \"csvExcludedPropsItem\")} fullWidth label=\"CSV Excluded Props\" />\r\n                            {arrItemError.csvExcludedProps !== null && <p className={styles[\"error-message\"]}>{arrItemError.csvExcludedProps}</p>}\r\n                        </div>\r\n                        <Button onClick={addItemToArrayInObjectHandler.bind(this, \"csvExcludedProps\", null)} type=\"button\" variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className={styles[\"message\"]}>\r\n\r\n                </div>\r\n                <div className={styles[\"buttons-container\"]}>\r\n                    <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"button\" onClick={backButtonHandler} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation endIcon={<NextIcon />} >\r\n                        Next\r\n                    </Button>\r\n                </div>\r\n                \r\n            </form>            \r\n        </div>    \r\n    )\r\n}","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nexport default function RadioButtonsGroup({legend, radioOptions, onChange, defaultValue}) {\r\n  const [value, setValue] = React.useState(defaultValue || radioOptions[1].value);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">{legend}</FormLabel>\r\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n            {\r\n                radioOptions.length  > 0 && radioOptions.map(item => {\r\n                    return (\r\n                        <FormControlLabel value={item.value} key={item.value} control={<Radio />} label={ item.label } />\r\n                    );\r\n                })\r\n            }\r\n        </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { isObjectUnique } from \"../../utilities/objects-array\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl } from '@material-ui/core';\r\nimport NextIcon from '@material-ui/icons/NavigateNext';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport Select from \"../../components/Select\";\r\nimport RadioButtonsGroup from \"../../components/Radio\";\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// styles \r\nimport styles from \"./CreateModelOptions.module.scss\";\r\n\r\nexport default function CreateModelSchema({currentValue, setModelObjectHandler, cancelHandler, backButtonHandler}) {\r\n\r\n    let selectOptions = [\r\n            { name : \"String\" },\r\n            { name : \"Array\" },\r\n        ],\r\n        radioOptions = [\r\n            { value : \"true\", label : \"True\" },\r\n            { value : \"false\", label : \"False\" },\r\n        ],\r\n        [modelObjectOptions, setModelObjectOptions] = useState(currentValue),\r\n        [saveButtonEnabled, setSavedButtonEnabled] = useState(false),\r\n        [schemaArray, setSchemaArray] = useState(Object.keys(modelObjectOptions.schema).map(propKey => {\r\n            return {key : propKey, ...modelObjectOptions.schema[propKey]}\r\n        })),\r\n        [addSchemaButtonDisabled, setAddSchemaButtonDisabled] = useState(true),\r\n        [schemaKey, setSchemaKey] = useState(\"\"),\r\n        [schemaKeyType, setSchemaKeyType] = useState(\"String\"),\r\n        [schemaKeyRequired, setSchemaKeyRequired] = useState(\"false\"),\r\n        [schemaError, setSchemaError] = useState(\"\"),\r\n\r\n\r\n        // model initialized props \r\n        [propObjectsErrMessage, setPropObjectsErrMessage] = useState({\r\n            friendlyUrlProps : null,\r\n            immutableProps : null,\r\n            uniqueProps : null,\r\n        }),\r\n        [propObjects, setPropObjects] = useState({\r\n            friendlyUrlProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"friendlyUrlProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"friendlyUrlProps\"))[\"friendlyUrlProps\"]] : [],\r\n            immutableProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"immutableProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"immutableProps\"))[\"immutableProps\"]] : [],\r\n            uniqueProps : modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"uniqueProps\")) ? [...modelObjectOptions.initializedProps.find(item => Object.keys(item).includes(\"uniqueProps\"))[\"uniqueProps\"]] : [],\r\n        }),\r\n        [friendlyUrlProp, setFriendlyUrlProp] = useState(\"\"),\r\n        [immutableProp, setImmutableProp] = useState(\"\"),\r\n        [uniqueProp, setUniqueProp] = useState(\"\");\r\n\r\n    // model schema event handlers \r\n    const inputChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        setSchemaKey(prev => e.target.value);\r\n        if(e.target.value.trim() !== \"\")    {\r\n            setAddSchemaButtonDisabled(prev => false);\r\n            setSchemaError(prev => false);\r\n        } else  {\r\n            setAddSchemaButtonDisabled(prev => true);\r\n        }\r\n    }\r\n\r\n    const selectOnchangeHandler = (value) => {\r\n        setSchemaKeyType(prev => value);\r\n    }\r\n\r\n    const radioChangeHandler = (value) => {\r\n        setSchemaKeyRequired(prev => value);\r\n    }\r\n\r\n    const addSchemaHandler = (e) => {\r\n        e.preventDefault();\r\n        if(schemaKey && schemaKey.length > 0) {\r\n\r\n            let schemaObject = {key : schemaKey, type : schemaKeyType, required : schemaKeyRequired};\r\n\r\n            if(isObjectUnique(schemaObject, schemaArray, [\"key\"])) {\r\n                setSchemaArray(prev => {                    \r\n                    let arr = [...prev, schemaObject];\r\n                    return arr;\r\n                });\r\n            } else  {\r\n                setSchemaError('We already have this schema...');\r\n            }\r\n            setSchemaKey(prev => \"\");\r\n            // setSchemaKeyType(prev => \"String\");\r\n            setSchemaKeyRequired(prev => \"false\");\r\n            setAddSchemaButtonDisabled(prev => true);\r\n        }\r\n    }\r\n\r\n    const deleteSchemaHandler = (key, e) => {\r\n        e.preventDefault();\r\n        setSchemaArray(prev => {\r\n            let arr = prev.slice().filter(item => item.key !== key);\r\n            return arr;\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // initializedPropsHandler\r\n\r\n\r\n    const handleDeleteChipEntry = (propName, arrItem, e) => {\r\n        e.preventDefault();\r\n\r\n        setPropObjects(prev => {\r\n            let obj = {...prev},\r\n                arr = obj[propName].filter(item => item !== arrItem);\r\n            return {...obj, [propName] : arr};\r\n        });\r\n        \r\n    }   \r\n\r\n    const propObjectChangeHandler = (setter, propName, e) => {\r\n        setter(e.target.value);\r\n        setPropObjectsErrMessage(prev => {\r\n            return {...prev, [propName] : null};\r\n        })\r\n    }\r\n\r\n    const addPropObjects = (propName, value, setter, e) => {\r\n        e.preventDefault();\r\n\r\n        if(value.trim() !== \"\")    {\r\n            \r\n            if(!propObjects[propName].includes(value)) {\r\n                \r\n                setPropObjects(prev => {\r\n                    let obj = {...prev};\r\n                    obj[propName].push(value);\r\n                    return obj;\r\n                });\r\n            } else  {\r\n                setPropObjectsErrMessage(prev => {\r\n                    return {...prev, [propName] : `We already have \"${value}\" property name in ${propName}`}\r\n                });\r\n            }\r\n        }\r\n        setter(prev => \"\");\r\n    }\r\n\r\n\r\n\r\n    // submit handler\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setModelObjectOptions(prev => {\r\n            let obj = {...prev},\r\n                initializedProps = [];\r\n            \r\n            for(let key in propObjects) {\r\n                initializedProps.push({[key] : propObjects[key]});\r\n            }\r\n            \r\n            obj.schema = schemaArray.reduce((a, b) => {\r\n                    a[b.key] = {\r\n                        type : b.type,\r\n                        required : b.required,\r\n                    };\r\n\r\n                    return a;\r\n                }, {});\r\n\r\n            obj.initializedProps = initializedProps;\r\n            setModelObjectHandler(obj, true);\r\n            return obj;\r\n        });\r\n        \r\n    }  \r\n\r\n    useEffect(() => {\r\n        if(schemaArray.length)  {\r\n            setSavedButtonEnabled(prev => true);\r\n        } else  {\r\n            setSavedButtonEnabled(prev => false);\r\n        }\r\n    }, [schemaArray]);\r\n\r\n    return (\r\n        <form className={styles[\"main-container\"]} onSubmit={submitHandler}>\r\n            <EmptyCardFlex className={styles[\"model-object-container\"]}>\r\n                <Card className={styles[\"create-model-card\"]}> \r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <h6 className={styles[\"template-title\"]}>Create Model Options</h6>\r\n                        <div className={styles.form} >\r\n                        <h6 className={styles[\"template-section-title\"]}>Add DB Model Schema</h6>\r\n                            <div className={styles[\"input-container\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <FormControl fullWidth>\r\n                                        <TextField value={schemaKey} onChange={inputChangeHandler} label=\"Schema Property Name\" />\r\n                                        {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>}\r\n                                    </FormControl>\r\n                                    <FormControl fullWidth>\r\n                                        <Select defaultValue={selectOptions[0]} selectOnchangeHandler={selectOnchangeHandler} label=\"Shema Property Type\" options={selectOptions} uniqueProp=\"name\" optionLabelProp=\"name\" ></Select>\r\n                                    </FormControl>\r\n                                    <FormControl fullWidth>\r\n                                        <RadioButtonsGroup radioOptions={radioOptions} legend=\"Is Value Required?\" onChange={radioChangeHandler} />\r\n                                    </FormControl>\r\n                                    {!addSchemaButtonDisabled && \r\n                                        <Button onClick={addSchemaHandler.bind(this)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Add />} >\r\n                                            Add Schema Property\r\n                                        </Button>\r\n                                    }\r\n                                    {addSchemaButtonDisabled && \r\n                                        <Button onClick={addSchemaHandler.bind(this)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disabled disableElevation startIcon={<Add />} >\r\n                                            Add Schema Property\r\n                                        </Button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </Card>\r\n                {\r\n                    schemaArray.length > 0 && \r\n                    <Card className={styles[\"schema-container\"]}>\r\n                        <h6 className={styles[\"template-subtitle\"]}>Added Model Schemas</h6>\r\n                        <ul>\r\n                        {schemaArray.map(item => {\r\n                            let {key, type, required} = item;\r\n                            return (\r\n                                <li key={key}>\r\n                                    <span>Key : {key}</span>\r\n                                    <span>Type : {type}</span>\r\n                                    <span>Required : {required}</span>\r\n                                    \r\n                                    <IconButton onClick={deleteSchemaHandler.bind(this, key)} className={styles[\"delete-button\"]} color=\"default\"  component=\"span\">\r\n                                    <Cancel />\r\n                                    </IconButton>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                        </ul>\r\n                    </Card>\r\n                }\r\n            </EmptyCardFlex>\r\n            <EmptyCardFlex className={styles[\"model-object-container\"]}>\r\n                <Card className={styles[\"create-model-card\"]}> \r\n                <div className={`${styles[\"form-container\"]}`}>\r\n                   \r\n                    <div className={styles.form}>\r\n                        <h6 className={styles[\"template-section-title\"]}>Set the Initialized Properties</h6>\r\n\r\n\r\n                        {/* Array containers : uniqueProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n                            <p className={styles[\"description\"]}>Unique Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.uniqueProps.length > 0 && \r\n                                    propObjects.uniqueProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"uniqueProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={uniqueProp} onChange={propObjectChangeHandler.bind(this, setUniqueProp, \"uniqueProps\")} fullWidth label=\"Unique Properties\" />\r\n                                    {propObjectsErrMessage.uniqueProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.uniqueProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {uniqueProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"uniqueProps\", uniqueProp, setUniqueProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!uniqueProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"uniqueProps\", uniqueProp, setUniqueProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Array containers : immutableProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n\r\n                            <p className={styles[\"description\"]}>Immutable Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.immutableProps.length > 0 && \r\n                                    propObjects.immutableProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"immutableProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={immutableProp} onChange={propObjectChangeHandler.bind(this, setImmutableProp, \"immutableProps\")} fullWidth label=\"Immutable Properties\" />\r\n                                    {propObjectsErrMessage.immutableProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.immutableProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {immutableProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"immutableProps\", immutableProp, setImmutableProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!immutableProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"immutableProps\", immutableProp, setImmutableProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Array containers : friendlyUrlProps */}\r\n                        <div className={styles[\"input-container-array\"]}>\r\n                            <p className={styles[\"description\"]}>Friendly URL Properties</p>\r\n                            <div className={styles[\"result-container\"]}>\r\n                                {propObjects.friendlyUrlProps.length > 0 && \r\n                                    propObjects.friendlyUrlProps.map((item, index) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={`${index}`}\r\n                                                label={item}\r\n                                                onDelete={handleDeleteChipEntry.bind(this, \"friendlyUrlProps\", item)}\r\n                                                deleteIcon={<Cancel />}\r\n                                            />\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <TextField value={friendlyUrlProp} onChange={propObjectChangeHandler.bind(this, setFriendlyUrlProp, \"friendlyUrlProps\")} fullWidth label=\"Friendly URL Properties\" />\r\n                                    {propObjectsErrMessage.friendlyUrlProps && <p className={styles[\"error-message\"]}>{propObjectsErrMessage.friendlyUrlProps}</p>}\r\n                                </div>\r\n                                <div className={styles[\"button-container\"]}>\r\n                                    {friendlyUrlProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"friendlyUrlProps\", friendlyUrlProp, setFriendlyUrlProp)} variant=\"contained\" size=\"small\" disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                    {!friendlyUrlProp && <Button type=\"button\" onClick={addPropObjects.bind(this, \"friendlyUrlProps\", friendlyUrlProp, setFriendlyUrlProp)} variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<Add />} >\r\n                                        Add\r\n                                    </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>            \r\n                </div>    \r\n                </Card> \r\n                \r\n            </EmptyCardFlex>\r\n            <Card>\r\n                <div className={styles[\"buttons-container\"]}>\r\n                    <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                            Cancel\r\n                    </Button>\r\n                    <Button type=\"button\" onClick={backButtonHandler} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>\r\n                    \r\n                    {saveButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation endIcon={<NextIcon />} >\r\n                        Next\r\n                    </Button>}\r\n                    {!saveButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation endIcon={<NextIcon />} >\r\n                        Next\r\n                    </Button>}\r\n                    \r\n                </div>\r\n            </Card>\r\n        </form>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { isObjectInArray } from \"../../utilities/objects-array\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl, Divider } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport Create from '@material-ui/icons/Create';\r\nimport Select from \"../../components/Select\";\r\nimport RadioButtonsGroup from \"../../components/Radio\";\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CodeEditor from \"../../components/CodeEditor/\";\r\n\r\n// styles\r\nimport styles from \"./CreateEvaluators.module.scss\";\r\n\r\nexport default function CreateEvaluators({currentValue, currentUsageValue, currentGroupIdentifierKeyValue, currentSchema, setEvaluatorObjectsHandler, setUsageHandler, setGroupIdentifierKeyHandler, cancelHandler, backButtonHandler})   {\r\n\r\n\r\n    let radioOptions = [\r\n            { value : \"list\", label : \"List\" },\r\n            { value : \"single\", label : \"Single\" },\r\n        ],\r\n        selectOptions = [\r\n            { name : \"True\", value : true },\r\n            { name : \"False\", value : false },\r\n        ],\r\n        [evaluatorObjects, setEvaluatorObjects] = useState(currentValue),\r\n        [submitButtonEnabled, setSubmitButtonEnabled] = useState(false),\r\n        [addEvaluatorButtonEnabled, setAddEvaluatorButtonEnabled] = useState(false),\r\n\r\n        [callback, setCallback] = useState(\"\"),\r\n        [type, setType] = useState(\"list\"),\r\n\r\n        // waitMethod\r\n        [waitMethods, setWaitMethods] = useState([\r\n            // {name : \"waitForSelector\", args : \".page-card-info .product-info\"},\r\n            // {name : \"waitForSelector\", args : \".page-image-container .product-image\"},\r\n        ]),\r\n        [currentWaitMethod, setCurrentWaitMethod] = useState({\r\n            name: \"\",\r\n            args : \"\",\r\n        }),\r\n        [addWaitMethodButtonReady, setAddWaitMethodButtonReady] = useState(false),\r\n        [waitMethodError, setWaitMethodError] = useState(null),\r\n\r\n            // shows if evaluator TYPE === list;\r\n            [showPaginated, setShowPaginated] = useState(true),\r\n            [paginated, setPaginated] = useState(false),\r\n            \r\n            // only needed if evaluator TYPE === single;\r\n            [objPropArgs, setObjPropArgs] = useState([]),\r\n            [objPropArgsError, setObjPropArgsError] = useState(null),\r\n            [currentPropArg, setCurrentPropArg] = useState(''),\r\n            [addObjPropArgsButtonEnabled, setAddObjPropArgsButtonEnabled] = useState(false),\r\n\r\n            // productUrlProp\r\n            [productUrlProp, setProductUrlProp] = useState(\"\"),\r\n            [productUrlPropError, setProductUrlPropError] = useState(false),\r\n\r\n        // devs comments\r\n        [usage, setUsage] = useState(currentUsageValue),\r\n\r\n        // groupIdentifierKey\r\n        [groupIdentifierKey, setGroupIdentifierKey] = useState(currentGroupIdentifierKeyValue);\r\n        \r\n\r\n\r\n    // callback event handler\r\n    const callbackTextFieldChangeHandler = (e) => {\r\n        setCallback(prev => e.target.value);\r\n    }\r\n\r\n\r\n    // wait methods event handlers\r\n\r\n    const removeWaitMethodHandler = (item, e) => {\r\n        setWaitMethods(prev => {\r\n            let arr = prev.slice();\r\n            return [...arr.filter(method => method !== item)];\r\n        })\r\n    }\r\n\r\n    const waitMethodInputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n        setWaitMethodError(prev => false);\r\n        setCurrentWaitMethod(prev => {\r\n            return {...prev, [propName] : e.target.value};\r\n        })\r\n    }\r\n\r\n    const addWaitMethodHandler = () => {\r\n        let waitMethod = {...currentWaitMethod};\r\n        if(!isObjectInArray(currentWaitMethod, waitMethods))    {\r\n            setWaitMethods(prev => { \r\n                return [...prev, waitMethod];\r\n            });\r\n        } else  {\r\n            setWaitMethodError(prev => `We already have this Wait Method in our list of methods.`);\r\n        }\r\n        setCurrentWaitMethod(prev => ({name : \"\", args : \"\"}));\r\n    }\r\n\r\n\r\n\r\n    // type events\r\n    const radioChangeHandler = (value) => {\r\n        setType(prev => value);\r\n        if(value === \"list\")    {\r\n            setShowPaginated(true);\r\n        } else  {\r\n            setShowPaginated(false);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // selectOnChangeHandler\r\n    const selectOnchangeHandler = (value) => {\r\n        setPaginated(prev => value);\r\n    }\r\n\r\n    // objPropArgs event handlers\r\n    const handleDeleteObjPropArgs = (value, e) => {\r\n        setObjPropArgs(prev => prev.filter(item => item !== value));\r\n    }\r\n\r\n    const propArgsInputChangeHandler = (e) => {\r\n        setCurrentPropArg(prev => e.target.value);\r\n        if(e.target.value !== \"\")   {\r\n            setObjPropArgsError(prev => null);\r\n            setAddObjPropArgsButtonEnabled(true);\r\n        } else  {\r\n            setAddObjPropArgsButtonEnabled(false);\r\n        }\r\n    }\r\n\r\n    const addButtonHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setCurrentPropArg(prev => {\r\n\r\n            setObjPropArgs(prevState => {\r\n                if(prevState.includes(prev))    {\r\n                    setObjPropArgsError(prevState => `We already have \"${prev}\" in our Object Property Arguments list...`);\r\n                    return [...prevState];\r\n                } else  {\r\n                    return [...prevState, prev];\r\n                }\r\n            });\r\n            setAddObjPropArgsButtonEnabled(false);\r\n            return \"\";\r\n        });\r\n        \r\n    }\r\n\r\n    // productUrlProp event handler\r\n    const productUrlPropChangeHandler = (e) => {\r\n        setProductUrlPropError(null);\r\n        setProductUrlProp(prev => e.target.value);\r\n    }\r\n\r\n\r\n    // usage\r\n    const usageInputChangeHandler = (e) => {\r\n        setUsage(prev => e.target.value);\r\n    }\r\n\r\n\r\n     // groupIdentifierKey event hander\r\n    const groupIdentifierKeyPropChangeHandler = (value) => {\r\n        setGroupIdentifierKey(prev => value);\r\n    }\r\n\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n    // addEvaluatorObject event handler\r\n    const addEvaluatorObjectHandler = (e) => {\r\n        e.preventDefault();\r\n        if(type === \"list\") {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                paginated,\r\n            }]);\r\n        } else  {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                objPropArgs,\r\n                productUrlProp,\r\n            }]);\r\n            \r\n        }\r\n        \r\n        setCallback(prev => \"\");\r\n        setWaitMethods(prev => []);\r\n        setPaginated(false);\r\n        setObjPropArgs(prev => []);\r\n        setProductUrlProp(prv => \"\");\r\n        setAddEvaluatorButtonEnabled(false);\r\n        \r\n        \r\n    }\r\n\r\n    const removeEvaluatorHandler = (item, e) => {\r\n        setEvaluatorObjects(prev => prev.filter(evaluator => evaluator !== item));\r\n    }\r\n\r\n    const checkEvaluatorReady = () => {\r\n        if(callback === \"\")   {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        if(type === \"single\" && productUrlProp.trim() === \"\")  {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        setAddEvaluatorButtonEnabled(true);\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n     /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n\r\n\r\n\r\n\r\n    // submitHandler\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setUsageHandler(usage);\r\n        setEvaluatorObjectsHandler(evaluatorObjects, true);\r\n        // need to set error message for productUrlProp here\r\n        setGroupIdentifierKeyHandler(groupIdentifierKey)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAddWaitMethodButtonReady(prev => (currentWaitMethod.name.trim() !== \"\" && currentWaitMethod.args.trim() !== \"\"));\r\n        checkEvaluatorReady();\r\n        setEvaluatorObjectsHandler(evaluatorObjects, false);\r\n        if(evaluatorObjects.length) {\r\n            setSubmitButtonEnabled(true);\r\n        } else  {\r\n            setSubmitButtonEnabled(false);\r\n        }\r\n\r\n    }, [currentWaitMethod, callback, type, productUrlProp, evaluatorObjects]);\r\n\r\n    return (\r\n        <form className={styles[\"main-container\"]} onSubmit={submitHandler}>\r\n\r\n            <EmptyCardFlex className={styles[\"evaluator-object-container\"]}>\r\n                {evaluatorObjects.length > 0 && \r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={styles[\"added-evaluator-container\"]}>\r\n                        <h6 className={styles[\"template-title\"]}>Added Evaluator Objects</h6>\r\n\r\n                        {evaluatorObjects.map((item, index) => {\r\n                            return (\r\n                                <div className={styles[\"added-evaluator-object-container\"]} key={index}>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <div className={styles[\"label\"]}>Callback : </div>\r\n                                            <FormControl>\r\n                                                {/* onChange, padding, value, style, placeholder */}\r\n                                                <CodeEditor disabled value={item.callback}></CodeEditor>\r\n                                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                            </FormControl>\r\n                                        </li>\r\n                                        {item.waitMethods.length > 0 && <li>\r\n                                            <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                            <ul>\r\n                                                {item.waitMethods.map((method, i) => {\r\n                                                    return (\r\n                                                        <li key={i}>\r\n                                                            <ul>\r\n                                                                <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                            </ul>\r\n                                                        </li>\r\n                                                    )\r\n                                                })}\r\n                                            </ul>\r\n                                            \r\n                                        </li>}\r\n                                        {\r\n                                            item.type === \"list\" && \r\n                                            <li key={item}>\r\n                                                <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                {item.paginated.toString()}\r\n                                            </li>\r\n                                        }\r\n                                        {\r\n                                            item.type !== \"list\" && \r\n                                            <>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                    {item.objPropArgs.join(\", \")}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                    {item.productUrlProp}\r\n                                                </li>\r\n                                            </>\r\n                                        }\r\n                                        \r\n                                    </ul>\r\n                                    <span className={styles[\"remove-button\"]}>\r\n                                        <IconButton onClick={removeEvaluatorHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                        <Cancel />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                        {usage && \r\n                            <>\r\n                                <p style={{color : \"#4f72a7\"}}>Developer's comment on usage : </p>\r\n                                <p style={{color  : \"#40bb46\", fontWeight : \"bold\"}}>{usage}</p>\r\n                            </>\r\n                        }\r\n                        {groupIdentifierKey && \r\n                            <>\r\n                                <p style={{color : \"#4f72a7\"}}>Product Group / Set Identifier KEY : </p>\r\n                                <p style={{color  : \"#40bb46\", fontWeight : \"bold\"}}>{groupIdentifierKey}</p>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </Card>}\r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <h6 className={styles[\"template-title\"]}>Create Evaluator Objects</h6>\r\n                        <div className={styles[\"input-container\"]}>\r\n                            <h6 className={styles[\"template-section-title\"]}>Write an Evaluator Function</h6>\r\n                            <FormControl>\r\n                                {/* onChange, padding, value, style, placeholder */}\r\n                                <CodeEditor onChange={callbackTextFieldChangeHandler} value={callback}></CodeEditor>\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n                            {/* // wait methods */}\r\n                            <div className={styles[\"wait-methods-container\"]}>\r\n                                \r\n                                {waitMethods.length > 0 &&\r\n                                     <>\r\n                                    <h6 className={styles[\"description\"]}>Added Wait Methods</h6>\r\n                                    <div className={styles[\"added-methods\"]}>\r\n                                        \r\n                                        <ul>\r\n                                            {waitMethods.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={index}>\r\n                                                        <ul>\r\n                                                            <li><span>Method Name : </span> {item.name}</li>\r\n                                                            <li><span>Method Args : </span> {item.args}</li>\r\n                                                        </ul>\r\n                                                        <span className={styles[\"cancel-button\"]}>\r\n                                                            <IconButton onClick={removeWaitMethodHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                                            <Cancel />\r\n                                                            </IconButton>\r\n                                                        </span>\r\n                                                        \r\n                                                    </li>\r\n                                                );\r\n                                            })}\r\n                                        </ul>\r\n                                        {waitMethodError && <p className={styles[\"error-message\"]}>{waitMethodError}</p>}\r\n                                    </div>\r\n                                    </>\r\n                                }\r\n\r\n                                <div className={styles[\"wait-method-input-container\"]}>\r\n                                    <div className={styles[\"input-container-array\"]}>\r\n                                        <p className={styles[\"description\"]}>Add Puppeteer Wait Methods</p>\r\n                                        <div className={styles[\"field-container\"]}>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"name\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Name\" \r\n                                                    value={currentWaitMethod.name}\r\n                                                />\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"args\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Arguments\" \r\n                                                    value={currentWaitMethod.args}\r\n                                                />\r\n                                            </FormControl>\r\n                                        </div>\r\n                                        <div className={styles[\"button-container\"]}>\r\n                                            {addWaitMethodButtonReady && \r\n                                            <Button \r\n                                                onClick={addWaitMethodHandler}\r\n                                                type=\"button\" \r\n                                                variant=\"contained\" \r\n                                                size=\"small\" \r\n                                                color=\"default\" \r\n                                                disableElevation \r\n                                                startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                            {!addWaitMethodButtonReady && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation disabled startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n\r\n                            {/* evaluator options */}\r\n                            <div className={styles[\"evaluator-options\"]}>\r\n                                <FormControl fullWidth>\r\n                                    <RadioButtonsGroup value={type} defaultValue={type} radioOptions={radioOptions} legend=\"Evalutator Type\" onChange={radioChangeHandler} />\r\n                                </FormControl>\r\n                                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                {showPaginated &&\r\n                                    <>\r\n                                    <FormControl fullWidth>\r\n                                        <p className={styles[\"description\"]}>Is the evaluator function meant to be used for paginated starting url?</p>\r\n                                        <Select selectOnchangeHandler={selectOnchangeHandler} label=\"Is Paginated?\" options={selectOptions} uniqueProp=\"value\" optionLabelProp=\"name\" ></Select>\r\n                                    </FormControl>\r\n                                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                    </>\r\n                                }\r\n                                {!showPaginated &&\r\n                                    <>\r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <p className={styles[\"description\"]}>Object Properties as function arguments</p>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    {objPropArgs.length > 0 && \r\n                                                        <>\r\n                                                            <div className={`${styles[\"result-container\"]} ${styles[\"chip-container\"]}`}>\r\n                                                \r\n                                                                {objPropArgs.length > 0 && \r\n                                                                    objPropArgs.map((item, index) => {\r\n                                                                        return (\r\n                                                                            <Chip\r\n                                                                                key={item}\r\n                                                                                label={item}\r\n                                                                                onDelete={handleDeleteObjPropArgs.bind(this, item)}\r\n                                                                                deleteIcon={<Cancel />}\r\n                                                                            />\r\n                                                                        );\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        </>\r\n                                                    }\r\n                                                    <div>\r\n                                                        <TextField \r\n                                                            value={currentPropArg}\r\n                                                            onChange={propArgsInputChangeHandler}\r\n                                                            fullWidth \r\n                                                            label=\"Object Property Arguments\" />\r\n                                                        {objPropArgsError && <p className={styles[\"error-message\"]}>{objPropArgsError}</p>}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disableElevation \r\n                                                            onClick={addButtonHandler}\r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                        {!addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disabled\r\n                                                            disableElevation \r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        \r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    <TextField \r\n                                                        value={productUrlProp}\r\n                                                        onChange={productUrlPropChangeHandler}\r\n                                                        fullWidth \r\n                                                        label=\"Product URI Property\" />\r\n                                                        {productUrlPropError && <p className={styles[\"error-message\"]}>{productUrlPropError}</p>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                                        \r\n                                    </>\r\n                                }\r\n                                \r\n                                <div className={styles[\"buttons-container\"]}>\r\n                                {addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                {!addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" disabled size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <div className={styles[\"input-container\"]}>\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <p className={styles[\"description\"]}>This will be used to group the data into sets or maybe categories</p>\r\n                                    <div className={styles[\"field-container\"]}>\r\n                                        <FormControl fullWidth>\r\n                                        <Select \r\n                                            selectOnchangeHandler={groupIdentifierKeyPropChangeHandler} \r\n                                            label=\"Product Group / Set Identifier Key\" \r\n                                            defaultValue={[{name : \" -- Select a Property Name -- \", value : \"\"}, ...Object.keys(currentSchema).map((item, index) => {\r\n                                                return {\r\n                                                    name : item, value : item,\r\n                                                }\r\n                                            })].find(item => item[\"value\"] === currentGroupIdentifierKeyValue)}\r\n                                            options={[{name : \" -- Select a Property Name -- \", value : \"\"}, ...Object.keys(currentSchema).map((item, index) => {\r\n                                            return {\r\n                                                name : item, value : item,\r\n                                            }\r\n                                        })]} \r\n                                            uniqueProp=\"value\" \r\n                                            optionLabelProp=\"name\"\r\n                                            \r\n                                            />\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div className={styles[\"input-container-2\"]}>\r\n                                <div className={styles[\"field-container\"]}>\r\n                                    <p className={styles[\"description\"]}>Developer's comments in terms of Script Usage.</p>\r\n                                    <div className={styles[\"field-container\"]}>\r\n                                        \r\n                                        <TextField \r\n                                            value={usage}\r\n                                            multiline\r\n                                            onChange={usageInputChangeHandler}\r\n                                            fullWidth \r\n                                            label=\"Usage\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>      \r\n                    </div>  \r\n\r\n\r\n\r\n\r\n                    {/* // buttons */}\r\n                    <div className={styles[\"buttons-container\"]}>\r\n                        <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                                Cancel\r\n                        </Button>\r\n                        <Button type=\"button\" onClick={backButtonHandler} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                            Back\r\n                        </Button>\r\n                        \r\n                        {submitButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n                        {!submitButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n                        \r\n                    </div>\r\n                </Card>\r\n                {/* <Card className={styles[\"create-evaluator-card\"]}></Card> */}\r\n            </EmptyCardFlex>\r\n            {/* <EmptyCardFlex className={styles[\"evaluator-object-container\"]}>\r\n                <Card>\r\n                \r\n                </Card>\r\n                <Card className={styles[\"create-evaluator-card\"]}></Card>\r\n            </EmptyCardFlex> */}\r\n        </form>    \r\n    )\r\n}","// core\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// hooks\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport CodeEditor from \"../../../components/CodeEditor/CodeEditor\";\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport { Button, Divider, CircularProgress, FormControl } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n/***********************************************************\r\n * \r\n *    Necessary Components for Creating a Scraper Script\r\n * \r\n***********************************************************/\r\n    // creating site resource\r\n    import SelectSiteResource from \"../../../templates/SelectSiteResource/\";\r\n    import CreateSiteResource from \"../../../templates/CreateSiteResource/\";\r\n    // creating scraperDetails\r\n    import CreateScraperData from \"../../../templates/CreateScraperData/\";\r\n    // crating a model object;\r\n    import CreateModelOptions from \"../../../templates/CreateModelOptions\";\r\n    // creating evaluatorObjects;\r\n    import CreateEvaluators from \"../../../templates/CreateEvaluatos\";\r\n\r\n\r\n// styles\r\nimport styles from \"./CreateScraper.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../../config/\"; \r\nimport { toNormalString } from \"../../../utilities/string\";\r\n\r\nexport default function CreateScraper({pageTitle}) {\r\n\r\n    let {authToken} = useAuth(),\r\n        abortCont = new AbortController(),\r\n        history = useHistory(),\r\n\r\n        // siteResource object\r\n        [selectOn, setSelectOn] = useState(true),\r\n        [siteResource, setSiteResource] = useState({\r\n            _id : \"\",\r\n            siteName : \"\",\r\n            siteUrl : \"\",\r\n        }),\r\n        {data : selectOptions, setData : setSelectOptions} = useFetch(\"/api/site-resources\", {\r\n            method : \"GET\",\r\n            headers : {\r\n                \"x-auth-token\" : authToken,\r\n                \"Content-type\" : \"application/json\",\r\n            }\r\n        }),\r\n        [siteResourceReady, setSiteResourceReady] = useState(false),\r\n\r\n        // scraperDbObject\r\n        [scraperDetails, setScraperDetails] = useState({\r\n            productBrand : \"\", \r\n            imagePropName : \"\", \r\n            imageNameObject : {\r\n                shared : [],\r\n                split : [],\r\n            },\r\n            csvExcludedProps : [\"imageUris\", \"imagePaths\"],\r\n        }),\r\n        [scraperDetailsReady, setScraperDetailsReady] = useState(false),\r\n\r\n\r\n        // model object;\r\n        [modelObjectOptions, setModelObjectOptions] = useState({\r\n            schema : {\r\n                imagePaths : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                },\r\n                imageUris : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                }\r\n            },\r\n            initializedProps : []\r\n        }),\r\n        [modelObjectOptionsReady, setModelObjectOptionsReady] = useState(false),\r\n\r\n\r\n        // route object;\r\n        [routeObjectOptions, setRouteObjectOptions] = useState({\r\n            recordName : \"\",\r\n            pluralized : false,\r\n        }),\r\n\r\n        \r\n        // evaluatorObjects\r\n        [evaluatorObjects, setEvaluatorObjects] = useState([]),\r\n        [evaluatorObjectsReady, setEvaluatorObjectsReady] = useState(false),\r\n\r\n        // usage\r\n        [usage, setUsage] = useState(\"\"),\r\n\r\n        [groupIdentifierKey, setGroupIdentifierKey] = useState(null),\r\n\r\n        [submitObject, setSubmitObject] = useState({\r\n            type : null,\r\n            message : null,\r\n            loading : false,\r\n        });\r\n    \r\n\r\n    \r\n    /************************************/\r\n    /************************************/\r\n        // Event Handlers\r\n    /************************************/\r\n    /************************************/\r\n\r\n\r\n    // site resource event handlers\r\n    const selectOnchangeHandler = (id) => {\r\n        setSiteResource(prev => {\r\n            return selectOptions.find(item => item._id === id);\r\n        });\r\n    }\r\n\r\n    const siteResourceHandler = (siteResource) => {\r\n        setSiteResource(prev => ({...siteResource}))\r\n        setSelectOptions(prev => [...prev, siteResource]);\r\n    }\r\n\r\n    const setSelectHandler = (state, e) => {\r\n        e.preventDefault();\r\n        if(!state)  setSiteResource(prev => (prev));\r\n        setSelectOn(prev => state);\r\n    }\r\n\r\n    const createReadyHandler = () => {\r\n        setSiteResourceReady(prev => true);\r\n    }\r\n\r\n\r\n    // scraper details event handler\r\n    const setScraperDataHandler = (scraperDetailsObj, boolState) => {\r\n        setScraperDetails(prev => ({...prev, ...scraperDetailsObj}));\r\n        setRouteObjectOptions(prev => {\r\n            return {\r\n                recordName : scraperDetailsObj.productBrand, \r\n                pluralized : false\r\n            };\r\n        });\r\n        setScraperDetailsReady(prev => boolState);\r\n    }\r\n\r\n    // set model Object event handler\r\n    const setModelObjectHandler = (modelObject, boolState) => {\r\n        setModelObjectOptions(prev => ({...prev, ...modelObject}));\r\n        setModelObjectOptionsReady(prev => boolState);\r\n    }\r\n\r\n\r\n\r\n    // set evaluatorObjects event handlers\r\n    const setEvaluatorObjectsHandler = (value, boolState) => {\r\n        setEvaluatorObjects(prev => [...value]);\r\n        setEvaluatorObjectsReady(prev => boolState);\r\n    }\r\n\r\n\r\n    // usage handler\r\n    const setUsageHandler = (value) => {\r\n        if(value.trim() !== \"\") {\r\n            setUsage(prev => value.trim());\r\n        }\r\n    }\r\n\r\n\r\n    // groupIdentifierKeyHandler\r\n    const setGroupIdentifierKeyHandler = (value) => {\r\n        \r\n        setGroupIdentifierKey(prev => value);\r\n  \r\n    }\r\n\r\n\r\n\r\n    // back button handler\r\n    const backButtonHandler = (setter) => {\r\n        setter(prev => false);\r\n\r\n        setSubmitObject(prev => {\r\n            return {\r\n                ...prev, \r\n                message : null,\r\n                loading : false,\r\n                type : null,\r\n            }\r\n        });\r\n    }\r\n\r\n    // cancel button handler\r\n    const cancelHandler = () => {\r\n        // siteResource\r\n        setSiteResource(prev => ({\r\n            _id : \"\",\r\n            siteName : \"\",\r\n            siteUrl : \"\",\r\n        }));\r\n        setSiteResourceReady(false);\r\n\r\n        // scraperDetails\r\n        setScraperDetails(prev => ({\r\n            productBrand : \"\", \r\n            imagePropName : \"\", \r\n            imageNameObject : {\r\n                shared : [],\r\n                split : [],\r\n            },\r\n            csvExcludedProps : [\"imageUris\", \"imagePaths\"],\r\n        }));\r\n        setScraperDetailsReady(false);\r\n\r\n        // modelObject\r\n        setModelObjectOptions(prev => ({\r\n            schema : {\r\n                imagePaths : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                },\r\n                imageUris : {\r\n                    type : \"Array\",\r\n                    required : \"false\",\r\n                }\r\n            },\r\n            initializedProps : []\r\n        }));\r\n\r\n        // routeObjectOptions\r\n        setRouteObjectOptions(prev => ({\r\n            recordName : \"\",\r\n            pluralized : false,\r\n        }));\r\n\r\n        // evaluatorObjects = [];\r\n        setEvaluatorObjects(prev => []);\r\n        setUsage(prev => \"\");\r\n        setGroupIdentifierKey(prev => \"\");\r\n\r\n        //\r\n        setSubmitObject(prev => {\r\n            return {\r\n                ...prev, \r\n                message : null,\r\n                loading : false,\r\n                type : null,\r\n            }\r\n        });\r\n\r\n        setModelObjectOptionsReady(false);\r\n        setEvaluatorObjectsReady(false);\r\n    }\r\n\r\n\r\n\r\n    const saveScraperHandler = () => {\r\n\r\n        setSubmitObject(prev => {\r\n            return {\r\n                ...prev, \r\n                message : \"Saving the Scraper Script into our database...\",\r\n                loading : true,\r\n                type : \"info\",\r\n            }\r\n        });\r\n        fetch(`${baseUrl}/api/scrapers`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({\r\n                siteResource,\r\n                usage,\r\n                groupIdentifierKey,\r\n                ...scraperDetails,\r\n                modelObjectOptions,\r\n                routeObjectOptions,\r\n                evaluatorObjects,\r\n            }),\r\n            signal : abortCont.signal\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let { statusOk } = data;\r\n                if(statusOk)    {\r\n                    \r\n                    setSubmitObject(prev => {\r\n                        return {\r\n                            ...prev, \r\n                            message : \"We have successfully saved the scraper script data. You will be redirected to the page where you can run the script shortly.\",\r\n                            loading : false,\r\n                            type : \"success\",\r\n                        }\r\n                    });\r\n                    setTimeout(() => {\r\n                        \r\n                        history.push(`/manage-scrapers/run-script/${data.data._id}`);\r\n                    }, 3000);\r\n                    \r\n                } else  {\r\n                    setSubmitObject(prev => {\r\n                        return {\r\n                            ...prev, \r\n                            message : \"Something went wrong with the process of saving the script... please check the scraper script details you have filled up...\",\r\n                            loading : false,\r\n                            type : \"warning\",\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setSubmitObject(prev => {\r\n                        return {\r\n                            ...prev, \r\n                            message : `Scraper Script was not saved : ${err.message}`,\r\n                            loading : false,\r\n                            type : \"error\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        if(submitObject.type === \"success\") {\r\n\r\n        }\r\n\r\n        return () => abortCont.abort();\r\n    }, [submitObject]);\r\n\r\n    return  (\r\n        <>  \r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            \r\n            { submitObject.message !== null && \r\n                <EmptyCardFlex style={{padding : \".7rem 0\"}}>\r\n                    <Alert severity={submitObject.type}>{submitObject.loading && <CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>}{submitObject.message}</Alert>\r\n                    {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n                    <Alert severity=\"warning\">This is a warning message!</Alert>\r\n                    \r\n                    <Alert severity=\"success\">This is a success message!</Alert> */}\r\n                </EmptyCardFlex>\r\n            }\r\n\r\n            <EmptyCardFlex >\r\n                <EmptyCardFlex className={styles[\"create-scraper-container\"]}>\r\n                    {  !siteResourceReady && \r\n                        <Card className={styles[\"site-resource-card\"]}> \r\n                            {selectOn && <SelectSiteResource \r\n                                selectOnchangeHandler={selectOnchangeHandler}\r\n                                selectedSiteResource={siteResource}\r\n                                selectOptions={selectOptions}\r\n                                setSelectHandler={setSelectHandler}\r\n                                createReadyHandler={createReadyHandler}\r\n                            />}\r\n\r\n                            {!selectOn && <CreateSiteResource siteResourceHandler={siteResourceHandler} createReadyHandler={createReadyHandler} setSelectHandler={setSelectHandler} />}\r\n                        </Card>\r\n                    }\r\n                    {\r\n                        siteResourceReady &&  !scraperDetailsReady && \r\n                        <Card className={styles[\"create-scraper-card\"]}> \r\n                            <CreateScraperData currentValue={scraperDetails} setScraperDataHandler={setScraperDataHandler} cancelHandler={cancelHandler} backButtonHandler={() => backButtonHandler(setSiteResourceReady)}  />\r\n                        </Card>\r\n                    }\r\n                    {  scraperDetailsReady && !modelObjectOptionsReady &&\r\n                        <CreateModelOptions currentValue={modelObjectOptions} setModelObjectHandler={setModelObjectHandler} cancelHandler={cancelHandler} backButtonHandler={() => backButtonHandler(setScraperDetailsReady)} />\r\n                    }\r\n                    {  modelObjectOptionsReady && !evaluatorObjectsReady &&\r\n                        <CreateEvaluators \r\n                            currentValue={evaluatorObjects} \r\n                            currentUsageValue={usage}\r\n                            currentGroupIdentifierKeyValue={groupIdentifierKey}\r\n                            currentSchema={modelObjectOptions.schema}\r\n                            setGroupIdentifierKeyHandler={setGroupIdentifierKeyHandler} \r\n                            setUsageHandler={setUsageHandler} \r\n                            setEvaluatorObjectsHandler={setEvaluatorObjectsHandler} \r\n                            cancelHandler={cancelHandler}\r\n                            backButtonHandler={() => backButtonHandler(setModelObjectOptionsReady)} />\r\n                    }\r\n\r\n\r\n\r\n                    {/* showing data to be submitted to the scraper API */}\r\n\r\n\r\n\r\n                    { siteResourceReady && !evaluatorObjectsReady &&\r\n                        <Card className={styles[\"json-data\"]}>\r\n                                {siteResourceReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Site Resource : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>id</span> : {siteResource._id}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Name</span> : {siteResource.siteName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Url</span> : {siteResource.siteUrl}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                {scraperDetailsReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Scraper Details : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>Product Brand</span> : {scraperDetails.productBrand}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Prop Name</span> : {scraperDetails.imagePropName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : \r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Split</span> : {scraperDetails.imageNameObject.split.join(\", \")}</li>\r\n                                                    <li><span className={styles[\"label\"]}>Shared</span> : {scraperDetails.imageNameObject.shared.join(\", \")}</li>\r\n                                                </ul>\r\n                                            </li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : {scraperDetails.csvExcludedProps.join(\", \")}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                { modelObjectOptionsReady &&\r\n                                    <>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Model Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Schema</span> : \r\n                                                    <ul>\r\n                                                        {Object.keys(modelObjectOptions.schema).map(key => {\r\n                                                            return (\r\n                                                                <li key={key}><span className={styles[\"label\"]}>{toNormalString(key)}</span> : \r\n                                                                    <ul>\r\n                                                                        {Object.keys(modelObjectOptions.schema[key]).map(prop => {\r\n                                                                            return (\r\n                                                                                <li key={prop}><span className={styles[\"label\"]}>{toNormalString(prop)}</span> : {modelObjectOptions.schema[key][prop]}</li>\r\n                                                                            );\r\n                                                                        })}\r\n                                                                    </ul>\r\n                                                                </li>\r\n                                                            )\r\n                                                        })}\r\n                                                    </ul>\r\n                                                </li>\r\n                                                <li><span className={styles[\"label\"]}>Initialized Props</span> : \r\n                                                    <ul>\r\n                                                        {modelObjectOptions.initializedProps.map((item, index) => {\r\n                                                            return (\r\n                                                                <li key={index}><span className={styles[\"label\"]}>{toNormalString(Object.keys(item).join(\"\"))}</span> : {Object.values(item).join(\", \")}</li>\r\n                                                            );\r\n                                                        })}\r\n                                                    </ul>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Route Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Record Name</span> : {routeObjectOptions.recordName}</li>      \r\n                                                <li><span className={styles[\"label\"]}>Pluralized</span> : {routeObjectOptions.pluralized.toString()}</li>      \r\n                                            </ul>\r\n                                        </div>\r\n                                    </>\r\n                                }\r\n                                {\r\n                                    evaluatorObjects && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Evaluator Objects : </p>\r\n                                        <ul>\r\n                                            {evaluatorObjects.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={index}><span className={styles[\"label\"]}>Evaluator Object {index + 1}</span> : \r\n                                                        <ul>\r\n                                                            <li>\r\n                                                                <span className={styles[\"label\"]}>Callback</span> :\r\n                                                                {item.callback}\r\n                                                            </li>\r\n                                                            {item.waitMethods.length > 0 && <li>\r\n                                                                <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                                                <ul>\r\n                                                                    {item.waitMethods.map((method, i) => {\r\n                                                                        return (\r\n                                                                            <li key={i}>\r\n                                                                                <ul>\r\n                                                                                    <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                                    <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                                                </ul>\r\n                                                                            </li>\r\n                                                                        )\r\n                                                                    })}\r\n                                                                </ul>\r\n                                                                \r\n                                                            </li>}\r\n                                                            {\r\n                                                                item.type === \"list\" && \r\n                                                                <li>\r\n                                                                    <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                                    {item.paginated.toString()}\r\n                                                                </li>\r\n                                                            }\r\n                                                            {\r\n                                                                item.type !== \"list\" && \r\n                                                                <>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                                        {item.objPropArgs.join(\", \")}\r\n                                                                    </li>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                                        {item.productUrlProp}\r\n                                                                    </li>\r\n                                                                </>\r\n                                                            }\r\n                                                            \r\n                                                        </ul>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {usage && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Developer's comment on usage : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Usage</span> : {usage}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {groupIdentifierKey && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Developer's comment on usage : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Product Group Identifier Key</span> : {groupIdentifierKey}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                \r\n                        </Card>\r\n                    }\r\n\r\n                </EmptyCardFlex>\r\n                \r\n                <EmptyCardFlex flexDirection=\"row\">\r\n                    { evaluatorObjectsReady &&\r\n                        <Card className={styles[\"json-data\"]}>\r\n                            <h6 className={styles[\"template-section-title\"]}>Please Review the Data before submitting</h6>\r\n                                {siteResourceReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Site Resource : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>id</span> : {siteResource._id}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Name</span> : {siteResource.siteName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Site Url</span> : {siteResource.siteUrl}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                {scraperDetailsReady && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Scraper Details : </p>\r\n                                        <ul>\r\n                                            <li><span className={styles[\"label\"]}>Product Brand</span> : {scraperDetails.productBrand}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Prop Name</span> : {scraperDetails.imagePropName}</li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : \r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Split</span> : {scraperDetails.imageNameObject.split.join(\", \")}</li>\r\n                                                    <li><span className={styles[\"label\"]}>Shared</span> : {scraperDetails.imageNameObject.shared.join(\", \")}</li>\r\n                                                </ul>\r\n                                            </li>\r\n                                            <li><span className={styles[\"label\"]}>Image Name Object</span> : {scraperDetails.csvExcludedProps.join(\", \")}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                {modelObjectOptionsReady &&\r\n                                    <>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Model Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Schema</span> : \r\n                                                    <ul>\r\n                                                        {Object.keys(modelObjectOptions.schema).map(key => {\r\n                                                            return (\r\n                                                                <li key={key}><span className={styles[\"label\"]}>{toNormalString(key)}</span> : \r\n                                                                    <ul>\r\n                                                                        {Object.keys(modelObjectOptions.schema[key]).map((prop, index) => {\r\n                                                                            return (\r\n                                                                                <li key={index}><span className={styles[\"label\"]}>{toNormalString(prop)}</span> : {modelObjectOptions.schema[key][prop]}</li>\r\n                                                                            );\r\n                                                                        })}\r\n                                                                        {/* <li><span className={styles[\"label\"]}>Image Prop Name</span> : </li> */}\r\n                                                                    </ul>\r\n                                                                </li>\r\n                                                            )\r\n                                                        })}\r\n                                                    </ul>\r\n                                                </li>\r\n                                                <li><span className={styles[\"label\"]}>Initialized Props</span> : \r\n                                                    <ul>\r\n                                                        {modelObjectOptions.initializedProps.map((item, index) => {\r\n                                                            return (\r\n                                                                <li key={index}><span className={styles[\"label\"]}>{toNormalString(Object.keys(item).join(\"\"))}</span> : {Object.values(item).join(\", \")}</li>\r\n                                                            );\r\n                                                        })}\r\n                                                    {/* <li><span className={styles[\"label\"]}>id</span> : {siteResource._id}</li> */}\r\n                                                    </ul>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className={styles[\"container\"]}>\r\n                                            <p>Route Object Options : </p>\r\n                                            <ul>\r\n                                                <li><span className={styles[\"label\"]}>Record Name</span> : {routeObjectOptions.recordName}</li>      \r\n                                                <li><span className={styles[\"label\"]}>Pluralized</span> : {routeObjectOptions.pluralized.toString()}</li>      \r\n                                            </ul>\r\n                                        </div>\r\n                                    </>\r\n                                }\r\n                                {\r\n                                    evaluatorObjects && \r\n                                    <div className={styles[\"container\"]}>\r\n                                        <p>Evaluator Objects : </p>\r\n                                        <ul>\r\n                                            {evaluatorObjects.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={index}><span className={styles[\"label\"]}>Evaluator Object {index + 1}</span> : \r\n                                                        <ul>\r\n                                                            <li>\r\n                                                            <div className={styles[\"label\"]}>Callback : </div>\r\n                                                                <FormControl>\r\n                                                                    {/* onChange, padding, value, style, placeholder */}\r\n                                                                    <CodeEditor disabled value={item.callback}></CodeEditor>\r\n                                                                    {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                                                </FormControl>\r\n                                                            </li>\r\n                                                            {item.waitMethods.length > 0 && <li>\r\n                                                                <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                                                <ul>\r\n                                                                    {item.waitMethods.map((method, i) => {\r\n                                                                        return (\r\n                                                                            <li key={i}>\r\n                                                                                <ul>\r\n                                                                                    <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                                    <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                                                </ul>\r\n                                                                            </li>\r\n                                                                        )\r\n                                                                    })}\r\n                                                                </ul>\r\n                                                                \r\n                                                            </li>}\r\n                                                            {\r\n                                                                item.type === \"list\" && \r\n                                                                <li>\r\n                                                                    <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                                    {item.paginated.toString()}\r\n                                                                </li>\r\n                                                            }\r\n                                                            {\r\n                                                                item.type !== \"list\" && \r\n                                                                <>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                                        {item.objPropArgs.join(\", \")}\r\n                                                                    </li>\r\n                                                                    <li>\r\n                                                                        <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                                        {item.productUrlProp}\r\n                                                                    </li>\r\n                                                                </>\r\n                                                            }\r\n                                                            \r\n                                                        </ul>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {usage && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Developer's comment on usage : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Usage</span> : {usage}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        {groupIdentifierKey && \r\n                                            <>\r\n                                                <p className={styles[\"label\"]}>Product Key that identifies what group or set name the product belongs to : </p>\r\n                                                <ul>\r\n                                                    <li><span className={styles[\"label\"]}>Product Group Identifier Key</span> : {groupIdentifierKey}</li>\r\n                                                </ul>\r\n                                            </>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            <div className={styles[\"buttons-container\"]}>\r\n                                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                                        Cancel\r\n                                </Button>\r\n                                <Button type=\"button\" onClick={() => backButtonHandler(setEvaluatorObjectsReady)} variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                                    Back\r\n                                </Button>\r\n                                \r\n                                {submitObject.loading && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={saveScraperHandler} disableElevation disabled startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />} >\r\n                                    Saving the Scraper Script\r\n                                </Button>}\r\n\r\n                                {!submitObject.loading && !submitObject.message && <Button type=\"button\" onClick={saveScraperHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<PublishIcon />} >\r\n                                    Save the Scraper Script\r\n                                </Button>}\r\n\r\n                                {!submitObject.loading && submitObject.type === \"success\" && <Button type=\"button\" onClick={saveScraperHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<Check />} >\r\n                                    Done.\r\n                                </Button>}\r\n\r\n                                {!submitObject.loading && submitObject.type !== null && submitObject.type !== \"success\" && <Button type=\"button\" onClick={saveScraperHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation disabled startIcon={<CloseIcon />} >\r\n                                    Scraper was not saved...\r\n                                </Button>}\r\n                                \r\n                            </div>\r\n                        </Card>\r\n                    }\r\n                </EmptyCardFlex>\r\n            </EmptyCardFlex>  \r\n            \r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// custom hooks\r\nimport useFetch from \"../../../hooks/useFetch\";\r\n\r\n// Material UI Components && custom components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport { Button, TextField, FormControl, CircularProgress, Divider } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport PlayIcon from '@material-ui/icons/PlayArrow';\r\nimport DownloadIcon from '@material-ui/icons/GetApp';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PreviousIcon from '@material-ui/icons/NavigateBefore';\r\nimport MuiTable from \"../../../components/MuiTable\";\r\n\r\n// progress bar\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\n\r\n// utils\r\nimport { toCapitalizeAll, toNormalString } from \"../../../utilities/string\";\r\n\r\n// config\r\nimport { baseUrl, socketUrl, fileUrl } from \"../../../config\";\r\n\r\n\r\n// styles\r\nimport styles from \"./RunScraperScript.module.scss\";\r\n\r\n\r\n// socket.io\r\nconst socket = io(`${socketUrl}`);\r\n\r\n\r\nexport default function RunScraperScript({pageTitle})  {\r\n\r\n    let {authToken, fileToken} = useAuth(),\r\n        history = useHistory(),\r\n        {id} = useParams(),\r\n        {data : scraperData, fetchMessage} = useFetch(`/api/scrapers/${id}`),\r\n        [siteName, setSiteName] = useState(\"\"),\r\n        [productBrand, setProductBrand] = useState(\"\"),\r\n        [siteUrl, setSiteUrl] = useState(\"\"),\r\n        [csvExcludedProps, setCsvExcludedProps] = useState(null), \r\n        [groupIdentifierKey, setGroupIdentifierKey] = useState(\"\"),\r\n        [evaluatorObjects, setEvaluatorObjects] = useState([]),\r\n        [apiRoute, setApiRoute] = useState(null),\r\n        [evaluatorIndexes, setEvaluatorIndexes] = useState([]),\r\n        [usage, setUsage] = useState(null),\r\n\r\n        // script id\r\n        [scriptId, setScriptId] = useState(null),\r\n\r\n        // requiredData from user\r\n        [productsListEvaluatorUris, setProductsListEvaluatorUris] = useState([]),\r\n        [groupIdentifier, setGroupIdentifier] = useState(null),\r\n        [evaluatorArgs, setEvaluatorArgs] = useState([]),\r\n\r\n        // script state\r\n        [scriptRunning, setScriptRunning] = useState(false),\r\n        [scrapingMessage, setScrapingMessage] = useState(null),\r\n        [scrapingStatus, setScrapingStatus] = useState(null),\r\n\r\n        // next action states // downloading and saving;\r\n        [downloadingZip, setDownloadingZip] = useState(false),\r\n        [savingToDb, setSavingToDb] = useState(false),\r\n        [savingDataMessage, setSavingDataMessage] = useState(null),\r\n        [savingDataStatus, setSavingDataStatus] = useState(null),\r\n\r\n        // scraped data;\r\n        [scrapedData, setScrapedData] = useState(null),\r\n        [unscrapedData, setUnscrapedData] = useState(null),\r\n        [submitEnabled, setSubmitEnabled] = useState(false),\r\n\r\n        // io currentProcess\r\n        [currentProcess, setCurrentProcess] = useState(null),\r\n        [currentScrapedProducts, setCurrentScrapedProducts] = useState(0),\r\n        [rescraping, setRescraping] = useState(false),\r\n        [totalScrapedData, setTotalScrapedData] = useState(0),\r\n        [totalUnscrapedData, setTotalUnscrapedData] = useState(0),\r\n        [currentShownData, setCurrentShownData] = useState([]),\r\n        [productsTotal, setProductsTotal] = useState(null),\r\n\r\n\r\n        [progress, setProgress] = useState(0),\r\n\r\n        [runningScriptObject, setRunningScriptObject] = useState(null),\r\n\r\n        abortCont = new AbortController();\r\n\r\n\r\n    const groupIdentifierKeyChangeHandler = (e) => {\r\n        setGroupIdentifier(prev => e.target.value);\r\n    }\r\n\r\n    \r\n    const evaluatorUriChangeHandler = (propName, evaluatorObjectIndex, arrIndex, e) => {\r\n        e.preventDefault();\r\n        setProductsListEvaluatorUris(prev => {\r\n            let arr = [...prev];\r\n            arr[arrIndex] = {[propName] : e.target.value, evaluatorIndex : evaluatorObjectIndex};\r\n\r\n            return arr;\r\n        });\r\n    }\r\n\r\n    const backButtonHandler = () => {\r\n        history.goBack();\r\n    }\r\n\r\n\r\n    // bottom buttons event handlers       \r\n    const runScraperScriptHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        // reset the other states for downloading process.\r\n        setCurrentScrapedProducts(prev => null);\r\n        setCurrentShownData(prev => []);\r\n        setProductsTotal(prev => null);\r\n\r\n        setScrapedData(null);\r\n        setUnscrapedData(null);\r\n\r\n        setScriptRunning(prev => true);\r\n        setScrapingMessage(prev => \"Currently running the script...\");\r\n        setScrapingStatus(prev => \"info\");\r\n\r\n        fetch(`${baseUrl}/api/script/create-script/${id}`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({groupIdentifier, productsListEvaluatorUris, evaluatorArgs}),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then(res => {\r\n                if(res.ok)  {\r\n                    return res.json()\r\n                } else  {\r\n                    throw Error(\"We couldn't reach the server\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                setScriptId(prev => data.scriptId);\r\n                setTimeout(() => {\r\n                    fetch(`${baseUrl}/api/script/execute-script/${data.scriptId}`, {\r\n                        method : \"POST\",\r\n                        headers : {\r\n                            \"Content-type\" : \"application/json\",\r\n                            \"x-auth-token\" : authToken,\r\n                        },\r\n                        signal : abortCont.signal,\r\n                    })\r\n                        .then(res => {\r\n                            if(!res.ok)  {\r\n                               throw Error(\"We couldn't reach the server.\"); \r\n                            }\r\n                            return res.json();\r\n                        })\r\n                        .then(data => {\r\n                            setScriptRunning(prev => true);\r\n                            setScrapingStatus(\"info\");\r\n                            setScrapingMessage(`We are now scraping the data for ${productBrand} - ${groupIdentifier} from ${siteName}`);\r\n\r\n\r\n                        })\r\n                        .catch(err => {\r\n                            if(err.name !== \"AbortError\")   {\r\n                                setScriptRunning(prev => false); \r\n                                setScrapingMessage(err.message);\r\n                                setScrapingStatus(\"error\");\r\n                            }\r\n                            \r\n                        });\r\n                }, 1500);\r\n                \r\n\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setScriptRunning(prev => false);\r\n                    setScrapingMessage(err.message);\r\n                    setScrapingStatus(prev => \"error\");\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    // action button events handler\r\n\r\n    const downloadZipHandler = (e) => {\r\n        e.preventDefault();\r\n        setDownloadingZip(true);\r\n\r\n\r\n        fetch(`${baseUrl}/api/script/create-csv/${scriptId}`, {\r\n            method : \"GET\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            signal : abortCont.signal,\r\n        })\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n                setDownloadingZip(false);\r\n\r\n                let {filePath} = data,\r\n                    downloadUrl = `${fileUrl}${fileToken}?filePath=${filePath}&qType=download`;\r\n                \r\n\r\n                let aElem = document.createElement(\"a\");\r\n                aElem.setAttribute(\"href\", downloadUrl);\r\n                aElem.setAttribute(\"download\", true);\r\n                aElem.setAttribute(\"target\", \"_blank\");\r\n                aElem.click();\r\n\r\n                aElem.remove();\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setDownloadingZip(false);\r\n                }\r\n            });\r\n    }\r\n\r\n    const saveDataHandler = (e) => {\r\n        e.preventDefault();\r\n        setSavingToDb(true);\r\n        setSavingDataMessage(\"Currently saving the data\");\r\n        setSavingDataStatus(\"info\");\r\n\r\n\r\n        fetch(`${baseUrl}/api/script/save-data/${scriptId}`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({apiRoute, scraperId : id}),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n                let {statusOk, message} = data;\r\n                if(!statusOk)   {\r\n                    throw Error(message);\r\n                }\r\n                setSavingDataMessage(message);\r\n                setSavingDataStatus(\"success\");\r\n\r\n                let subApiRoute = apiRoute.replace(\"/api\", \"\"),\r\n                    url = `/scraped-data${subApiRoute}/all?${groupIdentifierKey}=${groupIdentifier}`;\r\n\r\n\r\n                setTimeout(() => history.push(url), 3000);\r\n\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setSavingDataMessage(err.message);\r\n                    setSavingDataStatus(\"error\");\r\n                }\r\n            });\r\n    }\r\n \r\n\r\n    // useEffect\r\n\r\n    useEffect(() => {\r\n        if(groupIdentifier !== null && groupIdentifier.trim() !== \"\")    {\r\n            setSubmitEnabled(true)\r\n        } else  {\r\n            setSubmitEnabled(false)\r\n        }\r\n\r\n    }, [productsListEvaluatorUris, groupIdentifier])\r\n\r\n\r\n    useEffect(() => {\r\n        if(scraperData._id)   {\r\n\r\n            // we set the scraper data into its own states\r\n            setEvaluatorIndexes(prev => {\r\n                return scraperData.evaluatorObjects.reduce((a, b, index) => {\r\n                    if(b.type === \"list\")   {\r\n                        a.push(index);\r\n                    }\r\n                    return a;\r\n                }, []);\r\n            });\r\n            \r\n            setSiteName(prev => scraperData.siteName);\r\n            setProductBrand(prev => scraperData.productBrand);\r\n            setSiteUrl(prev => scraperData.siteUrl);\r\n            setGroupIdentifierKey(prev => scraperData.groupIdentifierKey);\r\n            setEvaluatorObjects(prev => scraperData.evaluatorObjects);\r\n            setApiRoute(prev => scraperData.apiRoute);\r\n            setCsvExcludedProps(prev => scraperData.csvExcludedProps);\r\n            setUsage(prev => scraperData.usage);\r\n        }\r\n    }, [scraperData])\r\n\r\n    useEffect(() => {\r\n        setEvaluatorArgs(prev => {\r\n            return evaluatorIndexes.reduce((a, b) => {\r\n                a.push({evaluatorIndex : b, args : []});\r\n                return a;\r\n            }, []);\r\n        });\r\n\r\n    }, [evaluatorObjects, evaluatorIndexes]);\r\n\r\n    useEffect(() => {\r\n        \r\n        // fires up on dismounting of component\r\n\r\n        return () => {\r\n            fetch(`${baseUrl}/api/script/remove-scraper-object/${scriptId}`, {\r\n                method : \"POST\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                body : JSON.stringify({apiRoute}),\r\n                signal : abortCont.signal,\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => console.log(data))\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        console.log(err.name);\r\n                    }\r\n                });\r\n        }\r\n\r\n        \r\n    }, []);\r\n\r\n    \r\n\r\n    // prevent navigation while script running\r\n    useEffect(() => {\r\n        \r\n        function removeClick(e) {\r\n            e.preventDefault()\r\n            alert(\"Please do not navigate to any page while the script is running... try opening the pages on new tabs\");\r\n        }\r\n        if(scriptRunning)   {\r\n            Array.from(document.querySelectorAll(\"a\")).forEach(item => {\r\n                item.addEventListener(\"click\", removeClick);\r\n            });\r\n        } else  {\r\n            Array.from(document.querySelectorAll(\"a\")).forEach(item => {\r\n                item.removeEventListener(\"click\", removeClick);\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            Array.from(document.querySelectorAll(\"a\")).forEach(item => {\r\n                item.removeEventListener(\"click\", removeClick);\r\n            });\r\n        }\r\n    }, [scriptRunning]);\r\n\r\n    /* SOCKET IO CONNECTION */\r\n    // socket.on(\"connection\")\r\n    socket.on(\"current-process\", (data) => {\r\n\r\n        if(scriptId === data.scriptId)  {\r\n    \r\n            if(data.phase === \"initial-scraping\")   {\r\n\r\n                setCurrentProcess(prev => data);\r\n                if(data.totalProducts)  {\r\n                    setProductsTotal(prev => data.totalProducts)\r\n                }\r\n            }\r\n\r\n            if(data.phase === \"data-scraping\")  {\r\n                if(currentProcess && typeof currentProcess.phase !== \"undefined\" && currentProcess.phase === \"initial-scraping\") {\r\n                    setCurrentProcess(prev => data);\r\n                }\r\n                if(data.totalScrapedData > totalScrapedData)  {\r\n                    setTotalScrapedData(prev => {\r\n                        return data.totalScrapedData;\r\n                    });\r\n                    setProgress(prev => (Number(data.totalScrapedData) / Number(productsTotal)) * 100 );\r\n                }\r\n                \r\n            }\r\n\r\n\r\n            if(data.phase === \"set-rescraping\") {\r\n                setRescraping(prev => true);\r\n                if(data.totalUnscrapedData > 0 && totalUnscrapedData !== data.totalUnscrapedData)    {\r\n                    setTotalUnscrapedData(prev => data.totalUnscrapedData);\r\n                    setTotalScrapedData(prev => {\r\n                        return data.totalScrapedData;\r\n                    });\r\n                    setProgress(prev => (Number(data.totalScrapedData) / Number(data.totalUnscrapedData)) * 100 );\r\n                }\r\n            }\r\n\r\n\r\n            if(data.phase === \"data-rescraping\")    {\r\n                if(currentProcess && typeof currentProcess.phase !== \"undefined\" && currentProcess.phase === \"data-scraping\") {\r\n                    setCurrentProcess(prev => data);\r\n                }\r\n                if(data.totalScrapedData > totalScrapedData)  {\r\n                    setTotalScrapedData(prev => {\r\n                        return data.totalScrapedData;\r\n                    });\r\n\r\n                    setProgress(prev => (Number(data.totalScrapedData) / Number(totalUnscrapedData)) * 100 );\r\n                }\r\n            }\r\n\r\n\r\n            if(data.phase === \"image-downloading\")   {\r\n                if(currentProcess &&  (currentProcess.phase === \"data-scraping\" || currentProcess.phase === \"data-rescraping\")) {\r\n                    setCurrentProcess(prev => data);\r\n                }\r\n                if(scrapingMessage !== `We are now downloading the images for the scraped the data : ${productBrand} - ${groupIdentifier} from ${siteName}`)    {\r\n                    setScrapingMessage(`We are now downloading the images for the scraped the data : ${productBrand} - ${groupIdentifier} from ${siteName}`);\r\n                }\r\n                \r\n            }\r\n\r\n            if(data.phase === \"finalizing\")  {\r\n                setScriptRunning(prev => false);\r\n                setScrapingStatus(\"success\");\r\n                setScrapingMessage(`We have successfully scraped the data for ${productBrand} - ${groupIdentifier} from ${siteName}`);\r\n\r\n\r\n                setCurrentProcess(prev => null);\r\n                setScrapedData(data.data);\r\n                setUnscrapedData(data.unscrapedData);\r\n\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>\r\n            {/* <pre style={{wordBreak : \"break-word\"}}>\r\n                {JSON.stringify(scraperData, null, 4)}\r\n            </pre> */}\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            {scrapingMessage && !savingDataStatus && <EmptyCardFlex className={styles[\"message-container-top\"]}>\r\n                {scrapingStatus &&\r\n                    <Alert severity={scrapingStatus}>\r\n                        {scrapingStatus === \"info\" && \r\n                            <>\r\n                                <CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"primary\"  />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                            </>\r\n                        }\r\n                        {scrapingMessage}\r\n                    </Alert>\r\n                }\r\n            </EmptyCardFlex>}\r\n\r\n\r\n            {savingDataStatus && \r\n                <EmptyCardFlex className={styles[\"message-container-top\"]}>\r\n                {savingDataStatus &&\r\n                    <Alert severity={savingDataStatus}>\r\n                        {savingDataStatus === \"info\" && \r\n                            <>\r\n                                <CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"primary\"  />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                            </>\r\n                        }\r\n                        {savingDataMessage}\r\n                    </Alert>\r\n                }\r\n                </EmptyCardFlex>\r\n            }\r\n\r\n\r\n\r\n            { scriptRunning && currentProcess && \r\n                <Card>\r\n                    {!rescraping && \r\n                        <>\r\n                            <h6 className={styles[\"template-section-title\"]}>{toCapitalizeAll(toNormalString(currentProcess.phase, \"url\"))} - Total number of products to scrape : <span className={styles[\"highlighted-2\"]}>{productsTotal}</span></h6>\r\n                            <h6 className={styles[\"template-section-title\"]}>Current Scraped Products : <span className={styles[\"highlighted-2\"]}>{totalScrapedData}</span> / <span className={styles[\"highlighted-2\"]}>{productsTotal}</span></h6>\r\n                        </>\r\n                    }\r\n\r\n                    {rescraping && \r\n                        <>\r\n                            <h6 className={styles[\"template-section-title\"]}>{toCapitalizeAll(toNormalString(currentProcess.phase, \"url\"))} - Total number of products to scrape : <span className={styles[\"highlighted-2\"]}>{productsTotal}</span></h6>\r\n                            <h6 className={styles[\"template-section-title\"]}>We are currently rescraping : <span className={styles[\"highlighted-2\"]}>{totalScrapedData}</span> / <span className={styles[\"highlighted-2\"]}>{totalUnscrapedData}</span> </h6>\r\n                            <p>By default we are rescraping the unscraped data, until we at least have 5 rows of unscraped data left or lower; or if we have done rescraping the data for at least 5 times.</p>\r\n                        </>\r\n                    }\r\n                    {!rescraping && currentProcess && currentProcess.phase === \"image-download\" &&\r\n                        <>\r\n                            <h6 className={styles[\"template-section-title\"]}>We have already finished rescraping. We are now downloading the images for the scraped products. Scraping process will finish shortly.</h6>\r\n                        </>\r\n                    }\r\n\r\n                    <LinearProgress variant=\"determinate\" value={progress}  />\r\n\r\n                </Card>\r\n            }\r\n\r\n\r\n            {scrapingStatus === \"success\" && scrapedData &&\r\n\r\n                <Card>\r\n                    \r\n                    <h6 className={styles[\"section-title\"]}>Scraped Data : <span className={styles[\"highlighted\"]}>{productBrand}</span> - <span className={styles[\"highlighted-2\"]}>{groupIdentifier}</span></h6>\r\n\r\n                    <div className={styles[\"action-buttons-container\"]}>\r\n                        {!savingToDb &&\r\n                            <Button type=\"button\" onClick={saveDataHandler} variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<SaveIcon />} >\r\n                                Save to Database\r\n                            </Button>\r\n                        }\r\n                        {savingToDb &&\r\n                            <Button type=\"button\" onClick={saveDataHandler} variant=\"contained\" size=\"small\" disabled style={{}}color=\"secondary\" disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />} >\r\n                                Saving Scraped Data into our database...\r\n                            </Button>\r\n                        }\r\n                        {!downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disableElevation startIcon={<DownloadIcon />}>\r\n                            Download CSV files and Images\r\n                        </Button>}\r\n\r\n                        {downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />}>\r\n                            Downloading CSV files and Images\r\n                        </Button>}\r\n                        \r\n                    </div>\r\n\r\n\r\n                    {scrapedData && <MuiTable tableData={scrapedData} uniqueId=\"cardUri\" excludedColumns={csvExcludedProps.filter(item => item !== \"imagePaths\")}></MuiTable>}\r\n                </Card>\r\n            } \r\n            {scrapingStatus === \"success\" && unscrapedData &&\r\n\r\n                <Card>\r\n                    <h6 className={styles[\"section-title\"]}>UNSCRAPED Data : <span className={styles[\"highlighted\"]}>{productBrand}</span> - <span className={styles[\"highligted-2\"]}>{groupIdentifier}</span></h6>\r\n                    {unscrapedData && <MuiTable tableData={unscrapedData} uniqueId=\"cardUri\" excludedColumns={csvExcludedProps.filter(item => item !== \"cardUri\")}></MuiTable>}\r\n                </Card>\r\n            }\r\n\r\n\r\n            <Card>\r\n                {scraperData._id && <h5 className={styles[\"template-title\"]}>Start scraping <span className={styles[\"highlighted\"]}>{productBrand}</span> data from {siteName}</h5>}\r\n                {!scraperData._id && <h5 className={styles[\"template-title\"]}>{fetchMessage}</h5>}\r\n                {usage && \r\n                <Alert severity=\"info\" className={styles[\"usage\"]}>\r\n                    <h6 className={styles[\"section-title\"]}>Usage</h6>\r\n                    <p>{usage}</p>\r\n                </Alert>}\r\n                \r\n                <div className={styles[\"field-container\"]}>\r\n                    <div className={styles[\"input-container\"]}>\r\n                        {  !scriptRunning && groupIdentifierKey &&\r\n                            <FormControl fullWidth>\r\n                                <TextField value={groupIdentifier || \"\"} onChange={groupIdentifierKeyChangeHandler} label={toNormalString(groupIdentifierKey)} />\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n                        }\r\n\r\n                        {\r\n                            scriptRunning && \r\n                            <FormControl fullWidth>\r\n                                <TextField value={groupIdentifier || \"\"} disabled onChange={groupIdentifierKeyChangeHandler} label={toNormalString(groupIdentifierKey)} />\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n                        }\r\n\r\n                    </div>\r\n                    \r\n                    {evaluatorIndexes.length > 0 && \r\n                        evaluatorIndexes.map((item, i) => {\r\n                            return (\r\n                                <div key={item} className={styles[\"input-container\"]}>\r\n                                    {!scriptRunning && groupIdentifierKey && \r\n                                        <FormControl fullWidth key={item}>\r\n                                            <TextField onChange={evaluatorUriChangeHandler.bind(this, \"url\", item, i)} label={`Starting Poin URL`} />\r\n                                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                        </FormControl>\r\n                                    }\r\n\r\n                                    {\r\n                                        scriptRunning && \r\n                                        <FormControl fullWidth key={item}>\r\n                                            <TextField disabled onChange={evaluatorUriChangeHandler.bind(this, \"url\", item, i)} label={`Starting Poin URL`} />\r\n                                            {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                        </FormControl>\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                        \r\n                    }\r\n                </div>\r\n\r\n                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                {scraperData._id && <div className={styles[\"buttons-container\"]}>\r\n                    \r\n                    {scriptRunning && <Button onClick={backButtonHandler} type=\"button\" disabled variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>}\r\n                    {!scriptRunning && <Button onClick={backButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>}\r\n\r\n\r\n                    {!scriptRunning && submitEnabled &&  <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disableElevation startIcon={<PlayIcon />} style={{color : \"white\", backgroundColor : \"green\"}}>\r\n                        Run the script\r\n                    </Button>}\r\n\r\n                    {!scriptRunning && !submitEnabled &&  <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<PlayIcon />}>\r\n                        Run the script\r\n                    </Button>}\r\n\r\n                    {scriptRunning && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />}>\r\n                        Executing the Script...\r\n                    </Button>}\r\n                </div>}\r\n\r\n                {!scraperData._id && \r\n                <div className={styles[\"buttons-container\"]}>\r\n                    <Button onClick={backButtonHandler} type=\"button\" disabled variant=\"contained\" size=\"small\" style={{}}color=\"secondary\" disableElevation startIcon={<PreviousIcon />} >\r\n                        Back\r\n                    </Button>\r\n                    {!scriptRunning && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={runScraperScriptHandler} disabled disableElevation startIcon={<PlayIcon />}>\r\n                        Run the script\r\n                    </Button>}\r\n                    \r\n                </div>\r\n                }\r\n            </Card>\r\n            \r\n        </EmptyCardFlex>   \r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n// utils\r\nimport { isObjectInArray } from \"../../utilities/objects-array\";\r\n\r\n// Components\r\nimport { Button, TextField, Chip, FormControl, Divider, CircularProgress } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Add from '@material-ui/icons/Add';\r\nimport Create from '@material-ui/icons/Create';\r\nimport Select from \"../../components/Select\";\r\nimport RadioButtonsGroup from \"../../components/Radio\";\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CodeEditor from \"../../components/CodeEditor/\";\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n// styles\r\nimport styles from \"./EditEvaluators.module.scss\";\r\n\r\nexport default function EditEvaluators({currentValue, setEvaluatorObjectsHandler, cancelHandler})   {\r\n\r\n    let radioOptions = [\r\n            { value : \"list\", label : \"List\" },\r\n            { value : \"single\", label : \"Single\" },\r\n        ],\r\n        selectOptions = [\r\n            { name : \"True\", value : true },\r\n            { name : \"False\", value : false },\r\n        ],\r\n        [evaluatorObjects, setEvaluatorObjects] = useState(currentValue),\r\n        [submitButtonEnabled, setSubmitButtonEnabled] = useState(false),\r\n        [addEvaluatorButtonEnabled, setAddEvaluatorButtonEnabled] = useState(false),\r\n        \r\n\r\n        [callback, setCallback] = useState(\"\"),\r\n        [type, setType] = useState(\"list\"),\r\n\r\n        // waitMethod\r\n        [waitMethods, setWaitMethods] = useState([\r\n            // {name : \"waitForSelector\", args : \".page-card-info .product-info\"},\r\n            // {name : \"waitForSelector\", args : \".page-image-container .product-image\"},\r\n        ]),\r\n        [currentWaitMethod, setCurrentWaitMethod] = useState({\r\n            name: \"\",\r\n            args : \"\",\r\n        }),\r\n        [addWaitMethodButtonReady, setAddWaitMethodButtonReady] = useState(false),\r\n        [waitMethodError, setWaitMethodError] = useState(null),\r\n\r\n            // shows if evaluator TYPE === list;\r\n            [showPaginated, setShowPaginated] = useState(true),\r\n            [paginated, setPaginated] = useState(false),\r\n            \r\n            // only needed if evaluator TYPE === single;\r\n            [objPropArgs, setObjPropArgs] = useState([]),\r\n            [objPropArgsError, setObjPropArgsError] = useState(null),\r\n            [currentPropArg, setCurrentPropArg] = useState(''),\r\n            [addObjPropArgsButtonEnabled, setAddObjPropArgsButtonEnabled] = useState(false),\r\n\r\n            // productUrlProp\r\n            [productUrlProp, setProductUrlProp] = useState(\"\"),\r\n            [productUrlPropError, setProductUrlPropError] = useState(false),\r\n\r\n\r\n\r\n        // Ajax status;\r\n        [isLoading, setIsLoading] = useState(null),\r\n        [message, setMessage] = useState(null),\r\n        [status, setStatus] = useState(null);\r\n\r\n        \r\n\r\n\r\n    // callback event handler\r\n    const callbackTextFieldChangeHandler = (e) => {\r\n        setCallback(prev => e.target.value);\r\n    }\r\n\r\n\r\n    // wait methods event handlers\r\n\r\n    const removeWaitMethodHandler = (item, e) => {\r\n        setWaitMethods(prev => {\r\n            let arr = prev.slice();\r\n            return [...arr.filter(method => method !== item)];\r\n        })\r\n    }\r\n\r\n    const waitMethodInputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n        setWaitMethodError(prev => false);\r\n        setCurrentWaitMethod(prev => {\r\n            return {...prev, [propName] : e.target.value};\r\n        })\r\n    }\r\n\r\n    const addWaitMethodHandler = () => {\r\n        let waitMethod = {...currentWaitMethod};\r\n        if(!isObjectInArray(currentWaitMethod, waitMethods))    {\r\n            setWaitMethods(prev => { \r\n                return [...prev, waitMethod];\r\n            });\r\n        } else  {\r\n            setWaitMethodError(prev => `We already have this Wait Method in our list of methods.`);\r\n        }\r\n        setCurrentWaitMethod(prev => ({name : \"\", args : \"\"}));\r\n    }\r\n\r\n\r\n\r\n    // type events\r\n    const radioChangeHandler = (value) => {\r\n        setType(prev => value);\r\n        if(value === \"list\")    {\r\n            setShowPaginated(true);\r\n        } else  {\r\n            setShowPaginated(false);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // selectOnChangeHandler\r\n    const selectOnchangeHandler = (value) => {\r\n        setPaginated(prev => value);\r\n    }\r\n\r\n    // objPropArgs event handlers\r\n    const handleDeleteObjPropArgs = (value, e) => {\r\n        setObjPropArgs(prev => prev.filter(item => item !== value));\r\n    }\r\n\r\n    const propArgsInputChangeHandler = (e) => {\r\n        setCurrentPropArg(prev => e.target.value);\r\n        if(e.target.value !== \"\")   {\r\n            setObjPropArgsError(prev => null);\r\n            setAddObjPropArgsButtonEnabled(true);\r\n        } else  {\r\n            setAddObjPropArgsButtonEnabled(false);\r\n        }\r\n    }\r\n\r\n    const addButtonHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setCurrentPropArg(prev => {\r\n\r\n            setObjPropArgs(prevState => {\r\n                if(prevState.includes(prev))    {\r\n                    setObjPropArgsError(prevState => `We already have \"${prev}\" in our Object Property Arguments list...`);\r\n                    return [...prevState];\r\n                } else  {\r\n                    return [...prevState, prev];\r\n                }\r\n            });\r\n            setAddObjPropArgsButtonEnabled(false);\r\n            return \"\";\r\n        });\r\n        \r\n    }\r\n\r\n    // productUrlProp event handler\r\n    const productUrlPropChangeHandler = (e) => {\r\n        setProductUrlPropError(null);\r\n        setProductUrlProp(prev => e.target.value);\r\n    }\r\n\r\n\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n    // addEvaluatorObject event handler\r\n    const addEvaluatorObjectHandler = (e) => {\r\n        e.preventDefault();\r\n        if(type === \"list\") {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                paginated,\r\n            }]);\r\n        } else  {\r\n            setEvaluatorObjects(prev => [...prev, {\r\n                callback,\r\n                type,\r\n                waitMethods,\r\n                objPropArgs,\r\n                productUrlProp,\r\n            }]);\r\n            \r\n        }\r\n        \r\n        setCallback(prev => \"\");\r\n        setWaitMethods(prev => []);\r\n        setPaginated(false);\r\n        setObjPropArgs(prev => []);\r\n        setProductUrlProp(prv => \"\");\r\n        setAddEvaluatorButtonEnabled(false);\r\n        \r\n        \r\n    }\r\n\r\n    const removeEvaluatorHandler = (item, e) => {\r\n        setEvaluatorObjects(prev => prev.filter(evaluator => evaluator !== item));\r\n    }\r\n\r\n    const checkEvaluatorReady = () => {\r\n        if(callback === \"\")   {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        if(type === \"single\" && productUrlProp.trim() === \"\")  {\r\n            setAddEvaluatorButtonEnabled(false);\r\n            return;\r\n        }\r\n        setAddEvaluatorButtonEnabled(true);\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n    /* **************************************************** */\r\n\r\n\r\n\r\n\r\n\r\n    // submitHandler\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setEvaluatorObjectsHandler(evaluatorObjects, false, setIsLoading, setMessage, setStatus);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAddWaitMethodButtonReady(prev => (currentWaitMethod.name.trim() !== \"\" && currentWaitMethod.args.trim() !== \"\"));\r\n        checkEvaluatorReady();\r\n        if(evaluatorObjects.length) {\r\n            setSubmitButtonEnabled(true);\r\n        } else  {\r\n            setSubmitButtonEnabled(false);\r\n        }\r\n\r\n    }, [currentWaitMethod, callback, type, productUrlProp, evaluatorObjects]);\r\n\r\n    return (\r\n        <form className={styles[\"main-container\"]} onSubmit={submitHandler}>\r\n\r\n            <EmptyCardFlex className={styles[\"evaluator-object-container\"]}>\r\n\r\n\r\n                { message && \r\n                    <EmptyCardFlex style={{padding : \".7rem 0\"}}>\r\n                        <Alert severity={status}>{isLoading && <CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>}{message}</Alert>\r\n                        {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n                        <Alert severity=\"warning\">This is a warning message!</Alert>\r\n                        \r\n                        <Alert severity=\"success\">This is a success message!</Alert> */}\r\n                    </EmptyCardFlex>\r\n                }\r\n\r\n\r\n                {evaluatorObjects.length > 0 && \r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={styles[\"added-evaluator-container\"]}>\r\n                        <h6 className={styles[\"template-title\"]}>Current Evaluator Objects</h6>\r\n\r\n                        {evaluatorObjects.map((item, index) => {\r\n                            return (\r\n                                <div className={styles[\"added-evaluator-object-container\"]} key={index}>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <div className={styles[\"label\"]}>Callback : </div>\r\n                                            <FormControl>\r\n                                                {/* onChange, padding, value, style, placeholder */}\r\n                                                <CodeEditor disabled value={item.callback}></CodeEditor>\r\n                                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                            </FormControl>\r\n                                        </li>\r\n                                        {item.waitMethods.length > 0 && <li>\r\n                                            <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                            <ul>\r\n                                                {item.waitMethods.map((method, i) => {\r\n                                                    return (\r\n                                                        <li key={i}>\r\n                                                            <ul>\r\n                                                                <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                            </ul>\r\n                                                        </li>\r\n                                                    )\r\n                                                })}\r\n                                            </ul>\r\n                                            \r\n                                        </li>}\r\n                                        {\r\n                                            item.type === \"list\" && \r\n                                            <li>\r\n                                                <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                {item.paginated.toString()}\r\n                                            </li>\r\n                                        }\r\n                                        {\r\n                                            item.type !== \"list\" && \r\n                                            <>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                    {item.objPropArgs.join(\", \")}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                    {item.productUrlProp}\r\n                                                </li>\r\n                                            </>\r\n                                        }\r\n                                        \r\n                                    </ul>\r\n                                    <span className={styles[\"remove-button\"]}>\r\n                                        <IconButton onClick={removeEvaluatorHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                        <Cancel />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </Card>}\r\n                <Card className={styles[\"create-evaluator-card\"]}>\r\n                    <div className={`${styles[\"form-container\"]}`}>\r\n                        <h6 className={styles[\"template-title\"]}>Create Evaluator Objects</h6>\r\n                        <div className={styles[\"input-container\"]}>\r\n                            <h6 className={styles[\"template-section-title\"]}>Write an Evaluator Function</h6>\r\n                            <FormControl>\r\n                                {/* onChange, padding, value, style, placeholder */}\r\n                                <CodeEditor onChange={callbackTextFieldChangeHandler} value={callback}></CodeEditor>\r\n                                {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                            </FormControl>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n                            {/* // wait methods */}\r\n                            <div className={styles[\"wait-methods-container\"]}>\r\n                                \r\n                                {waitMethods.length > 0 &&\r\n                                    <>\r\n                                    <h6 className={styles[\"description\"]}>Added Wait Methods</h6>\r\n                                    <div className={styles[\"added-methods\"]}>\r\n                                        \r\n                                        <ul>\r\n                                            {waitMethods.map((item, index) => {\r\n                                                return (\r\n                                                    <li key={`${index}-${item}`}>\r\n                                                        <ul>\r\n                                                            <li><span>Method Name : </span> {item.name}</li>\r\n                                                            <li><span>Method Args : </span> {item.args}</li>\r\n                                                        </ul>\r\n                                                        <span className={styles[\"cancel-button\"]}>\r\n                                                            <IconButton onClick={removeWaitMethodHandler.bind(this, item)} className={styles[\"delete-button\"]} color=\"default\" aria-label=\"upload picture\" component=\"span\">\r\n                                                            <Cancel />\r\n                                                            </IconButton>\r\n                                                        </span>\r\n                                                        \r\n                                                    </li>\r\n                                                );\r\n                                            })}\r\n                                        </ul>\r\n                                        {waitMethodError && <p className={styles[\"error-message\"]}>{waitMethodError}</p>}\r\n                                    </div>\r\n                                    </>\r\n                                }\r\n\r\n                                <div className={styles[\"wait-method-input-container\"]}>\r\n                                    <div className={styles[\"input-container-array\"]}>\r\n                                        <p className={styles[\"description\"]}>Add Puppeteer Wait Methods</p>\r\n                                        <div className={styles[\"field-container\"]}>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"name\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Name\" \r\n                                                    value={currentWaitMethod.name}\r\n                                                />\r\n                                            </FormControl>\r\n                                            <FormControl>\r\n                                                <TextField \r\n                                                    onChange={waitMethodInputChangeHandler.bind(this, \"args\")}\r\n                                                    fullWidth \r\n                                                    label=\"Method Arguments\" \r\n                                                    value={currentWaitMethod.args}\r\n                                                />\r\n                                            </FormControl>\r\n                                        </div>\r\n                                        <div className={styles[\"button-container\"]}>\r\n                                            {addWaitMethodButtonReady && \r\n                                            <Button \r\n                                                onClick={addWaitMethodHandler}\r\n                                                type=\"button\" \r\n                                                variant=\"contained\" \r\n                                                size=\"small\" \r\n                                                color=\"default\" \r\n                                                disableElevation \r\n                                                startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                            {!addWaitMethodButtonReady && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation disabled startIcon={<Add />} >\r\n                                                Add Wait Method\r\n                                            </Button>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n\r\n\r\n                            {/* evaluator options */}\r\n                            <div className={styles[\"evaluator-options\"]}>\r\n                                <FormControl fullWidth>\r\n                                    <RadioButtonsGroup value={type} defaultValue={type} radioOptions={radioOptions} legend=\"Evalutator Type\" onChange={radioChangeHandler} />\r\n                                </FormControl>\r\n                                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                {showPaginated &&\r\n                                    <>\r\n                                    <FormControl fullWidth>\r\n                                        <p className={styles[\"description\"]}>Is the evaluator function meant to be used for paginated starting url?</p>\r\n                                        <Select selectOnchangeHandler={selectOnchangeHandler} label=\"Is Paginated?\" options={selectOptions} uniqueProp=\"value\" optionLabelProp=\"name\" ></Select>\r\n                                    </FormControl>\r\n                                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                    </>\r\n                                }\r\n                                {!showPaginated &&\r\n                                    <>\r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <p className={styles[\"description\"]}>Object Properties as function arguments</p>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    {objPropArgs.length > 0 && \r\n                                                        <>\r\n                                                            <div className={`${styles[\"result-container\"]} ${styles[\"chip-container\"]}`}>\r\n                                                \r\n                                                                {objPropArgs.length > 0 && \r\n                                                                    objPropArgs.map((item, index) => {\r\n                                                                        return (\r\n                                                                            <Chip\r\n                                                                                key={`${item}-${index}`}\r\n                                                                                label={item}\r\n                                                                                onDelete={handleDeleteObjPropArgs.bind(this, item)}\r\n                                                                                deleteIcon={<Cancel />}\r\n                                                                            />\r\n                                                                        );\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        </>\r\n                                                    }\r\n                                                    <div>\r\n                                                        <TextField \r\n                                                            value={currentPropArg}\r\n                                                            onChange={propArgsInputChangeHandler}\r\n                                                            fullWidth \r\n                                                            label=\"Object Property Arguments\" />\r\n                                                        {objPropArgsError && <p className={styles[\"error-message\"]}>{objPropArgsError}</p>}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disableElevation \r\n                                                            onClick={addButtonHandler}\r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                        {!addObjPropArgsButtonEnabled && <Button \r\n                                                            type=\"button\" \r\n                                                            variant=\"contained\" \r\n                                                            size=\"small\" \r\n                                                            disabled\r\n                                                            disableElevation \r\n                                                            startIcon={<Add />} >\r\n                                                            Add Object Property Arguments\r\n                                                        </Button>}\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                                        \r\n                                        <div className={styles[\"input-container-array\"]}>\r\n                                            <div className={styles[\"input-container-2\"]}>\r\n                                                <div className={styles[\"field-container\"]}>\r\n                                                    <TextField \r\n                                                        value={productUrlProp}\r\n                                                        onChange={productUrlPropChangeHandler}\r\n                                                        fullWidth \r\n                                                        label=\"Product URI Property\" />\r\n                                                        {productUrlPropError && <p className={styles[\"error-message\"]}>{productUrlPropError}</p>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                                        \r\n                                    </>\r\n                                }\r\n                                \r\n                                <div className={styles[\"buttons-container\"]}>\r\n                                {addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                {!addEvaluatorButtonEnabled && <Button onClick={addEvaluatorObjectHandler} type=\"button\" variant=\"contained\" disabled size=\"small\" color=\"secondary\" disableElevation startIcon={<Create />} >\r\n                                    Add to List of Evaluators\r\n                                </Button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n\r\n\r\n\r\n                    {/* // buttons */}\r\n                    <div className={styles[\"buttons-container\"]}>\r\n                        <Button onClick={cancelHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<Cancel />} >\r\n                                Cancel\r\n                        </Button>\r\n                        \r\n                        {submitButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n                        {!submitButtonEnabled && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disabled disableElevation startIcon={<SaveIcon />} >\r\n                            Save\r\n                        </Button>}\r\n                        \r\n                    </div>\r\n                </Card>\r\n            </EmptyCardFlex>\r\n        </form>    \r\n    )\r\n\r\n\r\n}","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport { baseUrl } from \"../../../config\";\r\n\r\n\r\n// components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport EditEvaluators from \"../../../templates/EditEvaluators\";\r\nimport { Button, Divider, CircularProgress, Modal, FormControl } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport PlayIcon from '@material-ui/icons/PlayArrow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Check from '@material-ui/icons/Check';\r\nimport CodeEditor from \"../../../components/CodeEditor/\";\r\n\r\n\r\nimport styles from \"./ScraperDetails.module.scss\";\r\n\r\n\r\nexport default function ScraperDetails({pageTitle})  {\r\n\r\n    let { authToken } = useAuth(),\r\n        { id } = useParams(),\r\n        {data : scraperDetails, setData : setScraperDetails} = useFetch(`/api/scrapers/${id}`, {}, null),\r\n        history = useHistory(),\r\n        [modalOpen, setModalOpen] = useState(false),\r\n        [isLoading, setIsLoading] = useState(null),\r\n        [message, setMessage] = useState(null),\r\n        [messageType, setMessageType] = useState(null),\r\n\r\n        // edit evaluator functions\r\n        [editingEvaluatorObjects, setEditingEvaluatorObjects] = useState(false),\r\n        abortCont = new AbortController();\r\n        \r\n\r\n    const executeScriptHandler = () => {\r\n        history.push(`/manage-scrapers/run-script/${id}`)\r\n    }\r\n\r\n    const editEvaluatorObjectsHandler = () => {\r\n        setEditingEvaluatorObjects(prev =>true);\r\n    }\r\n\r\n    const setEvaluatorObjectsHandler = (evaluatorObjects, state, setLoading, setMessage, setStatus) => {\r\n        \r\n        setLoading(true);\r\n        setStatus(\"info\");\r\n        setMessage(\"Updating the Evalutors\");\r\n\r\n\r\n        fetch(`${baseUrl}/api/scrapers/${id}`, {\r\n            method : \"PUT\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({...scraperDetails, evaluatorObjects}),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(\"We had problems reaching the server... We couldn't update the evaluators.\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setLoading(false);\r\n                setStatus(\"success\");\r\n                setMessage(\"We have successfully updated the evaluators.\");\r\n\r\n\r\n                setScraperDetails(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        evaluatorObjects,\r\n                    }\r\n                });\r\n                setTimeout(() => setEditingEvaluatorObjects(prev => state), 777);\r\n\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setLoading(false);\r\n                    setStatus(\"error\");\r\n                    setMessage(err.message);\r\n                }\r\n            });\r\n\r\n        \r\n        // save the data to database...\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        setEditingEvaluatorObjects(prev => false)\r\n    }\r\n\r\n    const deleteScriptHandler = () => {\r\n        setIsLoading(true);\r\n        fetch(`${baseUrl}/api/scrapers/${id}`, {\r\n            method : \"DELETE\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            signal : abortCont.signal\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.statusOk)    {\r\n                    setMessage(\"We have successfully deleted the scraper script\");\r\n                    setIsLoading(false);\r\n                    setMessageType(\"success\");\r\n                    setTimeout(() => history.push(`/manage-scrapers/`), 2500);\r\n                } else  {\r\n                    setMessage(\"We were not able to delete the scraper script\");\r\n                    setIsLoading(false);\r\n                    setMessageType(\"success\");\r\n                    setModalOpen(false);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setMessage(err.message);\r\n                    setIsLoading(false);\r\n                    setMessageType(\"error\");\r\n                    setModalOpen(false);\r\n                }\r\n            });\r\n\r\n        return () => abortCont.abort();\r\n    }\r\n\r\n    const modalSetter = (value) => {\r\n        setModalOpen(prev => value);\r\n\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [modalOpen, scraperDetails])\r\n\r\n    return (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>\r\n            {/* {message && <Alert severity={messageType}>{message}</Alert>} */}\r\n\r\n            {\r\n                editingEvaluatorObjects && \r\n\r\n                <Card>\r\n                    \r\n                    {scraperDetails && scraperDetails.evaluatorObjects && <EditEvaluators currentValue={scraperDetails.evaluatorObjects} setEvaluatorObjectsHandler={setEvaluatorObjectsHandler} cancelHandler={cancelHandler}></EditEvaluators>}\r\n\r\n                </Card>\r\n\r\n\r\n\r\n            }\r\n            {!editingEvaluatorObjects && <Card>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n                {scraperDetails && \r\n                <>\r\n                    <Divider style={{margin : \"1.4rem 0\"}} />\r\n                    <div className={styles[\"details-container\"]}>\r\n                        \r\n\r\n                        \r\n                        <div className={styles[\"container\"]}>\r\n                            <p className={styles[\"template-section-title\"]}>Site Resource Info : </p>\r\n                            <ul>\r\n                                <li><span className={styles[\"label\"]}>Site Name</span> : {scraperDetails.siteName}</li>\r\n                                <li><span className={styles[\"label\"]}>Site Url</span> : {scraperDetails.siteUrl}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                        <div className={styles[\"container\"]}>\r\n                            <p className={styles[\"template-section-title\"]}>Scraper Details : </p>\r\n                            <ul>\r\n                                <li><span className={styles[\"label\"]}>Product Brand</span> : {scraperDetails.productBrand}</li>\r\n                                <li><span className={styles[\"label\"]}>Image Prop Name</span> : {scraperDetails.imagePropName}</li>\r\n                                <li><span className={styles[\"label\"]}>Image Name Object</span> : \r\n                                    <ul>\r\n                                        <li><span className={styles[\"label\"]}>Split</span> : {scraperDetails.imageNameObject.split.join(\", \")}</li>\r\n                                        <li><span className={styles[\"label\"]}>Shared</span> : {scraperDetails.imageNameObject.shared.join(\", \")}</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li><span className={styles[\"label\"]}>Image Name Object</span> : {scraperDetails.csvExcludedProps.join(\", \")}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                        <div className={styles[\"container\"]}>\r\n                            <p className={styles[\"template-section-title\"]}>Evaluator Objects : </p>\r\n                            <ul>\r\n                                {scraperDetails.evaluatorObjects.map((item, index) => {\r\n                                    return (\r\n                                        <li key={index}><span className={styles[\"label\"]}>Evaluator Object {index + 1}</span> : \r\n                                            <ul>\r\n                                                <li>\r\n                                                    <div className={styles[\"label\"]}>Callback : </div>\r\n                                                    <FormControl>\r\n                                                        {/* onChange, padding, value, style, placeholder */}\r\n                                                        <CodeEditor disabled value={item.callback}></CodeEditor>\r\n                                                        {/* {schemaError && <p className={styles[\"error-message\"]}>{schemaError}</p>} */}\r\n                                                    </FormControl>\r\n                                                </li>\r\n                                                {item.waitMethods.length > 0 && <li>\r\n                                                    <span className={styles[\"label\"]}>Wait Methods</span> :\r\n                                                    <ul>\r\n                                                        {item.waitMethods.map((method, i) => {\r\n                                                            return (\r\n                                                                <li key={i}>\r\n                                                                    <ul>\r\n                                                                        <li><span className={styles[\"label\"]}>Name</span> : {method.name}</li>\r\n                                                                        <li><span className={styles[\"label\"]}>Args</span> : {method.args}</li>\r\n                                                                    </ul>\r\n                                                                </li>\r\n                                                            )\r\n                                                        })}\r\n                                                    </ul>\r\n                                                    \r\n                                                </li>}\r\n                                                {\r\n                                                    item.type === \"list\" && \r\n                                                    <li>\r\n                                                        <span className={styles[\"label\"]}>Paginated</span> :\r\n                                                        {item.paginated.toString()}\r\n                                                    </li>\r\n                                                }\r\n                                                {\r\n                                                    item.type !== \"list\" && \r\n                                                    <>\r\n                                                        <li>\r\n                                                            <span className={styles[\"label\"]}>Object Property Arguments</span> :\r\n                                                            {item.objPropArgs.join(\", \")}\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <span className={styles[\"label\"]}>Product Url Prop Name</span> :\r\n                                                            {item.productUrlProp}\r\n                                                        </li>\r\n                                                    </>\r\n                                                }\r\n                                                \r\n                                            </ul>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div>\r\n                                <p className={styles[\"template-section-title\"]}>Developer's comment on usage : </p>\r\n                                <ul>\r\n                                    <li><span className={styles[\"label\"]}>Usage</span> : {scraperDetails.usage}</li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div>\r\n                                <p className={styles[\"template-section-title\"]}>Product Group / Set Identifier Key : </p>\r\n                                <ul>\r\n                                    <li><span className={styles[\"label\"]}>Key</span> : {scraperDetails.groupIdentifierKey}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                }\r\n                <Divider style={{margin : \"1.4rem 0\"}} />\r\n                <div className={styles[\"buttons-container\"]}>\r\n                    \r\n                    <Button onClick={() =>modalSetter(true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<DeleteIcon />}>\r\n                        Delete Script\r\n                    </Button>\r\n                    <Button onClick={editEvaluatorObjectsHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 177 201)\", color : \"white\"}} disableElevation startIcon={<EditIcon />}>\r\n                        Edit Evaluators\r\n                    </Button>\r\n                    <Button onClick={executeScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<PlayIcon />} >\r\n                            Run the Script\r\n                    </Button>\r\n                    <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        onClose={() => modalSetter(false)}\r\n                        open={modalOpen}\r\n                        style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}\r\n                    >\r\n    \r\n                            <Alert severity=\"error\" style={{minHeight : \"300px\", minWidth : \"250px\", paddingRight : \"2rem\"}}>\r\n                                <h4 style={{color : \"rgb(201, 85, 85)\"}}className={styles[\"template-section-title\"]}>Deleting the Script?</h4>\r\n                                <Divider style={{margin : \".7rem 0 1.4rem\"}} />\r\n                                <p>Are you sure you want to delete this awesome script?</p>\r\n                                <div className={styles[\"buttons-container\"]}>\r\n                                    \r\n                                    {!isLoading && !messageType &&\r\n                                        <>\r\n                                        <Button onClick={deleteScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<DeleteIcon />}>\r\n                                            Delete Script\r\n                                        </Button>\r\n                                        \r\n                                        <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 159 171)\", color : \"white\"}} disableElevation startIcon={<Cancel />}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        </>\r\n                                    }\r\n\r\n\r\n                                    {isLoading && \r\n                                        <>\r\n                                            <Button onClick={deleteScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                                                Delete Script\r\n                                            </Button>\r\n                                            <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        </>\r\n                                    }\r\n\r\n                                    {!isLoading && messageType === \"success\" &&\r\n                                        <>\r\n                                            <Button onClick={deleteScriptHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Check />}>\r\n                                                Script Deleted\r\n                                            </Button>\r\n                                            <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            </Alert>\r\n\r\n                    </Modal>\r\n                </div>\r\n            </Card>}\r\n            \r\n        </EmptyCardFlex>\r\n    )\r\n}","// hooks\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\n\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../components/MuiTable\";\r\nimport { Button, FormControl, CircularProgress } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport DownloadIcon from '@material-ui/icons/GetApp';\r\nimport Select from \"../../components/Select\";\r\n\r\n\r\n//config\r\nimport { baseUrl, fileUrl } from \"../../config/\"; \r\nimport { toNormalString } from \"../../utilities/string\";\r\n\r\n\r\n// styles\r\nimport styles from \"./ScrapedData.module.scss\";\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n\r\n    let {authToken, fileToken} = useAuth(),\r\n\r\n        // collections of data\r\n        {data : siteResources, fetchMessage, isLoading : fetchLoading} = useFetch(`/api/site-resources/`, {}, []),\r\n        {data : scrapers } = useFetch(`/api/scrapers/`, {}, []),\r\n        {data : productSets} = useFetch(`/api/product-sets`, {}, []),\r\n        \r\n\r\n        // filtered data\r\n        [filteredScrapers, setFilteredScrapers] = useState([]),\r\n        [filteredProductSets, setFilteredProductSets] = useState([]),\r\n        [siteResource, setSiteResource] = useState(null),\r\n        [scraper, setScraper] = useState(null),\r\n        [productSet, setProductSet] = useState(null),\r\n\r\n\r\n        // productsData;\r\n\r\n        [productsData, setProductsData] = useState([]),\r\n\r\n\r\n        // next action states // downloading and saving;\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [message, setMessage] = useState(null),\r\n        [status, setStatus] = useState(null),\r\n        [downloadingZip, setDownloadingZip] = useState(false),\r\n\r\n        // abort Controller\r\n        abortCont = new AbortController();\r\n\r\n\r\n\r\n\r\n    // set site resource by select\r\n    const selectSiteResourceHandler = (value) => {\r\n        setSiteResource(prev => siteResources.find(item => item.siteName === value));\r\n        setFilteredScrapers(prev => {\r\n            return scrapers.filter(item => item.siteName === value);\r\n        });\r\n        setFilteredProductSets(prev => []);\r\n        setProductSet(prev => null);\r\n        setScraper(prev => null);\r\n        setDownloadingZip(prev => false);\r\n    }\r\n\r\n    // set productBrand by select\r\n    const selectScraperHandler = (value) => {\r\n        setScraper(prev => filteredScrapers.find(item => item.productBrand === value));\r\n        setFilteredProductSets(prev => {\r\n            return productSets.filter(item => item.productBrand === value)\r\n        });\r\n        setProductSet(prev => null);\r\n    }\r\n\r\n    // productSet handler\r\n    const selectProductSetHandler = (value) => {\r\n        setProductSet(prev => filteredProductSets.find(item => item.groupIdentifier === value));\r\n    }\r\n\r\n    const createUrl = () => {\r\n        let url = `${baseUrl}`;\r\n        if(scraper) {\r\n            url += `${scraper.apiRoute}/`;\r\n            if(productSet)  {\r\n                url += `all?${scraper.groupIdentifierKey}=${productSet.groupIdentifier}`;\r\n            }\r\n            return url;\r\n        } else  {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const downloadZipHandler = (e) => {\r\n        e.preventDefault();\r\n        setDownloadingZip(true);\r\n\r\n        let { dataDirPath : dirPath, productBrand, groupIdentifier, siteName } = productSet,\r\n            { apiRoute } = scraper;\r\n        // productsData\r\n            \r\n\r\n        fetch(`${baseUrl}/api/script/create-csv-saved-data/`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify({dirPath, siteName, productBrand, groupIdentifierKey : scraper.groupIdentifierKey, groupIdentifier, apiRoute, csvExcludedProps : scraper.csvExcludedProps}),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then( res => res.json() )\r\n            .then( data => {\r\n                setDownloadingZip(false);\r\n\r\n                let {filePath} = data,\r\n                    downloadUrl = `${fileUrl}${fileToken}?filePath=${filePath}&qType=download`;\r\n                \r\n                // console.log(data);\r\n\r\n                let aElem = document.createElement(\"a\");\r\n                aElem.setAttribute(\"href\", downloadUrl);\r\n                aElem.setAttribute(\"download\", true);\r\n                aElem.setAttribute(\"target\", \"_blank\");\r\n                aElem.click();\r\n\r\n                aElem.remove();\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setDownloadingZip(false);\r\n                    console.log(err.message);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    // side effects\r\n\r\n    useEffect(() => {\r\n        if(fetchLoading)    {\r\n            setIsLoading(prev => fetchLoading);\r\n            setMessage(prev => fetchMessage);\r\n            setStatus(prev => \"info\");\r\n        } else  {\r\n            setStatus(null);\r\n            setMessage(null);\r\n            setIsLoading(null);\r\n        }\r\n        \r\n\r\n    }, [fetchLoading, fetchMessage])\r\n\r\n    useEffect(() => {\r\n        let url = createUrl();\r\n\r\n        if(url) {\r\n\r\n            setIsLoading(prev => true);\r\n            setStatus(prev => \"info\");\r\n            setMessage(\"Currently Loading data...\");\r\n\r\n            fetch(url, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                signal : abortCont.signal,\r\n            })\r\n                .then(res => {\r\n                    if(!res.ok) {\r\n                        throw Error(\"We couldn't reach the server...\")\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setProductsData(prev => data);\r\n                    if(data.length) {\r\n                        \r\n\r\n                        setIsLoading(prev => false);\r\n                        setStatus(prev => \"success\");\r\n                        setMessage(\"We have successfully fetched the data\");\r\n                    } else  {\r\n                        setIsLoading(prev => false);\r\n                        setStatus(prev => \"success\");\r\n                        setMessage(\"Query is valid, although we don't have any saved data for this set of products.\");\r\n                    }\r\n                    \r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    // setIsLoading(prev => false);\r\n                    // setStatus(prev => \"error\");\r\n                    // setMessage(err.message);\r\n                })\r\n\r\n        } else  {\r\n            setProductsData(prev => []);\r\n        }\r\n\r\n    }, [scraper, productSet]);\r\n\r\n    useEffect(() => {\r\n\r\n        return () => abortCont.abort();\r\n    }, []); \r\n    \r\n    return  (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>  \r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n\r\n            \r\n\r\n            <EmptyCardFlex >\r\n                <Card>\r\n                {!siteResource && !isLoading && <h3 className={styles[\"template-section-title\"]}>Please use the filter to display data...</h3>}\r\n                {siteResource && !productSet && !isLoading && productsData.length === 0 && <h3 className={styles[\"template-section-title\"]}>We currently have no data to display</h3>}\r\n                \r\n                {isLoading && <h3 className={styles[\"template-section-title\"]}>Currently Loading the scraped data</h3>}\r\n\r\n                {/* scraper productBrand !productSet */}\r\n                {scraper && !productSet && !isLoading && productsData.length > 0 && <h3 className={styles[\"template-section-title\"]}>Showing the scraped for <span className={styles[\"highlighted\"]}>{scraper.productBrand}</span></h3>}\r\n                \r\n                {/* scraper productBrand !productSet */}\r\n                {scraper && !isLoading && productSet && productsData.length === 0 && <h3 className={styles[\"template-section-title\"]}>We currently have no data for <span className={styles[\"highlighted\"]}>{scraper.productBrand}</span> - <span className={styles[\"highlighted-2\"]}>{productSet.groupIdentifier}</span></h3>}\r\n\r\n                {/* scraper productBrand productSet */}\r\n                {scraper && !isLoading && productSet && productsData.length > 0 && <h3 className={styles[\"template-section-title\"]}>Showing the scraped data for <span className={styles[\"highlighted\"]}>{scraper.productBrand}</span> - <span className={styles[\"highlighted-2\"]}>{productSet.groupIdentifier}</span></h3>}\r\n                <div className={styles[\"select-container\"]}>\r\n                    {siteResources.length > 0 && scrapers.length > 0 && <FormControl style={{width : \"auto\"}}>\r\n                        <Select value={siteResource} selectOnchangeHandler={selectSiteResourceHandler} label=\"Site Resource\" options={siteResources.map(item=> ({...item, labelName : `${item.siteName} - ${item.siteUrl}`}))} uniqueProp=\"siteName\" optionLabelProp=\"labelName\" ></Select>\r\n                    </FormControl>\r\n                    }\r\n\r\n                    {filteredScrapers.length > 0 && productSets.length > 0 &&\r\n                    <FormControl style={{width : \"auto\"}}>\r\n                        <Select value={scraper} selectOnchangeHandler={selectScraperHandler} label=\"Product Line / Brand\" options={filteredScrapers} uniqueProp=\"productBrand\" optionLabelProp=\"productBrand\" ></Select>\r\n                    </FormControl>\r\n                    }\r\n\r\n                    {filteredProductSets.length > 0 && \r\n                    <FormControl style={{width : \"auto\"}}>\r\n                        <Select value={productSet} selectOnchangeHandler={selectProductSetHandler} label={toNormalString(scraper.groupIdentifierKey)} options={filteredProductSets} uniqueProp=\"groupIdentifier\" optionLabelProp=\"groupIdentifier\" ></Select>\r\n                    </FormControl>\r\n                    }\r\n\r\n                    \r\n                </div>\r\n                </Card>\r\n            </EmptyCardFlex>  \r\n            {isLoading && \r\n                <EmptyCardFlex className={styles[\"message-container-top\"]}>\r\n                {message &&\r\n                    <Alert severity={status}>\r\n                        {status === \"info\" && \r\n                            <>\r\n                                <CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"primary\"  />\r\n                                &nbsp;&nbsp;&nbsp;\r\n                            </>\r\n                        }\r\n                        {message}\r\n                    </Alert>\r\n                }\r\n                </EmptyCardFlex>\r\n            }\r\n            <EmptyCardFlex style={{display : \"grid\"}}>\r\n            {productsData.length > 0 && \r\n                <Card>\r\n                    {productSet && <div className={styles[\"action-buttons-container\"]}>\r\n                       \r\n                        {!downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disableElevation startIcon={<DownloadIcon />}>\r\n                            Download CSV files and Images\r\n                        </Button>}\r\n\r\n                        {downloadingZip && <Button type=\"button\" variant=\"contained\" size=\"small\" color=\"primary\" onClick={downloadZipHandler} disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} color=\"secondary\"  />}>\r\n                            Downloading CSV files and Images\r\n                        </Button>}\r\n                        \r\n                    </div>}\r\n\r\n                    <MuiTable tableData={productsData} uniqueId=\"_id\" excludedColumns={[\"imageUris\", \"dateCreated\", \"cardUri\", \"__v\", \"productUri\", \"multiFaced\"]}></MuiTable>\r\n\r\n                </Card>\r\n            }\r\n            </EmptyCardFlex>\r\n        </EmptyCardFlex>\r\n    )\r\n}","// hooks\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport { useParams } from \"react-router\";\r\nimport  { baseUrl } from \"../../../config\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../../components/MuiTable\";\r\n\r\n\r\n// styles\r\nimport styles from \"./ScrapedDataTable.module.scss\"\r\n\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n    let { authToken } = useAuth(),\r\n        { apiRoute } = useParams(),\r\n        { data : scraperDetails } = useFetch(`/api/scrapers/single?apiRoute=/api/${apiRoute}`),\r\n        [productData, setProductData] = useState(null),\r\n        [siteName, setSiteName] = useState(\"\"),\r\n        [productBrand, setProductBrand] = useState(\"\"),\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [hasError, setHasError] = useState(false),\r\n        abortCont = new AbortController();\r\n        \r\n\r\n    useEffect(() => {\r\n        if(scraperDetails.apiRoute)    {\r\n            let queryString = window.location.search;\r\n\r\n            setIsLoading(\"We are currently loading the data...\");\r\n            setSiteName(prev => scraperDetails.siteName);\r\n            setProductBrand(prev => scraperDetails.productBrand);\r\n\r\n\r\n            fetch(`${baseUrl}${scraperDetails.apiRoute}/all${queryString}`, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                signal : abortCont.signal\r\n            })\r\n                .then(res => res.json())\r\n                .then(dataObject => {\r\n                    setIsLoading(false);\r\n                    \r\n                    if(Array.isArray(dataObject))    {\r\n                        setHasError(false);\r\n                        setProductData(prev => dataObject);\r\n                    } else  {\r\n                        throw Error(dataObject.message)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        setHasError(err.message);\r\n                    }\r\n                })\r\n        }\r\n\r\n\r\n        return () => abortCont.abort();\r\n    }, [scraperDetails])\r\n\r\n    return  (\r\n        <>  \r\n            \r\n\r\n            <EmptyCardFlex className={styles[\"main-container\"]}>\r\n                    \r\n                <Card>\r\n                    {siteName && !isLoading && !hasError &&\r\n                        <h1 className=\"page-title\">{siteName} - <span className={styles[\"highlighted\"]}>{productBrand}</span></h1>}\r\n                    {!siteName && !isLoading && !hasError &&\r\n                        <h1 className=\"page-title\">{pageTitle}</h1>}\r\n                    {isLoading && !hasError && <h1 className=\"page-title\">{isLoading}</h1>}\r\n                    {hasError && <h1 className=\"page-title\">{hasError}</h1>}\r\n\r\n\r\n                    {productData && <MuiTable tableData={productData} uniqueId=\"_id\" excludedColumns={[\"imageUris\", \"dateCreated\", \"cardUri\", \"__v\", \"productUri\", \"multiFaced\"]}></MuiTable>}\r\n                </Card>\r\n            </EmptyCardFlex>  \r\n        </>\r\n    )\r\n}","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport useAuth from \"./useAuth\";\r\n\r\nexport default function useAccessCheck(allowedPermissionLevel)  {\r\n    let { loggedUser } = useAuth(),\r\n        history = useHistory();\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if(loggedUser && loggedUser.permissionLevel < allowedPermissionLevel)   {\r\n            history.go(-1);\r\n        }\r\n\r\n    }, [loggedUser]);\r\n}","// core\r\nimport { useHistory } from \"react-router\";\r\n\r\n// hooks\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport useAccessCheck from \"../../hooks/useAccessCheck\";\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport MuiTable from \"../../components/MuiTable\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button } from '@material-ui/core';\r\nimport AddUserIcon from '@material-ui/icons/PersonAdd';\r\nimport ListAlt from '@material-ui/icons/ListAlt';\r\n\r\n\r\n// styles\r\nimport styles from \"./ManageUsers.module.scss\";\r\n\r\n// url;\r\nimport { getAllObjectKeys } from \"../../utilities/objects-array\";\r\n\r\n\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n    let history = useHistory(),\r\n        { data : users } = useFetch(\"/api/users/\"),\r\n        tableData = users.sort((a, b) => {\r\n            return a.firstName < b.firstName ? -1 : a.firstName > b.firstName ? 1 : 0;\r\n        })\r\n        .sort((a, b) => {   \r\n            return Number(b.permissionLevel) - Number(a.permissionLevel);\r\n        })\r\n        .map(item => {\r\n\r\n            const positions = [\"guest\", \"staff\", \"developer\", \"administrator\", \"site-owner\"];\r\n\r\n            const optionClickHandler = (value) => {\r\n                history.push(value);\r\n            }\r\n\r\n            return  {\r\n                ...item,\r\n                accessLevel : positions[item.permissionLevel - 1],\r\n                action : <div className={styles[\"action-column\"]} style={{display: \"flex\", flexDirection : \"row\", gap : \".7rem\", justifyContent: \"center\"}}>\r\n                    <Button \r\n                        onClick={optionClickHandler.bind(null, `/manage-users/${item._id}`)}\r\n                        startIcon={<ListAlt />} \r\n                        size=\"small\" \r\n                        style={{backgroundColor: \"rgb(85 159 171)\", color : \"white\", whiteSpace : \"nowrap\", minWidth : \"125px\", maxWidth : \"250px\"}}>View Details</Button>\r\n                        \r\n                </div>\r\n            }\r\n        }),\r\n        includedKeys = [\"_id\", \"firstName\", \"lastName\", \"username\", \"accessLevel\", \"action\",],\r\n        excludedColumns = getAllObjectKeys(tableData).filter(key => !includedKeys.includes(key));\r\n    \r\n    const addUserHandler = () => {\r\n        history.push(\"/manage-users/create\");\r\n    }\r\n\r\n\r\n    useAccessCheck(4);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            <EmptyCardFlex>\r\n                \r\n                <Card className={styles[\"main-container\"]}>\r\n                    <Button onClick={addUserHandler} startIcon={<AddUserIcon />} size=\"md\" \r\n                        style={{backgroundColor: \"rgb(35 191 112)\", color : \"white\", whiteSpace : \"nowrap\"}}>Add User</Button>\r\n                    <MuiTable tableData={tableData} uniqueId=\"_id\" excludedColumns={excludedColumns}></MuiTable>\r\n                </Card>\r\n            </EmptyCardFlex>    \r\n        </>\r\n    )\r\n}","// core\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport Select from \"../../../components/Select\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress, TextField, FormControl } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\n\r\n\r\n// styles\r\nimport styles from \"./EditUser.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../../config\";\r\n\r\n\r\n\r\nexport default function EditUser({loggedUser, user, editUserSetter, userSetter, updateStateHandler})  {\r\n\r\n    let abortCont = new AbortController(),\r\n        { authToken } = useAuth(),\r\n        [initialValue, setInitialValue] = useState({...user}),\r\n        [currentUser, setCurrentUser] = useState(user),\r\n        selectOptions = [\r\n            { name : \"Staff\", value : 2 },\r\n            { name : \"Developer\", value : 3 },\r\n            { name : \"Administrator\", value : 4 },\r\n        ].filter(item => item.value < loggedUser.permissionLevel ),\r\n        [updateButtonEnabled, setUpdateButtonEnabled] = useState(false),\r\n        [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    const inputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n\r\n        setCurrentUser(prev => {\r\n            let obj = {\r\n                ...prev,\r\n                [propName] : e.target.value,\r\n            }\r\n            userSetter(previousState => {\r\n                return obj;\r\n            });\r\n\r\n            setUpdateButtonEnabled(prev => {\r\n                return compareData(obj);\r\n            });\r\n\r\n            return obj;\r\n        });\r\n    }   \r\n\r\n    const compareData = (userObject) => {\r\n        let results = [];\r\n        for(let key in userObject)  {\r\n            results.push(userObject[key] !== initialValue[key]);\r\n        }\r\n        return results.some(res => res);\r\n    }\r\n\r\n    const cancelEditHandler = () => {\r\n        editUserSetter(false);\r\n        userSetter(previousState => {\r\n            return initialValue;\r\n        });\r\n        updateStateHandler(false, null, null);\r\n    }\r\n\r\n    const selectOnChangeHandler = (value) => {\r\n        setCurrentUser(prev => {\r\n            let obj = {\r\n                ...prev,\r\n                permissionLevel : value,\r\n            }\r\n            userSetter(previousState => {\r\n                return obj;\r\n            });\r\n\r\n            setUpdateButtonEnabled(prev => {\r\n                return compareData(obj);\r\n            });\r\n            \r\n            return obj;\r\n        });\r\n    }\r\n\r\n    const updateUserHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        updateStateHandler(true, \"Updating User Information\", \"info\");\r\n        setIsLoading(true);\r\n        setUpdateButtonEnabled(false);\r\n\r\n        fetch(`${baseUrl}/api/users/${currentUser._id}`, {\r\n            method : \"PUT\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify(currentUser),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                updateStateHandler(false, \"We have successfully updated the user's information.\", \"success\");\r\n                setIsLoading(false);\r\n                setInitialValue(currentUser);\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setIsLoading(false);\r\n                    updateStateHandler(false, err.message, \"error\");\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(currentUser);\r\n\r\n        return () => abortCont.abort();\r\n\r\n    }, [currentUser])\r\n    \r\n    return (\r\n        <Card>\r\n            <div className={styles[\"edit-user-field-container\"]}>\r\n                <FormControl fullWidth>\r\n                    <TextField \r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        value={currentUser.firstName} \r\n                        label=\"First Name\" \r\n                        onChange={inputChangeHandler.bind(this, \"firstName\")}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                    <TextField \r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        value={currentUser.lastName} \r\n                        label=\"First Name\" \r\n                        onChange={inputChangeHandler.bind(this, \"lastName\")}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                    <TextField \r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        value={currentUser.username} \r\n                        label=\"First Name\" \r\n                        disabled\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                    <Select defaultValue={selectOptions.find(item => item.value === currentUser.permissionLevel)} selectOnchangeHandler={selectOnChangeHandler} label=\"Permission / Access Level\" options={selectOptions} uniqueProp=\"value\" optionLabelProp=\"name\" ></Select>\r\n                </FormControl>\r\n            </div>\r\n            <Divider style={{margin : \"1.4rem 0\"}} />\r\n            <div className={styles[\"buttons-container-main\"]}>\r\n                <Button onClick={cancelEditHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                    Cancel\r\n                </Button>\r\n                {!updateButtonEnabled && !isLoading && <Button disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<SaveIcon />}>\r\n                    Update\r\n                </Button>}\r\n                {updateButtonEnabled && !isLoading && <Button type=\"button\" onClick={updateUserHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />}>\r\n                    Update\r\n                </Button>}\r\n                {isLoading && <Button type=\"button\" disabled onClick={updateUserHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                    Update\r\n                </Button>}\r\n            </div>\r\n        </Card>\r\n    )\r\n}","// core\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// hooks\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useAccessCheck from \"../../../hooks/useAccessCheck\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport EditUser from \"../EditUser\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress, Modal } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Check from '@material-ui/icons/Check';\r\n\r\n\r\n// styles\r\nimport styles from \"./UserDetails.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../../config\";\r\n\r\n// utils\r\nimport { toCapitalizeAll, toNormalString } from \"../../../utilities/string\";\r\n\r\n\r\n\r\nexport default function UserDetails({pageTitle})   {\r\n\r\n    useAccessCheck(4);\r\n\r\n    let history = useHistory(),\r\n        { authToken, loggedUser } = useAuth(),\r\n        { id } = useParams(),\r\n        { data : user, hasError : userFetchError, fetchMessage : userFetchMessage } = useFetch(`/api/users/${id}`),\r\n        [currentUser, setCurrentUser] = useState(user),\r\n        [modalOpen, setModalOpen] = useState(false),\r\n        positions = [\"guest\", \"staff\", \"developer\", \"administrator\", \"site-owner\"],\r\n        abortCont = new AbortController(),\r\n\r\n        // delete user states\r\n        [isLoading, setIsLoading] = useState(null),\r\n        [message, setMessage] = useState(null),\r\n        [messageType, setMessageType] = useState(null),\r\n\r\n\r\n        // edit user state\r\n        [editUserOn, setEditUserOn] = useState(false);\r\n    \r\n\r\n    const modalSetter = (value) => {\r\n        setModalOpen(prev => value);\r\n    };\r\n\r\n    const editUserHandler = ()  => {\r\n        setEditUserOn(true)\r\n    };\r\n\r\n    const backButtonHandler = () => {\r\n        history.push(\"/manage-users/\");\r\n    }\r\n\r\n    const deleteUserHandler = () => {\r\n        setIsLoading(true);\r\n        setMessageType(\"info\");\r\n        setMessage(\"Deleting the user...\");\r\n        fetch(`${baseUrl}/api/users/${id}`, {\r\n            method : \"DELETE\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            signal : abortCont.signal\r\n        })\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error(\"We couldn't fetch the data\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setIsLoading(false);\r\n                setMessageType(\"success\");\r\n                setMessage(\"User's information was successfully fetched.\");\r\n                setModalOpen(false);\r\n                setTimeout(() => history.push(\"/manage-users\"), 2500);\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setIsLoading(false);\r\n                    setMessageType(\"error\");\r\n                    setMessage(err.message);\r\n                    setModalOpen(false);\r\n\r\n                }\r\n            })\r\n    };\r\n    \r\n    const updateStateHandler = (loadingState, messageState, messageTypeState) => {\r\n        setIsLoading(loadingState);\r\n        setMessage(messageState);\r\n        setMessageType(messageTypeState);\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        setCurrentUser(user);        \r\n\r\n\r\n\r\n        return () => abortCont.abort();\r\n\r\n    }, [user])\r\n    return (\r\n        <>\r\n            \r\n            <EmptyCardFlex className={styles[\"main-container\"]}>\r\n                <h1 className=\"page-title\">{pageTitle}</h1>\r\n                {\r\n                    message && \r\n                    <Alert severity={messageType}>{isLoading && <><CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>&nbsp;&nbsp;&nbsp; </>}\r\n                        {message}\r\n                    </Alert>\r\n                }\r\n            \r\n                <EmptyCardFlex className={styles[\"main-cards-container\"]}>\r\n                        \r\n                    <Card>\r\n                        {/* <Divider style={{margin : \"1.4rem 0\"}} /> */}\r\n                        \r\n                        \r\n                        {!userFetchError && <div className={styles[\"user-info-container\"]}>\r\n                            <ul className={styles[\"user-info-list\"]}>\r\n                                <li><span className={styles[\"label\"]}>ID</span> : <span className={styles[\"value\"]}>{currentUser._id}</span></li>\r\n                                <li><span className={styles[\"label\"]}>First Name</span> : <span className={styles[\"value\"]}>{currentUser.firstName}</span></li>\r\n                                <li><span className={styles[\"label\"]}>Last Name</span> : <span className={styles[\"value\"]}>{currentUser.lastName}</span></li>\r\n                                <li><span className={styles[\"label\"]}>username</span> : <span className={styles[\"value\"]}>{currentUser.username}</span></li>\r\n                                <li><span className={styles[\"label\"]}>Access Level</span> : <span className={styles[\"value\"]}>{currentUser.permissionLevel ? toCapitalizeAll(toNormalString(positions[currentUser.permissionLevel - 1], \"url\")) : \"\"}</span></li>\r\n                            </ul>\r\n                        </div>}\r\n                        {\r\n                            userFetchError && \r\n                            <Alert severity=\"error\">\r\n                                {userFetchMessage}\r\n                            </Alert>\r\n                        }\r\n\r\n                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                        {currentUser && loggedUser && <>\r\n                        {\r\n                            (loggedUser.permissionLevel <= currentUser.permissionLevel || editUserOn) && \r\n                            <div className={styles[\"buttons-container-main\"]}>\r\n                                <Button onClick={backButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                    Back to Users' List\r\n                                </Button>\r\n                                <Button disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<DeleteIcon />}>\r\n                                    Delete User\r\n                                </Button>\r\n                                <Button disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\"  disableElevation startIcon={<EditIcon />}>\r\n                                    Edit User\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                        {(loggedUser.permissionLevel > currentUser.permissionLevel && !editUserOn) && <div className={styles[\"buttons-container-main\"]}>\r\n                        \r\n                            {!userFetchError && !message &&\r\n                            <>\r\n                                <Button onClick={backButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                    Back to Users' List\r\n                                </Button>\r\n                                <Button onClick={() =>modalSetter(true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<DeleteIcon />}>\r\n                                    Delete User\r\n                                </Button>\r\n                                <Button onClick={editUserHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 177 201)\", color : \"white\"}} disableElevation startIcon={<EditIcon />}>\r\n                                    Edit User\r\n                                </Button>\r\n                            </>\r\n                            }\r\n                            {userFetchError && !message && \r\n                            <>\r\n                                <Button onClick={backButtonHandler} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                    Back to Users' List\r\n                                </Button>\r\n                                <Button onClick={() =>modalSetter(true)} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<DeleteIcon />}>\r\n                                    Delete User\r\n                                </Button>\r\n                                <Button onClick={editUserHandler} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\"  disableElevation startIcon={<EditIcon />}>\r\n                                    Edit User\r\n                                </Button>\r\n                                \r\n                            </>\r\n                            }\r\n\r\n                            {message && messageType === \"success\" &&\r\n                            <>\r\n                                <Button onClick={backButtonHandler} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                    Back to Users' List\r\n                                </Button>\r\n                                <Button onClick={() =>modalSetter(true)} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<DeleteIcon />}>\r\n                                    User Deleted\r\n                                </Button>\r\n                                <Button onClick={editUserHandler} disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\"  disableElevation startIcon={<EditIcon />}>\r\n                                    Edit User\r\n                                </Button>\r\n                                \r\n                            </>\r\n                            }\r\n                            <Modal\r\n                                aria-labelledby=\"transition-modal-title\"\r\n                                aria-describedby=\"transition-modal-description\"\r\n                                onClose={() => modalSetter(false)}\r\n                                open={modalOpen}\r\n                                style={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\"}}\r\n                            >\r\n            \r\n                                    <Alert severity=\"error\" style={{minHeight : \"300px\", minWidth : \"250px\", paddingRight : \"2rem\"}}>\r\n                                        <h4 style={{color : \"rgb(201, 85, 85)\"}}className={styles[\"template-section-title\"]}>Deleting the User?</h4>\r\n                                        <Divider style={{margin : \".7rem 0 1.4rem\"}} />\r\n                                        <p>Are you sure you want to delete this user? Is he/she annoying?</p>\r\n                                        <div className={styles[\"buttons-container\"]}>\r\n                                            \r\n                                            {!isLoading && !messageType &&\r\n                                                <>\r\n                                                <Button onClick={deleteUserHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(201, 85, 85)\", color : \"white\"}} disableElevation startIcon={<DeleteIcon />}>\r\n                                                    Delete User\r\n                                                </Button>\r\n                                                \r\n                                                <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 159 171)\", color : \"white\"}} disableElevation startIcon={<Cancel />}>\r\n                                                    Cancel\r\n                                                </Button>\r\n                                                </>\r\n                                            }\r\n\r\n\r\n                                            {isLoading && \r\n                                                <>\r\n                                                    <Button onClick={deleteUserHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                                                        Deleting User\r\n                                                    </Button>\r\n                                                    <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                                    Cancel\r\n                                                    </Button>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {!isLoading && messageType === \"success\" &&\r\n                                                <>\r\n                                                    <Button onClick={deleteUserHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Check />}>\r\n                                                        User Deleted\r\n                                                    </Button>\r\n                                                    <Button onClick={() =>modalSetter(false)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<Cancel />}>\r\n                                                    Cancel\r\n                                                    </Button>\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </Alert>\r\n\r\n                            </Modal>\r\n                        </div>}\r\n                        </>}\r\n                    </Card>\r\n                    {editUserOn && \r\n                        <EditUser loggedUser={loggedUser} user={currentUser} editUserSetter={setEditUserOn} userSetter={setCurrentUser} updateStateHandler={updateStateHandler} />\r\n                    }\r\n                </EmptyCardFlex>    \r\n            </EmptyCardFlex>\r\n        </>    \r\n    )\r\n}","import EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\n\r\nimport styles from \"./ManageTasks.module.scss\"\r\n\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            <EmptyCardFlex className={styles[\"main-container\"]}>\r\n                <h2 className={styles[\"section-title\"]}>Page Under Construction...</h2>\r\n            </EmptyCardFlex>\r\n        </>\r\n    )\r\n}","// core\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress, TextField, FormControl } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport PasswordIcon from '@material-ui/icons/VpnKey';\r\n\r\n\r\n// styles\r\nimport styles from \"./EditInfo.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../../config\";\r\n\r\n\r\nexport default function EditInfo({currentUser, currentUserSetter, updateStateHandler, editInforHandler})  {\r\n\r\n    let abortCont = new AbortController(),\r\n        { authToken } = useAuth(),\r\n        [updateButtonEnabled, setUpdateButtonEnabled] = useState(false),\r\n        [changePassword, setChangePassword] = useState(false),\r\n        [isLoading, setIsLoading] = useState(false),\r\n\r\n        // change password message,\r\n        [passwordMessage, setPasswordMessage] = useState(null),\r\n        [passwordMessageType, setPasswordMessageType] = useState(null),\r\n\r\n        // data for submission\r\n        [firstName, setFirstName] = useState(currentUser.firstName),\r\n        [lastName, setLastName] = useState(currentUser.lastName),\r\n        [password, setPassword] = useState(null),\r\n        [passwordConf, setPasswordConf] = useState(null);\r\n\r\n\r\n\r\n    \r\n    const inputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n        let setter = propName === \"firstName\" ? setFirstName : setLastName;\r\n        setter(prev => e.target.value);\r\n    }\r\n\r\n    const cancelEditHandler = () => {\r\n        editInforHandler(prev => false);\r\n    }\r\n\r\n    \r\n\r\n    const changePasswordHandler = (value, e) => {\r\n        e.preventDefault();\r\n        setChangePassword(prev => value);\r\n        setPassword(null);\r\n        setPasswordConf(null);\r\n    }\r\n\r\n    const passwordInputChangeHandler = (propName, e) => {\r\n        let setter = propName === \"password\" ? setPassword : setPasswordConf;\r\n        setter(prev => e.target.value);\r\n    }\r\n\r\n    // update request submission\r\n    const updateUserHandler = () => {\r\n\r\n        let obj = password ? {firstName, lastName, password} : {firstName, lastName};\r\n\r\n        updateStateHandler(true, \"Currently updating your info...\", \"info\");\r\n        setIsLoading(true);\r\n\r\n        fetch(`${baseUrl}/api/users/${currentUser._id}`,    {\r\n            method : \"PUT\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify(obj),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                updateStateHandler(false, \"We have successfully updated your info!\", \"success\");\r\n                setIsLoading(false);\r\n                currentUserSetter(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        firstName,\r\n                        lastName,\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    updateStateHandler(false, err.message, \"error\");\r\n                    setIsLoading(false);\r\n                }   \r\n            });\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(changePassword && password && passwordConf) {\r\n            if(password === passwordConf)   {\r\n                if(password.trim().length >= 8) {\r\n                    setUpdateButtonEnabled(true);\r\n                    setPasswordMessage(\"Passwords met the number of required characters, and both of them matched.\");\r\n                    setPasswordMessageType(\"success\");\r\n                } else  {\r\n                    setUpdateButtonEnabled(false);\r\n                    setPasswordMessage(\"Password requires a minimum of 8 characters.\");\r\n                    setPasswordMessageType(\"error\");\r\n                }\r\n            } else  {\r\n                setUpdateButtonEnabled(false);\r\n                setPasswordMessage(\"Please type the same password on both fields.\");\r\n                setPasswordMessageType(\"error\");\r\n            }\r\n        } else if(firstName !== currentUser.firstName || lastName !== currentUser.lastName) {\r\n            setUpdateButtonEnabled(true);\r\n        } else  {\r\n            setUpdateButtonEnabled(false);\r\n        }\r\n\r\n\r\n        return () => abortCont.abort();\r\n    }, [changePassword, firstName, lastName, password, passwordConf]);\r\n    \r\n\r\n    return (\r\n        <Card>\r\n            <div className={styles[\"edit-user-field-container\"]}>\r\n                <FormControl fullWidth>\r\n                    <TextField \r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        value={firstName} \r\n                        label=\"First Name\" \r\n                        onChange={inputChangeHandler.bind(this, \"firstName\")}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth>\r\n                    <TextField \r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        value={lastName} \r\n                        label=\"Last Name\" \r\n                        onChange={inputChangeHandler.bind(this, \"lastName\")}\r\n                    />\r\n                </FormControl>\r\n                {\r\n                    changePassword && \r\n                    <>\r\n                    <FormControl fullWidth>\r\n                        <TextField \r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            label=\"Password\" \r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={passwordInputChangeHandler.bind(this, \"password\")}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl fullWidth>\r\n                        <TextField \r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            label=\"Confirm Password\" \r\n                            type=\"password\"\r\n                            value={passwordConf}\r\n                            onChange={passwordInputChangeHandler.bind(this, \"passwordConf\")}\r\n                        />\r\n                        {passwordMessage && passwordMessageType === \"error\" && <p className={styles[\"error-message\"]}>{passwordMessage}</p>}\r\n                        {passwordMessage && passwordMessageType === \"success\" && <p className={styles[\"success-message\"]}>{passwordMessage}</p>}\r\n                    </FormControl>\r\n                    </>\r\n                }\r\n            </div>\r\n            <Divider style={{margin : \"1.4rem 0\"}} />\r\n            <div className={styles[\"buttons-container-main\"]}>\r\n                {!isLoading &&\r\n                    <Button onClick={cancelEditHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                        Cancel\r\n                    </Button>\r\n                }\r\n                {isLoading &&\r\n                    <Button onClick={cancelEditHandler} type=\"button\" disabled variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                        Cancel\r\n                    </Button>\r\n                }\r\n                { isLoading && \r\n                <>\r\n                    {!changePassword && \r\n                        <Button onClick={changePasswordHandler.bind(this, true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation disabled startIcon={<PasswordIcon />}>\r\n                            Change Password\r\n                        </Button>\r\n                    }\r\n                    {changePassword &&\r\n                        <Button onClick={changePasswordHandler.bind(this, false)} type=\"button\" variant=\"contained\" size=\"small\" disabled disableElevation startIcon={<PasswordIcon />}>\r\n                            Keep Same Password\r\n                        </Button>\r\n                    }\r\n                </>\r\n                }\r\n                { !isLoading && \r\n                    <>\r\n                        {!changePassword && \r\n                            <Button onClick={changePasswordHandler.bind(this, true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation style={{backgroundColor : \"rgb(194 138 36)\", color : \"white\"}} startIcon={<PasswordIcon />}>\r\n                                Change Password\r\n                            </Button>\r\n                        }\r\n                        {changePassword &&\r\n                            <Button onClick={changePasswordHandler.bind(this, false)} type=\"button\" variant=\"contained\" size=\"small\" style={{backgroundColor : \"#67b5a6\", color : \"white\"}} disableElevation startIcon={<PasswordIcon />}>\r\n                                Keep Same Password\r\n                            </Button>\r\n                        }\r\n                    </>\r\n                }\r\n                {!updateButtonEnabled && !isLoading && <Button disabled type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disableElevation startIcon={<SaveIcon />}>\r\n                    Update My Info\r\n                </Button>}\r\n                {updateButtonEnabled && !isLoading && <Button type=\"button\" onClick={updateUserHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />}>\r\n                    Update My Info\r\n                </Button>}\r\n                {isLoading && <Button type=\"button\" disabled onClick={updateUserHandler} variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                    Updating Info...\r\n                </Button>}\r\n            </div>\r\n        </Card>\r\n    )\r\n}","// core\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n// Components\r\nimport Card from \"../../components/Card\";\r\nimport EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress } from '@material-ui/core';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nimport { toNormalString, toCapitalizeAll } from \"../../utilities/string\";\r\n\r\n// styles\r\nimport styles from \"./MyProfile.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../config\";\r\nimport EditInfo from \"./EditInfo\";\r\n\r\n\r\nexport default function ManageScrapedData({pageTitle}) {\r\n\r\n    let { loggedUser, authToken } = useAuth(),\r\n        history = useHistory(),\r\n        abortCont = new AbortController(),\r\n        positions = [\"guest\", \"staff\", \"developer\", \"administrator\", \"site-owner\"],\r\n        [currentUser, setCurrentUser] = useState(),\r\n\r\n        // edit info\r\n        [editInfoEnabled, setEditInfoEnabled] = useState(false),\r\n\r\n\r\n        // fetch states\r\n        [message, setMessage] = useState(null),\r\n        [messageType, setMessageType] = useState(null),\r\n        [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n\r\n    const updateStateHandler = (loadingState, messageState, messageTypeState) => {\r\n        setIsLoading(loadingState);\r\n        setMessage(messageState);\r\n        setMessageType(messageTypeState);\r\n    }\r\n\r\n    const editInforHandler = (value) => {\r\n        setEditInfoEnabled(value);\r\n    }\r\n\r\n    const backButtonHandler = () => {\r\n        history.goBack();\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(loggedUser) {\r\n\r\n            setMessage(\"Currently getting your information\");\r\n            setMessageType(\"info\");\r\n            setIsLoading(true);\r\n\r\n            fetch(`${baseUrl}/api/users/single?username=${loggedUser.username}&permissionLevel=${loggedUser.permissionLevel}`, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                signal : abortCont.signal,\r\n            })\r\n                .then(res => {\r\n                    return res.json()\r\n                })\r\n                .then(data => {\r\n                    setMessage(\"We have successfully fetched your information from the database.\");\r\n                    setMessageType(\"success\");\r\n                    setIsLoading(false);\r\n\r\n                    setCurrentUser(prev => data);\r\n\r\n                })\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        setMessage(\"We couldn't reach the server.\");\r\n                        setMessageType(\"error\");\r\n                        setIsLoading(false);\r\n                    }\r\n                })\r\n\r\n\r\n\r\n        }\r\n\r\n        return () => abortCont.abort();\r\n    }, [loggedUser])\r\n    \r\n\r\n    return (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>\r\n            <h1 className=\"page-title\">{pageTitle}</h1>\r\n            {\r\n                message && \r\n                <Alert severity={messageType}>{isLoading && <><CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>&nbsp;&nbsp;&nbsp; </>}\r\n                    {message}\r\n                </Alert>\r\n            }\r\n            <EmptyCardFlex className={styles[\"main-cards-container\"]}>\r\n                <Card>\r\n                    {currentUser && \r\n                    <>\r\n                        <div className={styles[\"user-info-container\"]}>\r\n                            <ul className={styles[\"user-info-list\"]}>\r\n                                <li><span className={styles[\"label\"]}>ID</span> : <span className={styles[\"value\"]}>{currentUser._id}</span></li>\r\n                                <li><span className={styles[\"label\"]}>First Name</span> : <span className={styles[\"value\"]}>{currentUser.firstName}</span></li>\r\n                                <li><span className={styles[\"label\"]}>Last Name</span> : <span className={styles[\"value\"]}>{currentUser.lastName}</span></li>\r\n                                <li><span className={styles[\"label\"]}>username</span> : <span className={styles[\"value\"]}>{currentUser.username}</span></li>\r\n                                <li><span className={styles[\"label\"]}>Access Level</span> : <span className={styles[\"value\"]}>{currentUser.permissionLevel ? toCapitalizeAll(toNormalString(positions[currentUser.permissionLevel - 1], \"url\")) : \"\"}</span></li>\r\n                            </ul>\r\n                        </div>\r\n                        <Divider style={{margin : \"1.4rem 0\"}} />\r\n                    </>\r\n                    }\r\n                    <>\r\n                        <div className={styles[\"buttons-container-main\"]}>\r\n                        {!isLoading && \r\n                            <Button onClick={backButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                Back\r\n                            </Button>\r\n                        }\r\n                        {isLoading && \r\n                            <Button onClick={backButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation disabled startIcon={<Cancel />}>\r\n                                Back\r\n                            </Button>\r\n                        }\r\n                        {!editInfoEnabled &&\r\n                            <Button onClick={editInforHandler.bind(this, true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" style={{backgroundColor : \"rgb(85 177 201)\", color : \"white\"}} disableElevation startIcon={<EditIcon />}>\r\n                                Edit My Info\r\n                            </Button>\r\n                        }\r\n                        {editInfoEnabled &&\r\n                            <Button onClick={editInforHandler.bind(this, true)} type=\"button\" variant=\"contained\" size=\"small\" color=\"default\" disabled disableElevation startIcon={<EditIcon />}>\r\n                                Edit My Info\r\n                            </Button>\r\n                        }\r\n                        </div>\r\n                    </>\r\n                    \r\n                </Card>\r\n                \r\n\r\n                {\r\n                    editInfoEnabled && \r\n                    <EditInfo currentUser={currentUser} currentUserSetter={setCurrentUser} editInforHandler={editInforHandler} updateStateHandler={updateStateHandler} ></EditInfo>\r\n                }\r\n\r\n\r\n            </EmptyCardFlex>\r\n        </EmptyCardFlex>\r\n    )\r\n}","import EmptyCardFlex from \"../../components/EmptyCardFlex\";\r\nimport styles from \"./Page404.module.scss\";\r\n\r\n\r\n\r\nexport default function Page404()   {\r\n    return (\r\n        <EmptyCardFlex className={styles[\"page404-container\"]}>\r\n            <h2 className={styles[\"page404-error\"]}>404 Error : Page not found</h2>\r\n        </EmptyCardFlex>\r\n    )\r\n}","// core\r\nimport { useHistory } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// hooks\r\nimport useAuth from \"../../../hooks/useAuth\";\r\nimport useAccessCheck from \"../../../hooks/useAccessCheck\";\r\n\r\n// Components\r\nimport Card from \"../../../components/Card\";\r\nimport EmptyCardFlex from \"../../../components/EmptyCardFlex\";\r\nimport Select from \"../../../components/Select\";\r\n\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport { Button, Divider, CircularProgress, TextField, FormControl, InputAdornment } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport PasswordIcon from '@material-ui/icons/VpnKey';\r\nimport UsernameIcon from '@material-ui/icons/AccountCircle';\r\n\r\n\r\n// styles\r\nimport styles from \"./CreateUser.module.scss\";\r\n\r\n// url;\r\nimport { baseUrl } from \"../../../config\";\r\n\r\n// utils\r\nimport { debounce } from \"../../../utilities\";\r\n\r\n\r\nexport default function CreateUser({pageTitle})    {\r\n\r\n    useAccessCheck(4);\r\n\r\n    let history = useHistory(),\r\n        abortCont = new AbortController(),\r\n        { authToken, loggedUser } = useAuth(),\r\n        [user, setUser] = useState({\r\n            firstName : null,\r\n            lastName : null,\r\n            username : null,\r\n            password : null,\r\n            permissionLevel : 2,\r\n        }),\r\n        [selectOptions, setSelectOptions] = useState([\r\n            { name : \"Staff\", value : 2 },\r\n            { name : \"Developer\", value : 3 },\r\n            { name : \"Administrator\", value : 4 },\r\n        ]),\r\n\r\n        // password\r\n        [passwordMessage, setPasswordMessage] = useState(null),\r\n        [passwordMessageType, setPasswordMessageType] = useState(null),\r\n\r\n        // save user states;\r\n        [message, setMessage] = useState(null),\r\n        [isLoading, setIsLoading] = useState(false),\r\n        [messageType, setMessageType] = useState(null),\r\n        [saveButtonEnabled, setSaveButtonEnabled] = useState(false),\r\n\r\n        // username state checker\r\n        [usernameCheckMessage, setUsernameCheckMessage] = useState(null),\r\n        [usernameCheckLoading, setUsernameCheckLoading] = useState(false),\r\n        [usernameCheckMessageType, setUsernameCheckMessageType] = useState(null);\r\n\r\n\r\n\r\n    const inputChangeHandler = (propName, e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if(propName === \"password\")   {\r\n            if(e.target.value.trim().length >= 8)    {\r\n                setPasswordMessage(\"Password is valid\");\r\n                setPasswordMessageType(\"success\");\r\n            } else  {\r\n                setPasswordMessage(\"Password must contain at least 8 characters.\");\r\n                setPasswordMessageType(\"error\");\r\n            }\r\n        }\r\n        setUser(prev => {\r\n            let obj = {\r\n                ...prev,\r\n                [propName] : e.target.value,\r\n            }\r\n            return obj;\r\n        });\r\n    }   \r\n\r\n\r\n    const selectOnChangeHandler = (value) => {\r\n        setUser(prev => {\r\n            let obj = {\r\n                ...prev,\r\n                permissionLevel : value,\r\n            }\r\n            return obj;\r\n        });\r\n    }\r\n\r\n    \r\n    const cancelButtonHandler = () => {\r\n        history.push(\"/manage-users/\")\r\n    }\r\n\r\n    const usernameKeypressHandler = (e) => {\r\n        setSaveButtonEnabled(prev => false);\r\n        setUsernameCheckMessage(\"Checking the uniqueness of entered username...\");\r\n        setUsernameCheckLoading(true);\r\n        setUsernameCheckMessageType(\"info\");\r\n        if(e.code === \"Space\")  {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    const checkUsername = debounce((e) => {\r\n\r\n        console.log(\"this is firing...\");\r\n\r\n        let enteredUsername = e.target.value.trim().replace(/\\s+/g, \"\").toLowerCase();\r\n\r\n        if(!enteredUsername.length) {\r\n            setUsernameCheckMessage(\"Please enter a username\");\r\n            setUsernameCheckLoading(false);\r\n            setUsernameCheckMessageType(\"info\");\r\n        } else  {\r\n            \r\n            \r\n\r\n\r\n            fetch(`${baseUrl}/api/users/all?username=${enteredUsername}`, {\r\n                method : \"GET\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"x-auth-token\" : authToken,\r\n                },\r\n                signal : abortCont.signal,\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if(data.length) {\r\n                        throw Error(\"This username is already in use.\")\r\n                    } else  {\r\n                        setUsernameCheckMessage(\"Username is valid.\");\r\n                        setUsernameCheckLoading(false);\r\n                        setUsernameCheckMessageType(\"success\");\r\n                        setUser(prev => {\r\n                            return {\r\n                                ...prev,\r\n                                username : enteredUsername\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    if(err.name !== \"AbortError\")   {\r\n                        setUsernameCheckMessage(err.message);\r\n                        setUsernameCheckLoading(true);\r\n                        setUsernameCheckMessageType(\"error\");\r\n                        setUser(prev => {\r\n                            return {\r\n                                ...prev,\r\n                                username : null\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n        \r\n    }, 1400, false);\r\n\r\n\r\n    const saveUserHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"YOu clicked...\")\r\n\r\n        setMessage(\"Saving User...\");\r\n        setIsLoading(true);\r\n        setMessageType(\"info\");\r\n        setSaveButtonEnabled(false);\r\n\r\n        fetch(`${baseUrl}/api/users`, {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                \"x-auth-token\" : authToken,\r\n            },\r\n            body : JSON.stringify(user),\r\n            signal : abortCont.signal,\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setMessage(\"We have successfully saved the user.\");\r\n                setIsLoading(false);\r\n                setMessageType(\"success\");\r\n                setSaveButtonEnabled(false);\r\n\r\n                let userId = data.data._id;\r\n\r\n                setTimeout(() => history.push(`/manage-users/${userId}`), 2500);\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\")   {\r\n                    setMessage(err.message);\r\n                    setIsLoading(false);\r\n                    setMessageType(\"error\");\r\n                    setSaveButtonEnabled(true);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    const checkAllFields = () => {\r\n        let results = [];\r\n\r\n        for(let key in user)    {\r\n            if(key === \"password\")    {\r\n                if(user.password && user.password.length >= 8)   {\r\n                    results.push(true);\r\n                } else  {\r\n                    results.push(false);\r\n                }\r\n            } else  {\r\n                results.push(user[key] && user[key] !== \"\");\r\n            }\r\n        }\r\n\r\n        setSaveButtonEnabled(prev => results.every(res => res));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(loggedUser)  {\r\n            setSelectOptions(prev => {\r\n                return prev.filter(item => item.value < loggedUser.permissionLevel);\r\n            });\r\n        }\r\n\r\n        checkAllFields();\r\n\r\n\r\n        return () => abortCont.abort();\r\n\r\n    }, [loggedUser, user]);\r\n\r\n    return (\r\n        <EmptyCardFlex className={styles[\"main-container\"]}>\r\n                <h1 className=\"page-title\">{pageTitle}</h1>\r\n                {\r\n                    message && \r\n                    <Alert severity={messageType}>{isLoading && <><CircularProgress style={{height: \"20px\", width : \"20px\"}}></CircularProgress>&nbsp;&nbsp;&nbsp; </>}\r\n                        {message}\r\n                    </Alert>\r\n                }\r\n            \r\n                <EmptyCardFlex className={styles[\"main-cards-container\"]}>\r\n                    <Card>  \r\n                        <form onSubmit={saveUserHandler}>\r\n                            <div className={styles[\"create-user-field-container\"]}>\r\n                                <FormControl fullWidth className={styles[\"firstName\"]}>\r\n                                    <TextField \r\n                                        value={user.firstName} \r\n                                        label=\"First Name\" \r\n                                        onChange={inputChangeHandler.bind(this, \"firstName\")}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl fullWidth className={styles[\"lastName\"]}>\r\n                                    <TextField \r\n                                        value={user.lastName} \r\n                                        label=\"Last Name\" \r\n                                        onChange={inputChangeHandler.bind(this, \"lastName\")}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl fullWidth className={styles[\"username\"]}>\r\n                                    <TextField \r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                            <UsernameIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        label=\"Username\"\r\n                                        onKeyPress={usernameKeypressHandler}\r\n                                        onChange={checkUsername}\r\n                                    />\r\n                                    {usernameCheckMessage && usernameCheckMessageType === \"error\" && <p className={styles[\"error-message\"]}>{usernameCheckMessage}</p>}\r\n                                    {usernameCheckMessage && usernameCheckMessageType === \"info\" && usernameCheckLoading && <p className={styles[\"info-message\"]}>{usernameCheckMessage}</p>}\r\n                                    {usernameCheckMessage && usernameCheckMessageType === \"info\" && !usernameCheckLoading && <p className={styles[\"info-message\"]}>{usernameCheckMessage}</p>}\r\n                                    {usernameCheckMessage && usernameCheckMessageType === \"success\" && <p className={styles[\"success-message\"]}>{usernameCheckMessage}</p>}\r\n                                </FormControl>\r\n                                <FormControl fullWidth className={styles[\"password\"]}>\r\n                                    <TextField \r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                            <PasswordIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        value={user.password} \r\n                                        label=\"Password\" \r\n                                        onChange={inputChangeHandler.bind(this, \"password\")}\r\n                                    />\r\n                                    {passwordMessage && <p className={styles[`${passwordMessageType}-message`]}>{passwordMessage}</p>}\r\n                                </FormControl>\r\n                                <FormControl fullWidth className={styles[\"permissionLevel\"]}>\r\n                                    <Select defaultValue={selectOptions.find(item => item.value === user.permissionLevel)} selectOnchangeHandler={selectOnChangeHandler} label=\"Permission / Access Level\" options={selectOptions} uniqueProp=\"value\" optionLabelProp=\"name\" ></Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            \r\n                            <Divider style={{margin : \"1.4rem 0\"}} />\r\n\r\n                            <div className={styles[\"buttons-container-main\"]}>\r\n                                <Button onClick={cancelButtonHandler} type=\"button\" variant=\"contained\" size=\"small\" color=\"secondary\" disableElevation startIcon={<Cancel />}>\r\n                                    Cancel\r\n                                </Button>\r\n                                {!saveButtonEnabled && !isLoading && <Button disabled type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />}>\r\n                                    Save User\r\n                                </Button>}\r\n\r\n                                {!saveButtonEnabled && isLoading && <Button disabled type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<CircularProgress style={{height: \"20px\", width : \"20px\"}} />}>\r\n                                    Saving the User...\r\n                                </Button>}\r\n                                {saveButtonEnabled && !isLoading && <Button type=\"submit\" variant=\"contained\" size=\"small\" color=\"primary\" disableElevation startIcon={<SaveIcon />}>\r\n                                    Save User\r\n                                </Button>}\r\n                            </div>\r\n                        </form>\r\n                    </Card>\r\n                </EmptyCardFlex>\r\n\r\n        </EmptyCardFlex>\r\n    )\r\n}","export function debounce(func, wait, immediate = false){\r\n    let timeout;\r\n    return function() {\r\n        let context = this, args = arguments;\r\n        let later = function() {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n        };\r\n        let callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(context, args);\r\n    };\r\n}\r\n\r\n\r\n\r\n","// core\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// Layout\r\nimport Layout from \"./Layout\";\r\n\r\n// routes \r\nimport routes from \"./routes\";\r\n\r\n// views \r\n    import Login from \"./views/Login\";\r\n    import Dashboard from \"./views/Dashboard\";\r\n\r\n    // Manage Scrapers\r\n    import ManageScrapers from \"./views/ManageScrapers\";\r\n        import CreateScraper from \"./views/ManageScrapers/CreateScraper/\";\r\n        import RunScraperScript from \"./views/ManageScrapers/RunScraperScript/RunScraperScript\";\r\n        import ScraperDetails from \"./views/ManageScrapers/ScraperDetails\";\r\n\r\n    // Scraped Data\r\n    import ScrapedData from \"./views/ScrapedData\";\r\n        import ScrapedDataTable from \"./views/ScrapedData/ScrapedDataTable\";\r\n\r\n    // Manage Users\r\n    import ManageUsers from \"./views/ManageUsers\";\r\n        import UserDetails from \"./views/ManageUsers/UserDetails\";\r\n\r\n    // Manage Tasks\r\n    import ManageTasks from \"./views/ManageTasks\";\r\n\r\n    // MY Profile\r\n    import MyProfile from \"./views/MyProfile\";\r\n\r\n\r\n    // 404\r\n    import Page404 from \"./views/Page404/Page404\";\r\n\r\n\r\n\r\n// css\r\nimport styles from \"./MainComponent.module.scss\";\r\nimport CreateUser from \"./views/ManageUsers/CreateUser\";\r\n\r\nexport default function Main()  {\r\n\r\n    const getRoute = (route) => {\r\n        return routes.find(item => item.path === route);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <Router>\r\n                <Switch>\r\n\r\n                    <Route path=\"/\" exact>\r\n                        <Layout><Dashboard pageTitle=\"Scraper Admin Dashboard\" /></Layout>\r\n                    </Route>\r\n\r\n                    {/* {ManageScrapers} */}\r\n                    <Route path=\"/manage-scrapers\" exact>\r\n                        <Layout><ManageScrapers pageTitle={getRoute(\"/manage-scrapers\").title} /></Layout>\r\n                    </Route>\r\n                        <Route path=\"/manage-scrapers/create-scraper/\" exact>\r\n                            <Layout><CreateScraper pageTitle=\"Create a Scraper Script\" /></Layout>\r\n                        </Route>\r\n                        \r\n                        <Route path=\"/manage-scrapers/run-script/:id\" exact>\r\n                            <Layout><RunScraperScript pageTitle=\"Run Scraper Script\" /></Layout>\r\n                        </Route>\r\n\r\n                        <Route path=\"/manage-scrapers/:id\" exact>\r\n                            <Layout><ScraperDetails pageTitle=\"Scraper Details : \" /></Layout>\r\n                        </Route>\r\n\r\n                    \r\n                    {/* Scraped Data */}\r\n                    <Route path=\"/scraped-data/\" exact>\r\n                        <Layout><ScrapedData pageTitle={getRoute(\"/scraped-data\").title} /></Layout>\r\n                    </Route>\r\n                        <Route path=\"/scraped-data/:apiRoute\">\r\n                            <Layout><ScrapedDataTable pageTitle=\"Scraped Data : \" /></Layout>\r\n                        </Route>\r\n\r\n                    {/* Manage Users */}\r\n                    <Route path=\"/manage-users\" exact>\r\n                        <Layout><ManageUsers pageTitle={getRoute(\"/manage-users\").title} /></Layout>\r\n                    </Route>\r\n                        <Route path=\"/manage-users/create\" exact>\r\n                            <Layout><CreateUser pageTitle=\"Create a New User\" /></Layout>\r\n                        </Route>\r\n                        <Route path=\"/manage-users/:id\" exact>\r\n                            <Layout><UserDetails pageTitle=\"User Information\" /></Layout>\r\n                        </Route>\r\n\r\n                    \r\n                        \r\n\r\n                    {/* Tasks*/}\r\n                    <Route path=\"/manage-tasks\" exact>\r\n                        <Layout><ManageTasks pageTitle={getRoute(\"/manage-tasks\").title} /></Layout>\r\n                    </Route>\r\n\r\n                    {/* My Profile */}\r\n                    <Route path=\"/my-profile\" exact>\r\n                        <Layout><MyProfile pageTitle=\"My Profile\" /></Layout>\r\n                    </Route>\r\n\r\n                    {/* Login */}\r\n                    <Route path=\"/login\" exact>\r\n                        <Login  />\r\n                    </Route>\r\n\r\n\r\n                    <Route path=\"/\" >\r\n                        <Layout><Page404 pageTitle={\"Page 404\"} /></Layout>\r\n                    </Route>\r\n                    \r\n                    \r\n                </Switch>\r\n                \r\n            </Router>\r\n        </div>\r\n    );\r\n}","import { blue,blueGrey, red } from '@material-ui/core/colors';\r\nimport { createTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createTheme({  \r\n    palette: {\r\n        primary: blue,\r\n        secondary: blueGrey,\r\n        error: red,\r\n    },\r\n    typography: {\r\n        button: {\r\n            textTransform: 'none',\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;","// Main Component\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainComponent from \"./MainComponent\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';    \nimport { ThemeProvider } from \"@material-ui/styles\";\n\n\nimport \"./Reset.scss\";\nimport \"./App.scss\";\nimport \"./Defaults.scss\";\n\nfunction App() {\n\t\n\treturn (\n\t\t<Router>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<MainComponent />\n\t\t\t\t</div>\n\t\t\t</ThemeProvider>\n\t\t</Router>\n\n  \t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // TODO : clean all fetch\n\t<App />,\n  \tdocument.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"Header_main-header__SyFsk\",\"button-container\":\"Header_button-container__3vTF9\",\"nav-button\":\"Header_nav-button__YOvZq\",\"bar-container\":\"Header_bar-container__1jh_l\",\"bar\":\"Header_bar__MYPLZ\",\"active\":\"Header_active__25cHA\",\"navButtonBars\":\"Header_navButtonBars__2hIiM\",\"header-nav\":\"Header_header-nav__239iq\",\"selected\":\"Header_selected__XuCDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mui-table-container\":\"MuiTable_mui-table-container__mf75k\",\"mui-table\":\"MuiTable_mui-table__3hYFg\",\"image-slider-container\":\"MuiTable_image-slider-container__2T4wy\",\"image-slider-inner\":\"MuiTable_image-slider-inner__1Tc7N\",\"image-container\":\"MuiTable_image-container__vohZE\",\"tbody\":\"MuiTable_tbody__1PBwi\",\"table-cell\":\"MuiTable_table-cell__3pgzM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"Login_template-title__3HeaR\",\"highlighted\":\"Login_highlighted__mwJI9\",\"highlighted-2\":\"Login_highlighted-2__AbQSq\",\"template-subtitle\":\"Login_template-subtitle__2EJqv\",\"template-section-title\":\"Login_template-section-title__3J7L0\",\"error-message\":\"Login_error-message__192RR\",\"description\":\"Login_description__2efaS\",\"buttons-container\":\"Login_buttons-container__2hRmy\",\"field-container\":\"Login_field-container__2Lyo9\",\"select-container\":\"Login_select-container__3KaLz\",\"main-container\":\"Login_main-container__qk8so\",\"action-buttons-container\":\"Login_action-buttons-container__18zCf\",\"form-container\":\"Login_form-container__2h7sF\",\"logo-container\":\"Login_logo-container__2rXLf\",\"site-name\":\"Login_site-name__ppjh3\",\"logo\":\"Login_logo__2K-FY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"template-title\":\"CreateScraper_template-title__3AdDm\",\"highlighted\":\"CreateScraper_highlighted__2qTu1\",\"template-subtitle\":\"CreateScraper_template-subtitle__1Lgbe\",\"template-section-title\":\"CreateScraper_template-section-title__13Ssa\",\"error-message\":\"CreateScraper_error-message__1B-co\",\"description\":\"CreateScraper_description__3DWGa\",\"buttons-container\":\"CreateScraper_buttons-container__1eOyG\",\"create-scraper-container\":\"CreateScraper_create-scraper-container__3X0-q\",\"site-resource-card\":\"CreateScraper_site-resource-card__2_Ver\",\"site-resource-select-container\":\"CreateScraper_site-resource-select-container__2324t\",\"json-data\":\"CreateScraper_json-data__12uJv\",\"label\":\"CreateScraper_label__1vOVA\",\"container\":\"CreateScraper_container__8eBYx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"Dashboard_main-container__2u9YT\",\"grid-container\":\"Dashboard_grid-container__tgNjx\",\"data-container\":\"Dashboard_data-container__3J9vQ\",\"users-container\":\"Dashboard_users-container__1oOZo\",\"scrapers-container\":\"Dashboard_scrapers-container__x52tj\",\"profile-container\":\"Dashboard_profile-container__JjutC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"CreateSiteResource_form-container__p6rkl\",\"template-title\":\"CreateSiteResource_template-title__Y3MG_\",\"form\":\"CreateSiteResource_form__17gO9\",\"input-container\":\"CreateSiteResource_input-container__2dSI8\",\"buttons-container\":\"CreateSiteResource_buttons-container__2nv8O\"};"],"sourceRoot":""}